[{"/Users/xinwng/Projects/Explorify/client/src/index.js":"1","/Users/xinwng/Projects/Explorify/client/src/App.js":"2","/Users/xinwng/Projects/Explorify/client/src/explorify.js":"3","/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js":"4","/Users/xinwng/Projects/Explorify/client/src/component/search_results.js":"5","/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js":"6","/Users/xinwng/Projects/Explorify/client/src/component/get_recommendations.js":"7","/Users/xinwng/Projects/Explorify/client/src/component/rec_results.js":"8","/Users/xinwng/Projects/Explorify/client/src/component/get_user_data.js":"9","/Users/xinwng/Projects/Explorify/client/src/pre_pages/login_page.js":"10","/Users/xinwng/Projects/Explorify/client/src/pre_pages/loading.js":"11","/Users/xinwng/Projects/Explorify/client/src/component/export_to_playlist.js":"12"},{"size":219,"mtime":1624150925466,"results":"13","hashOfConfig":"14"},{"size":1198,"mtime":1624161785734,"results":"15","hashOfConfig":"14"},{"size":7546,"mtime":1624229091876,"results":"16","hashOfConfig":"14"},{"size":4072,"mtime":1624193277113,"results":"17","hashOfConfig":"14"},{"size":4589,"mtime":1624178229343,"results":"18","hashOfConfig":"14"},{"size":5736,"mtime":1624176968961,"results":"19","hashOfConfig":"14"},{"size":1278,"mtime":1624092836672,"results":"20","hashOfConfig":"14"},{"size":1541,"mtime":1624189323154,"results":"21","hashOfConfig":"14"},{"size":1799,"mtime":1624180958169,"results":"22","hashOfConfig":"14"},{"size":4317,"mtime":1624177598541,"results":"23","hashOfConfig":"14"},{"size":2523,"mtime":1624165425236,"results":"24","hashOfConfig":"14"},{"size":882,"mtime":1624182761432,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fe4i75",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"/Users/xinwng/Projects/Explorify/client/src/index.js",[],["61","62"],"/Users/xinwng/Projects/Explorify/client/src/App.js",[],"/Users/xinwng/Projects/Explorify/client/src/explorify.js",["63","64","65","66"],"/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js",["67","68"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  makeStyles,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport SearchResults from \"./search_results\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"5px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  search_bar: {\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    maxWidth: 500,\n    justify: \"center\",\n    padding: 7,\n    margin: \"auto\",\n    \"background-color\": \"white\",\n    borderRadius: 5,\n    // minHeight: 150,\n    marginBottom: 30,\n  },\n  search_result: {\n    // paddingTop: -10,\n    // marginTop: -20,\n  },\n  selected_seeds: {\n    // paddingTop: 10,\n    // marginTop: 20,\n    maxWidth: 400,\n  },\n  selected_seeds_header: {\n    fontSize: 18,\n    marginTop: -5,\n    fontWeight: \"600\",\n    marginLeft: 13,\n    textAlign: \"left\",\n    // paddingTop: 3,\n    // marginTop: 20,\n    // maxWidth: 350,\n  },\n  selected_seeds_songs: {\n    fontSize: 14,\n    lineHeight: 2,\n    marginLeft: 20,\n    textAlign: \"left\",\n    // fontWeight: \"600\",\n    // paddingTop: 3,\n    // marginTop: 20,\n    // maxWidth: 350,\n  },\n});\n\nexport default function SearchBar({ auth, onChange }) {\n  const classes = useStyles();\n  const { token } = auth;\n\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n  const [seleceted_seeds, set_selected_seeds] = useState([]);\n  const [seed_ids, set_seed_ids] = useState([]);\n\n  async function spotify_search_songs() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    // console.log(\"search_query\", search_query);\n    const search_type_query = \"type=track\";\n    // console.log(\"token\", token);\n    const { data } = await axios.get(\n      `${url}?q=${search_query}&${search_type_query}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    if (data && data.tracks) {\n      set_search_result(data.tracks.items);\n    }\n  }\n\n  useEffect(() => {\n    onChange(seleceted_seeds);\n  }, [onChange, seleceted_seeds]);\n\n  // console.log(\"search_result\", search_result);\n\n  return (\n    <Grid\n      container\n      // style={{ \"align-items\": \"flex-end\" }}\n      spacing={0}\n      justify=\"center\"\n    >\n      <Grid item xs={12}>\n        <Box className={classes.search_bar}>\n          <TextField\n            id={\"outlined-basic\"}\n            variant={\"outlined\"}\n            // label={\"search for seeds\"}\n            placeholder=\"enter reference tracks\"\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => set_search_string(e.target.value)}\n            onKeyDown={(e) => {\n              console.log(e.key);\n              if (e.key === \"Enter\") {\n                spotify_search_songs();\n              }\n            }}\n            value={search_string}\n          ></TextField>\n          <Button\n            style={{\n              marginLeft: 5,\n              backgroundColor: \"#1DB954\",\n              color: \"white\",\n            }}\n            onClick={spotify_search_songs}\n            variant=\"contained\"\n          >\n            <Search />\n          </Button>\n        </Box>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Box className={classes.search_results}>\n          <SearchResults\n            results={search_result}\n            onChange={set_selected_seeds}\n          />\n        </Box>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        {/* <Typography className={classes.selected_seeds_header}>\n          Your selected seeds will appear here\n        </Typography> */}\n        <Paper className={classes.selected_seeds}>\n          {seleceted_seeds.map((songs, index) => (\n            <Typography className={classes.selected_seeds_songs}>\n              {index + 1}. {songs}\n            </Typography>\n          ))}\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/xinwng/Projects/Explorify/client/src/component/search_results.js",["69"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  ListItem,\n  List,\n  ListItemIcon,\n  ListItemText,\n  Checkbox,\n  makeStyles,\n  Typography,\n  Avatar,\n  Grid,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 18,\n    height: 18,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 18,\n      height: 18,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n  grid_container: {\n    direction: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  search_results: {\n    // paddingTop: 15,\n    paddingLeft: 20,\n    // marginTop: 15,\n  },\n  cover_art: {\n    marginLeft: -15,\n    marginRight: 10,\n    // width: theme.spacing(5.5),\n    width: theme.spacing(4.5),\n    // height: theme.spacing(5.5),\n    height: theme.spacing(4.5),\n  },\n  track_name: {\n    // fontSize: 16,\n    // fontWeight: 500,\n    fontSize: 13.5,\n    fontWeight: 500,\n  },\n  artist_name: {\n    // fontSize: 13,\n    fontSize: 11,\n  },\n}));\n\nexport default function SearchResults({ results, onChange }) {\n  const classes = useStyles();\n  const [checked, set_checked] = useState([]);\n  const [seeds, set_seeds] = useState([]);\n  console.log(checked);\n\n  const handle_toggle = (value, name) => () => {\n    const cur_index = checked.indexOf(value);\n    const new_checked = [...checked];\n    const new_seed = [...seeds];\n    if (cur_index === -1) {\n      if (checked.length < 5) {\n        new_checked.push(value);\n        new_seed.push(name);\n      }\n    } else {\n      new_checked.splice(cur_index, 1);\n      new_seed.splice(cur_index, 1);\n    }\n    set_checked(new_checked);\n    set_seeds(new_seed);\n    console.log(\"seeds\", seeds);\n    onChange(new_checked);\n    // onChange(new_seed);\n  };\n\n  return (\n    <Grid container className={classes.grid_container}>\n      <Grid item xs={12} className={classes.search_results}>\n        <List>\n          {results.map((item, index) => (\n            <ListItem\n              key={item.id}\n              button\n              onClick={handle_toggle(item.id, item.name)}\n              // margin={-4}\n            >\n              <ListItemIcon>\n                <Checkbox\n                  className={classes.checkboxes_root}\n                  checkedIcon={\n                    <span\n                      className={clsx(\n                        classes.checkboxes_icon,\n                        classes.checked_icon\n                      )}\n                    />\n                  }\n                  icon={<span className={classes.checkboxes_icon} />}\n                  inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n                  disableRipple={true}\n                  edge={\"start\"}\n                  checked={checked.indexOf(item.id) !== -1}\n                  tabIndex={-1}\n                />\n              </ListItemIcon>\n              <Avatar\n                src={item.album.images[2].url}\n                variant=\"square\"\n                className={classes.cover_art}\n              ></Avatar>\n\n              <ListItemText>\n                <Typography className={classes.track_name}>\n                  {item.name}\n                </Typography>\n                <Typography className={classes.artist_name}>\n                  {item.artists[0].name}\n                </Typography>\n              </ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js",["70","71"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Typography,\n  Slider,\n  Checkbox,\n  makeStyles,\n  Paper,\n  Box,\n} from \"@material-ui/core\";\nimport { palette } from \"@material-ui/system\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\nconst useStyles = makeStyles({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 18,\n    height: 18,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 18,\n      height: 18,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n  paper_root: {\n    // backgroundColor: \"black:\",\n    padding: 10,\n    width: \"95%\",\n    // borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.1)\",\n  },\n});\n\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0,\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1,\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1,\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n};\n\nexport default function RecBoards({ onChange }) {\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n\n  return (\n    <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n      <Paper elevation={3} className={classes.paper_root}>\n        {/* <Grid item xs={12}>  */}\n        {Object.keys(recs).map((rec) => (\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <Checkbox\n              className={classes.checkboxes_root}\n              disableRipple\n              color=\"default\"\n              checkedIcon={\n                <span\n                  className={clsx(\n                    classes.checkboxes_icon,\n                    classes.checked_icon\n                  )}\n                />\n              }\n              icon={<span className={classes.checkboxes_icon} />}\n              inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n              checked={board_values[rec].enabled}\n              onChange={(e, newValue) => toggle_rec(rec, newValue)}\n            />\n            <div style={{ flex: 1 }}>\n              <Grid container>\n                <Typography>{rec}</Typography>\n                <Grid container spacing={1}>\n                  <Grid item>\n                    <Typography>min</Typography>\n                  </Grid>\n                  <Grid item xs>\n                    <Slider\n                      disabled={!board_values[rec].enabled}\n                      value={board_values[rec].value}\n                      onChange={(e, new_value) => handle_change(rec, new_value)}\n                      valueLabelDisplay={\"auto\"}\n                      aria-labelledby={\"range-slider\"}\n                      min={recs[rec].min}\n                      max={recs[rec].max}\n                      step={recs[rec].step}\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Typography>max</Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        ))}\n        {/* </Grid> */}\n      </Paper>\n    </Grid>\n  );\n}\n","/Users/xinwng/Projects/Explorify/client/src/component/get_recommendations.js",[],["72","73"],"/Users/xinwng/Projects/Explorify/client/src/component/rec_results.js",["74"],"import React from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    direction: \"row\",\n    padding: 10,\n  },\n  cover_art: {\n    marginLeft: -15,\n    marginRight: 10,\n    // width: theme.spacing(5.5),\n    width: theme.spacing(6),\n    // height: theme.spacing(5.5),\n    height: theme.spacing(6),\n  },\n  track_name: {\n    fontSize: 16,\n    fontWeight: 500,\n  },\n  artist_name: {\n    fontSize: 13,\n  },\n}));\n\nconst RecommendationResults = ({ results }) => {\n  console.log(results);\n  const classes = useStyles();\n  if (!results.tracks || results.tracks.length === 0) {\n    return <Typography>No Results!</Typography>;\n  }\n  return (\n    <Grid container className={classes.gridContainer}>\n      {/* <List> */}\n      {results.tracks.map((track) => (\n        <Grid item xs={6}>\n          <ListItem key={track.id}>\n            <Avatar\n              src={track.album.images[2].url}\n              variant=\"square\"\n              className={classes.cover_art}\n            ></Avatar>\n            <ListItemText>\n              <Typography className={classes.track_name}>\n                {track.name}\n              </Typography>\n              <Typography className={classes.artist_name}>\n                {track.artists[0].name}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </Grid>\n      ))}\n      {/* </List> */}\n    </Grid>\n  );\n};\n\nexport default RecommendationResults;\n","/Users/xinwng/Projects/Explorify/client/src/component/get_user_data.js",["75"],"import React, { useState, useEffect } from \"react\";\nimport { makeStyles, Grid, Typography, Avatar } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    direction: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // padding: 10,\n  },\n  large: {\n    margin: 10,\n    width: theme.spacing(5.5),\n    height: theme.spacing(5.5),\n  },\n}));\n\nexport default function GetUserData({ auth, onChange }) {\n  const classes = useStyles();\n  const { token } = auth;\n  // console.log(\"user_data\", token);\n  const [user_data, set_user_data] = useState(null);\n  const [user_id, set_user_id] = useState(\"\");\n  const [user_name, set_user_name] = useState(\"\");\n  const [user_image, set_user_image] = useState(\"\");\n\n  useEffect(() => {\n    async function retrieve_data() {\n      const url = \"https://api.spotify.com/v1/me\";\n      const { data } = await axios.get(`${url}`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log(data);\n      if (data) {\n        handle_retrieve_data(data);\n      }\n    }\n    retrieve_data();\n  }, [onChange, token]);\n\n  useEffect(() => {\n    onChange(user_id);\n  }, [onChange, user_id]);\n\n  function handle_retrieve_data(data) {\n    set_user_data(data);\n    set_user_name(data.display_name);\n    set_user_image(data.images[0].url);\n    set_user_id(data.id);\n  }\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      <Grid item>\n        <Typography variant=\"h4\" fontWeight=\"fontWeightBold\">\n          hello 👋, {user_name}!\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Avatar\n          src={user_image}\n          alt=\"user_image\"\n          className={classes.large}\n        ></Avatar>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/xinwng/Projects/Explorify/client/src/pre_pages/login_page.js",["76","77"],"import React from \"react\";\nimport {\n  Grid,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActionArea,\n  makeStyles,\n  Button,\n  styled,\n  Typography,\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    marginTop: 20,\n    fontSize: \"4.5em\",\n    fontFamily: \"Kiwi Maru\",\n    fontWeight: 500,\n    // color: \"#9EB56F\",\n  },\n  desc_root: {\n    maxWidth: 500,\n    margin: \"auto\",\n    borderRadius: 5,\n    position: \"relative\",\n    boxShadow: \"0 3px 5px 2px rgba(0, 0, 0, .1)\",\n  },\n  desc_content: { padding: 20 },\n  desc_cta: {\n    display: \"block\",\n    textAlign: \"justify\",\n    color: \"black\",\n    fontSize: 15,\n    fontFamily: \"Inter\",\n  },\n  desc_title: {\n    color: \"black\",\n    // letterSpacing: \"1x\",\n    fontSize: 30,\n    textAlign: \"left\",\n    marginTop: 0,\n    fontFamily: \"Inter\",\n    fontWeight: 500,\n  },\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Kanit\", \"Inter\", \"Kiwi Maru\"],\n  },\n  palette: {\n    background: {\n      default: \"#E2E2E2\",\n    },\n  },\n});\n\nconst LoginButton = styled(Button)({\n  background:\n    \"linear-gradient(to right, #b2c9d4, #b8c4da, #c8bdd7, #d9b6ca, #e3b2b4)\",\n  border: 0,\n  borderRadius: 10,\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  // boxShadow: \"5px 5px 15px 5px rgba(214,223,193,.5)\",\n  color: \"black\",\n  fontSize: 20,\n  fontWeight: 400,\n  height: 45,\n  padding: \"0 30px\",\n});\n\nfunction LoginPage() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={5}\n        >\n          <Grid item>\n            <Typography className={classes.title}>explorify</Typography>\n          </Grid>\n          <Grid item>\n            <Card className={classes.desc_root}>\n              <CardContent className={classes.desc_content}>\n                <Typography className={classes.desc_title} variant=\"h5\">\n                  What is this?\n                </Typography>\n                <Box\n                  display={\"flex\"}\n                  flexDirection={\"column\"}\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  minHeight={250}\n                  color={\"black\"}\n                  textAlign={\"center\"}\n                  elevation={3}\n                >\n                  <Typography className={classes.desc_cta}>\n                    Spotify provides developers a Recommendation API that can be\n                    found{\" \"}\n                    <a\n                      href=\"https://developer.spotify.com/console/get-recommendations/\"\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                    >\n                      here\n                    </a>\n                    , disguised away from the public audience. Essentially,\n                    Explorify aims to unleash the potential of their API.\n                    Provided your favorite songs, Explorify aims to recommend\n                    you other similar tracks (if there is sufficient\n                    information). But, the cool thing is their API also allows\n                    you to customize your final matches with specific track\n                    attributes such as: danceability, energy, popularity, tempo,\n                    and more. Give it a try!\n                  </Typography>\n                </Box>\n                <Typography className={classes.desc_cta}>\n                  Check me out at:{\" \"}\n                  <a\n                    href=\"https://www.xinwang.me\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    https://www.xinwang.me\n                  </a>\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item>\n            <LoginButton href=\"/auth/login\" endIcon={<ExitToAppIcon />}>\n              LOGIN WITH SPOTIFY\n            </LoginButton>\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default LoginPage;\n","/Users/xinwng/Projects/Explorify/client/src/pre_pages/loading.js",["78","79","80"],"import React from \"react\";\nimport {\n  Grid,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  CardActionArea,\n  makeStyles,\n  Button,\n  styled,\n  Typography,\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    marginTop: 20,\n    fontSize: \"4.5em\",\n    fontFamily: \"Kiwi Maru\",\n    fontWeight: 500,\n  },\n  desc_root: {\n    maxWidth: 500,\n    margin: \"auto\",\n    borderRadius: 5,\n    position: \"relative\",\n    boxShadow: \"0 3px 5px 2px rgba(0, 0, 0, .1)\",\n  },\n  desc_content: { padding: 20 },\n  desc_cta: {\n    display: \"block\",\n    textAlign: \"justify\",\n    color: \"black\",\n    fontSize: 20,\n  },\n  desc_title: {\n    color: \"black\",\n    letterSpacing: \"1x\",\n    fontSize: 25,\n    textAlign: \"center\",\n    marginTop: 5,\n  },\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Kanit\", \"Kiwi Maru\"],\n  },\n  palette: {\n    background: {\n      default: \"#E2E2E2\",\n    },\n  },\n});\n\nconst LoginButton = styled(Button)({\n  background:\n    \"linear-gradient(to right, #b2c9d4, #b8c4da, #c8bdd7, #d9b6ca, #e3b2b4)\",\n  border: 0,\n  borderRadius: 10,\n  boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n  // boxShadow: \"5px 5px 15px 5px rgba(214,223,193,.5)\",\n  color: \"black\",\n  fontSize: 20,\n  fontWeight: 400,\n  height: 45,\n  padding: \"0 30px\",\n});\n\nfunction Loading() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={5}\n        >\n          <Grid item>\n            <Typography className={classes.title}>explorify</Typography>\n          </Grid>\n          <Grid item>\n            <Card className={classes.desc_root}>\n              <CardContent className={classes.desc_content}>\n                <Typography className={classes.desc_title} variant=\"h5\">\n                  Uh oh... Something went wrong!\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item>\n            <LoginButton\n              href=\"/auth/login\"\n              endIcon={<ExitToAppIcon />}\n              disabled\n            >\n              LOGIN WITH SPOTIFY\n            </LoginButton>\n          </Grid>\n        </Grid>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default Loading;\n","/Users/xinwng/Projects/Explorify/client/src/component/export_to_playlist.js",["81","82","83","84"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default function ExportToPlaylist({ auth, user_id }) {\n  const { token } = auth;\n  const [playlist_name, set_playlist_name] = useState(\"\");\n  const [playlist_desc, set_playlist_desc] = useState(\"\");\n\n  useEffect(() => {\n    async function retrieve_data() {\n      const url = \"https://api.spotify.com/v1/users/\";\n      const uid = user_id;\n      console.log(uid);\n      const { data } = await axios.post(`${url}${uid}/playlists`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log(data);\n      if (data) {\n        handle_playlist_config(data);\n      }\n    }\n    retrieve_data();\n  }, [auth, user_id]);\n\n  function handle_playlist_config(data) {\n    set_playlist_name(\"explorify playlist\");\n    set_playlist_desc(\"created by explorify\");\n  }\n}\n",["85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":81,"column":10,"nodeType":"93","messageId":"94","endLine":81,"endColumn":22},{"ruleId":"91","severity":1,"message":"95","line":81,"column":24,"nodeType":"93","messageId":"94","endLine":81,"endColumn":40},{"ruleId":"91","severity":1,"message":"96","line":82,"column":10,"nodeType":"93","messageId":"94","endLine":82,"endColumn":20},{"ruleId":"91","severity":1,"message":"97","line":82,"column":22,"nodeType":"93","messageId":"94","endLine":82,"endColumn":36},{"ruleId":"91","severity":1,"message":"98","line":71,"column":10,"nodeType":"93","messageId":"94","endLine":71,"endColumn":18},{"ruleId":"91","severity":1,"message":"99","line":71,"column":20,"nodeType":"93","messageId":"94","endLine":71,"endColumn":32},{"ruleId":"91","severity":1,"message":"100","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"101","line":10,"column":3,"nodeType":"93","messageId":"94","endLine":10,"endColumn":6},{"ruleId":"91","severity":1,"message":"102","line":12,"column":10,"nodeType":"93","messageId":"94","endLine":12,"endColumn":17},{"ruleId":"87","replacedBy":"103"},{"ruleId":"89","replacedBy":"104"},{"ruleId":"91","severity":1,"message":"105","line":6,"column":3,"nodeType":"93","messageId":"94","endLine":6,"endColumn":7},{"ruleId":"91","severity":1,"message":"106","line":23,"column":10,"nodeType":"93","messageId":"94","endLine":23,"endColumn":19},{"ruleId":"91","severity":1,"message":"107","line":7,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":12},{"ruleId":"91","severity":1,"message":"108","line":8,"column":3,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"101","line":4,"column":3,"nodeType":"93","messageId":"94","endLine":4,"endColumn":6},{"ruleId":"91","severity":1,"message":"107","line":7,"column":3,"nodeType":"93","messageId":"94","endLine":7,"endColumn":12},{"ruleId":"91","severity":1,"message":"108","line":8,"column":3,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"109","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"110","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":23},{"ruleId":"91","severity":1,"message":"111","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":23},{"ruleId":"112","severity":1,"message":"113","line":25,"column":6,"nodeType":"114","endLine":25,"endColumn":21,"suggestions":"115"},{"ruleId":"87","replacedBy":"116"},{"ruleId":"89","replacedBy":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'results_data' is assigned a value but never used.","Identifier","unusedVar","'set_results_data' is assigned a value but never used.","'result_uri' is assigned a value but never used.","'set_result_uri' is assigned a value but never used.","'seed_ids' is assigned a value but never used.","'set_seed_ids' is assigned a value but never used.","'useEffect' is defined but never used.","'Box' is defined but never used.","'palette' is defined but never used.",["118"],["119"],"'List' is defined but never used.","'user_data' is assigned a value but never used.","'CardMedia' is defined but never used.","'CardActionArea' is defined but never used.","'React' is defined but never used.","'playlist_name' is assigned a value but never used.","'playlist_desc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [auth, token, user_id]",{"range":"123","text":"124"},[723,738],"[auth, token, user_id]"]