{"ast":null,"code":"import _objectSpread from\"/Users/xinwng/Projects/Explorify/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/xinwng/Projects/Explorify/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import clsx from\"clsx\";import{Grid,Typography,Slider,Checkbox,makeStyles,Paper,Card,CardContent,Box,Avatar}from\"@material-ui/core\";/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{checkboxes_root:{\"&:hover\":{backgroundColor:\"transparent\"}},checkboxes_icon:{borderRadius:3,width:16,height:16,boxShadow:\"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",backgroundColor:\"#f5f8fa\",backgroundImage:\"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\"$root.Mui-focusVisible &\":{outline:\"2px auto rgba(19,124,189,.6)\",outlineOffset:2},\"input:hover ~ &\":{backgroundColor:\"#ebf1f5\"},\"input:disabled ~ &\":{boxShadow:\"none\",background:\"rgba(206,217,224,.5)\"}},checked_icon:{backgroundColor:\"#137cbd\",backgroundImage:\"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\"&:before\":{display:\"block\",width:16,height:16,backgroundImage:\"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\"+\" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \"+\"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",content:'\"\"'},\"input:hover ~ &\":{backgroundColor:\"#106ba3\"}},paper_root:{padding:10,width:\"100%\",borderRadius:10,boxShadow:\"2px 2px 7px rgba(0, 0, 0, 0.4)\",backgroundColor:\"#ffe8d6\"},// rec_font: {\n//   color: \"#000\",\n//   // backgroundColor: \"#B5838D\",\n//   // backgroundColor: \"#FFCDB2\",\n// },\nrec_card_root:{maxWidth:925,// height: \"250px\",\nmarginBottom:30,borderRadius:10},rec_font:{// color: \"#000\",\ncolor:\"#2b2d42\",fontFamily:\"Sawarabi Mincho\",paddingTop:20,fontWeight:1000,fontSize:\"2.4em\",textAlign:\"center\"},rec_font_2:{// color: \"#000\",\ncolor:\"#000\",// fontFamily: \"Concert One\",\nfontFamily:\"Arvo\",// fontWeight: 700,\nfontSize:\"1.2em\",textAlign:\"left\"},rec_font_3:{color:\"#2b2d42\",fontFamily:\"Arvo\",fontSize:\"1.2em\",textAlign:\"center\",marginTop:-10},track_attribute_image:{margin:10,width:theme.spacing(9),height:theme.spacing(9)},rec_root:{// padding: 5,\nmarginTop:15,marginBottom:10,maxWidth:825,maxHeight:100,backgroundColor:\"#C9C9BA\",// backgroundColor: \"transparent\",\n// border: \"2px solid #000\",\nmarginLeft:5,marginRight:5,borderRadius:10},cb:{maxWidth:925,// height: \"250px\",\n// marginBottom: 30,\nborderRadius:10,backgroundColor:\"#ffe8d6\",boxShadow:\"2px 2px 7px rgba(0, 0, 0, 0.4)\"},cb_title:{color:\"#2b2d42\",// fontFamily: \"Sawarabi Mincho\",\nfontFamily:\"Arvo\",paddingTop:10,paddingBottom:5,// fontWeight: 1000,\nfontSize:\"2.4em\",textAlign:\"center\"},cb_paper:{backgroundColor:\"transparent\",padding:5}};});var recs={acousticness:{value:[0,1],enabled:false,min:0,max:1,step:0.01},danceability:{value:[0,1],enabled:false,min:0,max:1,step:0.01},energy:{value:[0,1],enabled:false,min:0,max:1,step:0.01},instrumentalness:{value:[0,1],enabled:false,min:0,max:1,step:0.01},liveness:{value:[0,1],enabled:false,min:0,max:1,step:0.01},loudness:{value:[-60,0],enabled:false,min:-60,max:0},popularity:{value:[0,100],enabled:false,min:0,max:100,step:1},speechiness:{value:[0,1],enabled:false,min:0,max:1,step:0.01},tempo:{value:[0,200],enabled:false,min:0,max:200,step:1},valence:{value:[0,1],enabled:false,min:0,max:1,step:0.01}};export default function RecBoards(_ref){var onChange=_ref.onChange;var classes=useStyles();var _useState=useState(recs),_useState2=_slicedToArray(_useState,2),board_values=_useState2[0],set_board_values=_useState2[1];var handle_change=function handle_change(rec,value){var new_board_values=_objectSpread({},board_values);new_board_values[rec].value=value;set_board_values(new_board_values);};var toggle_rec=function toggle_rec(rec,value){var new_board_values=_objectSpread({},board_values);new_board_values[rec].enabled=value;set_board_values(new_board_values);};useEffect(function(){onChange(board_values);},[onChange,board_values]);return/*#__PURE__*/_jsxs(Card,{className:classes.cb,children:[/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{className:classes.cb_title,children:\"Control Panel \\uD83C\\uDF9B\"})}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",spacing:0,justify:\"center\",alignItems:\"center\",children:Object.keys(recs).map(function(rec){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,align:\"center\",children:/*#__PURE__*/_jsx(Paper,{className:classes.cb_paper,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Grid,{container:true,alignItems:\"center\",justify:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,align:\"center\",children:/*#__PURE__*/_jsxs(Typography,{className:classes.rec_font_2,children:[/*#__PURE__*/_jsx(Checkbox,{className:classes.checkboxes_root,disableRipple:true,color:\"default\",style:{marginLeft:8},checkedIcon:/*#__PURE__*/_jsx(\"span\",{className:clsx(classes.checkboxes_icon,classes.checked_icon)}),icon:/*#__PURE__*/_jsx(\"span\",{className:classes.checkboxes_icon}),inputProps:{\"aria-label\":\"decorative checkbox\"},checked:board_values[rec].enabled,onChange:function onChange(e,newValue){return toggle_rec(rec,newValue);}}),rec]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1,children:/*#__PURE__*/_jsx(Typography,{className:classes.rec_font_3,children:\"min\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:8,children:/*#__PURE__*/_jsx(Slider,{disabled:!board_values[rec].enabled,value:board_values[rec].value,onChange:function onChange(e,new_value){return handle_change(rec,new_value);},valueLabelDisplay:\"auto\",\"aria-labelledby\":\"range-slider\",min:recs[rec].min,max:recs[rec].max,step:recs[rec].step,style:{marginTop:-3}})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1,children:/*#__PURE__*/_jsx(Typography,{className:classes.rec_font_3,children:\"max\"})})]})})});})})]})// <Grid\n//   container\n//   spacing={2}\n//   style={{ padding: 0 }}\n//   justify=\"center\"\n//   direction=\"row\"\n// >\n//   <Grid item xs={12}>\n//     <Card\n//       className={classes.rec_card_root}\n//       style={{\n//         backgroundColor: \"#ffe8d6\",\n//         boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n//         paddingBottom: 30,\n//       }}\n//     >\n//       <Typography className={classes.rec_font}>Control Panel ðŸŽ®</Typography>\n//       {Object.keys(recs).map((rec) => (\n//         <Grid item xs={5}>\n//           <Paper className={classes.rec_root} variant=\"elevation\">\n//             <CardContent style={{}}>\n//               <Typography className={classes.rec_font_2}>\n//                 <Checkbox\n//                   className={classes.checkboxes_root}\n//                   disableRipple\n//                   color=\"default\"\n//                   style={{ marginLeft: -6 }}\n//                   checkedIcon={\n//                     <span\n//                       className={clsx(\n//                         classes.checkboxes_icon,\n//                         classes.checked_icon\n//                       )}\n//                     />\n//                   }\n//                   icon={<span className={classes.checkboxes_icon} />}\n//                   inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n//                   checked={board_values[rec].enabled}\n//                   onChange={(e, newValue) => toggle_rec(rec, newValue)}\n//                 />\n//                 {rec}\n//               </Typography>\n//               <Grid container style={{ paddingTop: 5 }}>\n//                 <Grid item xs={1} align=\"right\">\n//                   <Typography className={classes.rec_font_3}>\n//                     min\n//                   </Typography>\n//                 </Grid>\n//                 <Grid item xs={10} align=\"center\" justify=\"center\">\n//                   <Slider\n//                     disabled={!board_values[rec].enabled}\n//                     value={board_values[rec].value}\n//                     onChange={(e, new_value) =>\n//                       handle_change(rec, new_value)\n//                     }\n//                     valueLabelDisplay={\"auto\"}\n//                     aria-labelledby={\"range-slider\"}\n//                     min={recs[rec].min}\n//                     max={recs[rec].max}\n//                     step={recs[rec].step}\n//                     style={{ marginTop: -3 }}\n//                   />\n//                 </Grid>\n//                 <Grid item xs={1}>\n//                   <Typography className={classes.rec_font_3}>\n//                     max\n//                   </Typography>\n//                 </Grid>\n//               </Grid>\n//             </CardContent>\n//           </Paper>\n//         </Grid>\n//       ))}\n//     </Card>\n//   </Grid>\n// </Grid>\n// <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n//   <Paper elevation={3} className={classes.paper_root}>\n//     {/* <Grid item xs={12}>  */}\n//     {Object.keys(recs).map((rec) => (\n//       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n//         <Checkbox\n//           className={classes.checkboxes_root}\n//           disableRipple\n//           color=\"default\"\n//           checkedIcon={\n//             <span\n//               className={clsx(\n//                 classes.checkboxes_icon,\n//                 classes.checked_icon\n//               )}\n//             />\n//           }\n//           icon={<span className={classes.checkboxes_icon} />}\n//           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n//           checked={board_values[rec].enabled}\n//           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n//         />\n//         <div style={{ flex: 1 }}>\n//           <Grid container>\n//             <Typography className={classes.font_color}>{rec}</Typography>\n//             <Grid container spacing={1}>\n//               <Grid item>\n//                 <Typography className={classes.font_color}>min</Typography>\n//               </Grid>\n//               <Grid item xs>\n//                 <Slider\n//                   disabled={!board_values[rec].enabled}\n//                   value={board_values[rec].value}\n//                   onChange={(e, new_value) => handle_change(rec, new_value)}\n//                   valueLabelDisplay={\"auto\"}\n//                   aria-labelledby={\"range-slider\"}\n//                   min={recs[rec].min}\n//                   max={recs[rec].max}\n//                   step={recs[rec].step}\n//                 />\n//               </Grid>\n//               <Grid item>\n//                 <Typography className={classes.font_color}>max</Typography>\n//               </Grid>\n//             </Grid>\n//           </Grid>\n//         </div>\n//       </div>\n//     ))}\n//     {/* </Grid> */}\n//   </Paper>\n// </Grid>\n;}","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js"],"names":["React","useState","useEffect","clsx","Grid","Typography","Slider","Checkbox","makeStyles","Paper","Card","CardContent","Box","Avatar","useStyles","theme","checkboxes_root","backgroundColor","checkboxes_icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checked_icon","display","content","paper_root","padding","rec_card_root","maxWidth","marginBottom","rec_font","color","fontFamily","paddingTop","fontWeight","fontSize","textAlign","rec_font_2","rec_font_3","marginTop","track_attribute_image","margin","spacing","rec_root","maxHeight","marginLeft","marginRight","cb","cb_title","paddingBottom","cb_paper","recs","acousticness","value","enabled","min","max","step","danceability","energy","instrumentalness","liveness","loudness","popularity","speechiness","tempo","valence","RecBoards","onChange","classes","board_values","set_board_values","handle_change","rec","new_board_values","toggle_rec","Object","keys","map","e","newValue","new_value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Typography,\n  Slider,\n  Checkbox,\n  makeStyles,\n  Paper,\n  Card,\n  CardContent,\n  Box,\n  Avatar,\n} from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\nconst useStyles = makeStyles((theme) => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\",\n  },\n  // rec_font: {\n  //   color: \"#000\",\n  //   // backgroundColor: \"#B5838D\",\n  //   // backgroundColor: \"#FFCDB2\",\n  // },\n  rec_card_root: {\n    maxWidth: 925,\n    // height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10,\n  },\n  rec_font: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    fontFamily: \"Sawarabi Mincho\",\n    paddingTop: 20,\n    fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\",\n  },\n  rec_font_2: {\n    // color: \"#000\",\n    color: \"#000\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Arvo\",\n    // fontWeight: 700,\n    fontSize: \"1.2em\",\n    textAlign: \"left\",\n  },\n  rec_font_3: {\n    color: \"#2b2d42\",\n    fontFamily: \"Arvo\",\n    fontSize: \"1.2em\",\n    textAlign: \"center\",\n    marginTop: -10,\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n  },\n  rec_root: {\n    // padding: 5,\n    marginTop: 15,\n    marginBottom: 10,\n    maxWidth: 825,\n    maxHeight: 100,\n    backgroundColor: \"#C9C9BA\",\n    // backgroundColor: \"transparent\",\n    // border: \"2px solid #000\",\n    marginLeft: 5,\n    marginRight: 5,\n    borderRadius: 10,\n  },\n  cb: {\n    maxWidth: 925,\n    // height: \"250px\",\n    // marginBottom: 30,\n    borderRadius: 10,\n    backgroundColor: \"#ffe8d6\",\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n  },\n  cb_title: {\n    color: \"#2b2d42\",\n    // fontFamily: \"Sawarabi Mincho\",\n    fontFamily: \"Arvo\",\n    paddingTop: 10,\n    paddingBottom: 5,\n    // fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\",\n  },\n  cb_paper: {\n    backgroundColor: \"transparent\",\n    padding: 5,\n  },\n}));\n\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0,\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1,\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1,\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n};\n\nexport default function RecBoards({ onChange }) {\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n\n  return (\n    <Card className={classes.cb}>\n      <CardContent>\n        <Typography className={classes.cb_title}>Control Panel ðŸŽ›</Typography>\n      </CardContent>\n      <Grid\n        container\n        direction=\"row\"\n        spacing={0}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {Object.keys(recs).map((rec) => (\n          <Grid item xs={12} sm={6} align=\"center\">\n            <Paper className={classes.cb_paper} variant=\"outlined\">\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid item xs={12} align=\"center\">\n                  <Typography className={classes.rec_font_2}>\n                    <Checkbox\n                      className={classes.checkboxes_root}\n                      disableRipple\n                      color=\"default\"\n                      style={{ marginLeft: 8 }}\n                      checkedIcon={\n                        <span\n                          className={clsx(\n                            classes.checkboxes_icon,\n                            classes.checked_icon\n                          )}\n                        />\n                      }\n                      icon={<span className={classes.checkboxes_icon} />}\n                      inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n                      checked={board_values[rec].enabled}\n                      onChange={(e, newValue) => toggle_rec(rec, newValue)}\n                    />\n                    {rec}\n                  </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                  <Typography className={classes.rec_font_3}>min</Typography>\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                  <Slider\n                    disabled={!board_values[rec].enabled}\n                    value={board_values[rec].value}\n                    onChange={(e, new_value) => handle_change(rec, new_value)}\n                    valueLabelDisplay={\"auto\"}\n                    aria-labelledby={\"range-slider\"}\n                    min={recs[rec].min}\n                    max={recs[rec].max}\n                    step={recs[rec].step}\n                    style={{ marginTop: -3 }}\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  <Typography className={classes.rec_font_3}>max</Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Card>\n\n    // <Grid\n    //   container\n    //   spacing={2}\n    //   style={{ padding: 0 }}\n    //   justify=\"center\"\n    //   direction=\"row\"\n    // >\n    //   <Grid item xs={12}>\n    //     <Card\n    //       className={classes.rec_card_root}\n    //       style={{\n    //         backgroundColor: \"#ffe8d6\",\n    //         boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    //         paddingBottom: 30,\n    //       }}\n    //     >\n    //       <Typography className={classes.rec_font}>Control Panel ðŸŽ®</Typography>\n    //       {Object.keys(recs).map((rec) => (\n    //         <Grid item xs={5}>\n    //           <Paper className={classes.rec_root} variant=\"elevation\">\n    //             <CardContent style={{}}>\n    //               <Typography className={classes.rec_font_2}>\n    //                 <Checkbox\n    //                   className={classes.checkboxes_root}\n    //                   disableRipple\n    //                   color=\"default\"\n    //                   style={{ marginLeft: -6 }}\n    //                   checkedIcon={\n    //                     <span\n    //                       className={clsx(\n    //                         classes.checkboxes_icon,\n    //                         classes.checked_icon\n    //                       )}\n    //                     />\n    //                   }\n    //                   icon={<span className={classes.checkboxes_icon} />}\n    //                   inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n    //                   checked={board_values[rec].enabled}\n    //                   onChange={(e, newValue) => toggle_rec(rec, newValue)}\n    //                 />\n    //                 {rec}\n    //               </Typography>\n    //               <Grid container style={{ paddingTop: 5 }}>\n    //                 <Grid item xs={1} align=\"right\">\n    //                   <Typography className={classes.rec_font_3}>\n    //                     min\n    //                   </Typography>\n    //                 </Grid>\n    //                 <Grid item xs={10} align=\"center\" justify=\"center\">\n    //                   <Slider\n    //                     disabled={!board_values[rec].enabled}\n    //                     value={board_values[rec].value}\n    //                     onChange={(e, new_value) =>\n    //                       handle_change(rec, new_value)\n    //                     }\n    //                     valueLabelDisplay={\"auto\"}\n    //                     aria-labelledby={\"range-slider\"}\n    //                     min={recs[rec].min}\n    //                     max={recs[rec].max}\n    //                     step={recs[rec].step}\n    //                     style={{ marginTop: -3 }}\n    //                   />\n    //                 </Grid>\n    //                 <Grid item xs={1}>\n    //                   <Typography className={classes.rec_font_3}>\n    //                     max\n    //                   </Typography>\n    //                 </Grid>\n    //               </Grid>\n    //             </CardContent>\n    //           </Paper>\n    //         </Grid>\n    //       ))}\n    //     </Card>\n    //   </Grid>\n    // </Grid>\n\n    // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n    //   <Paper elevation={3} className={classes.paper_root}>\n    //     {/* <Grid item xs={12}>  */}\n    //     {Object.keys(recs).map((rec) => (\n    //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n    //         <Checkbox\n    //           className={classes.checkboxes_root}\n    //           disableRipple\n    //           color=\"default\"\n    //           checkedIcon={\n    //             <span\n    //               className={clsx(\n    //                 classes.checkboxes_icon,\n    //                 classes.checked_icon\n    //               )}\n    //             />\n    //           }\n    //           icon={<span className={classes.checkboxes_icon} />}\n    //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n    //           checked={board_values[rec].enabled}\n    //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n    //         />\n    //         <div style={{ flex: 1 }}>\n    //           <Grid container>\n    //             <Typography className={classes.font_color}>{rec}</Typography>\n    //             <Grid container spacing={1}>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>min</Typography>\n    //               </Grid>\n    //               <Grid item xs>\n    //                 <Slider\n    //                   disabled={!board_values[rec].enabled}\n    //                   value={board_values[rec].value}\n    //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n    //                   valueLabelDisplay={\"auto\"}\n    //                   aria-labelledby={\"range-slider\"}\n    //                   min={recs[rec].min}\n    //                   max={recs[rec].max}\n    //                   step={recs[rec].step}\n    //                 />\n    //               </Grid>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>max</Typography>\n    //               </Grid>\n    //             </Grid>\n    //           </Grid>\n    //         </div>\n    //       </div>\n    //     ))}\n    //     {/* </Grid> */}\n    //   </Paper>\n    // </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}