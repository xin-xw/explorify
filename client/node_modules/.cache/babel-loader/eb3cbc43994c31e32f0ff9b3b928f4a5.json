{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/get_user_data.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles, Box, Card, Paper, Grid, TextField, Button, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"tachyons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GetUserData({\n  auth\n}) {\n  _s();\n\n  const {\n    token\n  } = auth;\n  console.log(\"user_data\", token);\n  const [user_data, set_user_data] = useState(null);\n  const [user_name, set_user_name] = useState(\"\");\n  const [user_image, set_user_image] = useState(\"\");\n\n  async function retrieve_data() {\n    const url = \"https://api.spotify.com/v1/me\";\n    const {\n      data\n    } = await axios.get(`${url}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n\n    if (data) {\n      set_user_data(data);\n      set_user_name(data.display_name);\n      set_user_image(data.images[0].url);\n    }\n  }\n\n  console.log(\"user_name\", user_name);\n  console.log(\"user_image\", user_image);\n  return;\n  {\n    user_name.map((user, index) => /*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Hello, \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 36\n    }, this));\n  }\n}\n\n_s(GetUserData, \"bkXVli0MU/QRdL7P/P7syavHnqw=\");\n\n_c = GetUserData;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUserData\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/get_user_data.js"],"names":["React","useState","useEffect","makeStyles","Box","Card","Paper","Grid","TextField","Button","Typography","axios","GetUserData","auth","token","console","log","user_data","set_user_data","user_name","set_user_name","user_image","set_user_image","retrieve_data","url","data","get","headers","Authorization","display_name","images","map","user","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,UADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,SANF,EAOEC,MAPF,EAQEC,UARF,QASO,mBATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,UAAP;;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAA+B;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAYD,IAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAzB;AACA,QAAM,CAACG,SAAD,EAAYC,aAAZ,IAA6BjB,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAM,CAACkB,SAAD,EAAYC,aAAZ,IAA6BnB,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACoB,UAAD,EAAaC,cAAb,IAA+BrB,QAAQ,CAAC,EAAD,CAA7C;;AAEA,iBAAesB,aAAf,GAA+B;AAC7B,UAAMC,GAAG,GAAG,+BAAZ;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEF,GAAI,EAAjB,EAAoB;AACzCG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AADgC,KAApB,CAAvB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;;AACA,QAAIA,IAAJ,EAAU;AACRP,MAAAA,aAAa,CAACO,IAAD,CAAb;AACAL,MAAAA,aAAa,CAACK,IAAI,CAACI,YAAN,CAAb;AACAP,MAAAA,cAAc,CAACG,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeN,GAAhB,CAAd;AACD;AACF;;AACDT,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,SAAzB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,UAA1B;AAEA;AACA;AACEF,IAAAA,SAAS,CAACY,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,UAAD;AAAA,4BAAoBD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAA/B;AACD;AACF;;GA5BuBpB,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  makeStyles,\n  Box,\n  Card,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"tachyons\";\n\nexport default function GetUserData({ auth }) {\n  const { token } = auth;\n  console.log(\"user_data\", token);\n  const [user_data, set_user_data] = useState(null);\n  const [user_name, set_user_name] = useState(\"\");\n  const [user_image, set_user_image] = useState(\"\");\n\n  async function retrieve_data() {\n    const url = \"https://api.spotify.com/v1/me\";\n    const { data } = await axios.get(`${url}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log(data);\n    if (data) {\n      set_user_data(data);\n      set_user_name(data.display_name);\n      set_user_image(data.images[0].url);\n    }\n  }\n  console.log(\"user_name\", user_name);\n  console.log(\"user_image\", user_image);\n\n  return;\n  {\n    user_name.map((user, index) => <Typography>Hello, {user}</Typography>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}