{"ast":null,"code":"import React, { useState } from \"react\";\nimport RecBoards from \"./rec_boards\";\nimport axios from \"axios\";\nexport default async function GetRecommendations({\n  auth,\n  selected_artists,\n  rec_values\n}) {\n  const {\n    token\n  } = auth;\n  const url = \"https://api.spotify.com/v1/recommendations\";\n  let selected_artists_string;\n\n  if (selected_artists_string < 0) {\n    return;\n  } else {\n    selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n  }\n\n  let min = [];\n  let max = [];\n  Object.keys(rec_values).forEach(rec => {\n    if (rec_values[rec].enabled) {\n      min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n      max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n    }\n  });\n  const min_string = min.join(\"&\");\n  const max_string = max.join(\"&\");\n  const {\n    data\n  } = await axios.get(`${url}?${selected_artists_string}&${min_string}&${max_string}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log(data);\n}\n_c = GetRecommendations;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetRecommendations\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/get_recommendations.js"],"names":["React","useState","RecBoards","axios","GetRecommendations","auth","selected_artists","rec_values","token","url","selected_artists_string","join","min","max","Object","keys","forEach","rec","enabled","push","value","min_string","max_string","data","get","headers","Authorization","console","log"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,eAAeC,kBAAf,CAAkC;AAC/CC,EAAAA,IAD+C;AAE/CC,EAAAA,gBAF+C;AAG/CC,EAAAA;AAH+C,CAAlC,EAIZ;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAYH,IAAlB;AACA,QAAMI,GAAG,GAAG,4CAAZ;AACA,MAAIC,uBAAJ;;AACA,MAAIA,uBAAuB,GAAG,CAA9B,EAAiC;AAC/B;AACD,GAFD,MAEO;AACLA,IAAAA,uBAAuB,GAAI,gBAAeJ,gBAAgB,CAACK,IAAjB,CAAsB,GAAtB,CAA2B,EAArE;AACD;;AAED,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,GAAG,GAAG,EAAV;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYR,UAAZ,EAAwBS,OAAxB,CAAiCC,GAAD,IAAS;AACvC,QAAIV,UAAU,CAACU,GAAD,CAAV,CAAgBC,OAApB,EAA6B;AAC3BN,MAAAA,GAAG,CAACO,IAAJ,CAAU,OAAMF,GAAI,IAAGV,UAAU,CAACU,GAAD,CAAV,CAAgBG,KAAhB,CAAsB,CAAtB,CAAyB,EAAhD;AACAP,MAAAA,GAAG,CAACM,IAAJ,CAAU,OAAMF,GAAI,IAAGV,UAAU,CAACU,GAAD,CAAV,CAAgBG,KAAhB,CAAsB,CAAtB,CAAyB,EAAhD;AACD;AACF,GALD;AAMA,QAAMC,UAAU,GAAGT,GAAG,CAACD,IAAJ,CAAS,GAAT,CAAnB;AACA,QAAMW,UAAU,GAAGT,GAAG,CAACF,IAAJ,CAAS,GAAT,CAAnB;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAW,MAAMpB,KAAK,CAACqB,GAAN,CACpB,GAAEf,GAAI,IAAGC,uBAAwB,IAAGW,UAAW,IAAGC,UAAW,EADzC,EAErB;AACEG,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASlB,KAAM;AADxB;AADX,GAFqB,CAAvB;AAQAmB,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACD;KAlC6BnB,kB","sourcesContent":["import React, { useState } from \"react\";\nimport RecBoards from \"./rec_boards\";\nimport axios from \"axios\";\n\nexport default async function GetRecommendations({\n  auth,\n  selected_artists,\n  rec_values,\n}) {\n  const { token } = auth;\n  const url = \"https://api.spotify.com/v1/recommendations\";\n  let selected_artists_string;\n  if (selected_artists_string < 0) {\n    return;\n  } else {\n    selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n  }\n\n  let min = [];\n  let max = [];\n  Object.keys(rec_values).forEach((rec) => {\n    if (rec_values[rec].enabled) {\n      min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n      max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n    }\n  });\n  const min_string = min.join(\"&\");\n  const max_string = max.join(\"&\");\n\n  const { data } = await axios.get(\n    `${url}?${selected_artists_string}&${min_string}&${max_string}`,\n    {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    }\n  );\n  console.log(data);\n}\n"]},"metadata":{},"sourceType":"module"}