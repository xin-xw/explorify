{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/explorify.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"tachyons\";\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport GetRecommendations from \"./component/get_recommendations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Explorify = ({\n  auth\n}) => {\n  _s();\n\n  const {\n    token\n  } = auth;\n  const [rec_values, set_rec_values] = useState([]);\n  const [selected_artists, set_selected_artists] = useState([]);\n  const [results, set_results] = useState(null);\n  console.log(\"sa\", selected_artists);\n  console.log(\"rv\", rec_values);\n  console.log(\"a\", auth);\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let selected_artists_string;\n\n    if (selected_artists_string < 0) {\n      return;\n    } else {\n      selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n    }\n\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach(rec => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n    const {\n      data\n    } = await axios.get(`${url}?${selected_artists_string}&${min_string}&${max_string}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n    set_results(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        padding: 0\n      },\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          class: \"measure f3 f2-m f1-l\",\n          children: \"Hello From Explorify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        auth: auth,\n        onChange: set_selected_artists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(RecBoards, {\n          onChange: set_rec_values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: get_recommendations,\n          children: \"Get Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Explorify, \"YTcBL/FzUCLTp913JQk3FKahuS0=\");\n\n_c = Explorify;\nexport default Explorify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explorify\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/explorify.js"],"names":["React","useState","Grid","TextField","Button","axios","SearchBar","RecBoards","GetRecommendations","Explorify","auth","token","rec_values","set_rec_values","selected_artists","set_selected_artists","results","set_results","console","log","get_recommendations","url","selected_artists_string","join","min","max","Object","keys","forEach","rec","enabled","push","value","min_string","max_string","data","get","headers","Authorization","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"tachyons\";\n\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport GetRecommendations from \"./component/get_recommendations\";\n\nconst Explorify = ({ auth }) => {\n  const { token } = auth;\n  const [rec_values, set_rec_values] = useState([]);\n  const [selected_artists, set_selected_artists] = useState([]);\n  const [results, set_results] = useState(null);\n\n  console.log(\"sa\", selected_artists);\n  console.log(\"rv\", rec_values);\n  console.log(\"a\", auth);\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let selected_artists_string;\n    if (selected_artists_string < 0) {\n      return;\n    } else {\n      selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n    }\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach((rec) => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n\n    const { data } = await axios.get(\n      `${url}?${selected_artists_string}&${min_string}&${max_string}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    set_results(data);\n  };\n\n  return (\n    <div className={\"App\"}>\n      <Grid container style={{ padding: 0 }} spacing={0}>\n        <Grid item xs={12}>\n          <h1 class=\"measure f3 f2-m f1-l\">Hello From Explorify</h1>\n        </Grid>\n        <SearchBar auth={auth} onChange={set_selected_artists}></SearchBar>\n        <Grid item xs={6}>\n          <RecBoards onChange={set_rec_values} />\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant={\"contained\"} onClick={get_recommendations}>\n            Get Recommendations\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Explorify;\n"]},"metadata":{},"sourceType":"module"}