{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar({\n  auth\n}) {\n  _s();\n\n  const {\n    token\n  } = auth;\n  console.log(\"token\", token);\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n\n  async function spotify_search_artists() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    console.log(\"search_query\", search_query);\n    const search_type_query = \"type=artist\";\n    const {\n      data\n    } = await axios.get(`${url}?q=${search_query}&${search_type_query}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n\n    if (data && data.artists) {\n      set_search_result(data.artists.items);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    class: \"mw5 mw7-ns center bg-light-gray pa3 ph5-ns tc\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      children: [\"variant=\", \"outlined\", \"label=\", \"Search\", \"style=\", {\n        backgroundColor: \"white\"\n      }, \"fullWidth onChange=\", event => set_search_string(event.target.value), \"value=\", search_string]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"#1DB954\"\n      },\n      onClick: spotify_search_artists,\n      children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"DikeI3bCSD77KF7nDkZdKGfqxbc=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js"],"names":["React","useState","axios","Grid","TextField","Button","Search","SearchBar","auth","token","console","log","search_result","set_search_result","search_string","set_search_string","spotify_search_artists","url","search_query","encodeURIComponent","search_type_query","data","get","headers","Authorization","artists","items","backgroundColor","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAYD,IAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACA,QAAM,CAACG,aAAD,EAAgBC,iBAAhB,IAAqCZ,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACa,aAAD,EAAgBC,iBAAhB,IAAqCd,QAAQ,CAAC,EAAD,CAAnD;;AAEA,iBAAee,sBAAf,GAAwC;AACtC,UAAMC,GAAG,GAAG,mCAAZ;AACA,UAAMC,YAAY,GAAGC,kBAAkB,CAACL,aAAD,CAAvC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BO,YAA5B;AACA,UAAME,iBAAiB,GAAG,aAA1B;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMnB,KAAK,CAACoB,GAAN,CACpB,GAAEL,GAAI,MAAKC,YAAa,IAAGE,iBAAkB,EADzB,EAErB;AACEG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASf,KAAM;AADxB;AADX,KAFqB,CAAvB;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;;AACA,QAAIA,IAAI,IAAIA,IAAI,CAACI,OAAjB,EAA0B;AACxBZ,MAAAA,iBAAiB,CAACQ,IAAI,CAACI,OAAL,CAAaC,KAAd,CAAjB;AACD;AACF;;AAED,sBACE;AAAS,IAAA,KAAK,EAAC,+CAAf;AAAA,4BACE,QAAC,SAAD;AAAA,6BACW,UADX,YAES,QAFT,YAGS;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAHT,yBAIuBC,KAAD,IAAWb,iBAAiB,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAJlD,YAKShB,aALT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEa,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,OAAO,EAAEX,sBAFX;AAAA,6BAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1CuBT,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nexport default function SearchBar({ auth }) {\n  const { token } = auth;\n  console.log(\"token\", token);\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n\n  async function spotify_search_artists() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    console.log(\"search_query\", search_query);\n    const search_type_query = \"type=artist\";\n    const { data } = await axios.get(\n      `${url}?q=${search_query}&${search_type_query}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    if (data && data.artists) {\n      set_search_result(data.artists.items);\n    }\n  }\n\n  return (\n    <section class=\"mw5 mw7-ns center bg-light-gray pa3 ph5-ns tc\">\n      <TextField>\n        variant={\"outlined\"}\n        label={\"Search\"}\n        style={{ backgroundColor: \"white\" }}\n        fullWidth onChange={(event) => set_search_string(event.target.value)}\n        value={search_string}\n      </TextField>\n      <Button\n        style={{ backgroundColor: \"#1DB954\" }}\n        onClick={spotify_search_artists}\n      >\n        <Search />\n      </Button>\n    </section>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}