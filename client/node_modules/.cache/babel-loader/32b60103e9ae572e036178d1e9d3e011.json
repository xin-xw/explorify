{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar({\n  auth\n}) {\n  _s();\n\n  const {\n    token\n  } = auth;\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n\n  const search_spotify = async () => {\n    const url = \"https://api.spotify.com/v1/search\";\n    const searchQuery = encodeURIComponent(search_string);\n    const typeQuery = `type=artist`;\n    const {\n      data\n    } = await axios.get(`${url}?q=${searchQuery}&${typeQuery}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (data && data.artists) {\n      set_search_result(data.artists.items);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 6,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        children: [\"variant=\", \"outlined\", \"label=\", \"Search\", \"style=\", {\n          backgroundColor: \"white\"\n        }, \"fullWidth=\", true, \"onChange=\", event => set_search_string(event.target.value), \"value=\", search_string]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          backgroundColor: \"#ff905b\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"DikeI3bCSD77KF7nDkZdKGfqxbc=\");\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js"],"names":["React","useState","Grid","TextField","Button","Search","SearchBar","auth","token","search_result","set_search_result","search_string","set_search_string","search_spotify","url","searchQuery","encodeURIComponent","typeQuery","data","axios","get","headers","Authorization","artists","items","display","flexDirection","backgroundColor","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,MAA1B,QAAwC,mBAAxC;AACA,SAASC,MAAT,QAAuB,oBAAvB;;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAYD,IAAlB;AACA,QAAM,CAACE,aAAD,EAAgBC,iBAAhB,IAAqCT,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACU,aAAD,EAAgBC,iBAAhB,IAAqCX,QAAQ,CAAC,EAAD,CAAnD;;AACA,QAAMY,cAAc,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,mCAAZ;AACA,UAAMC,WAAW,GAAGC,kBAAkB,CAACL,aAAD,CAAtC;AACA,UAAMM,SAAS,GAAI,aAAnB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEN,GAAI,MAAKC,WAAY,IAAGE,SAAU,EAA/C,EAAkD;AACvEI,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASd,KAAM;AADxB;AAD8D,KAAlD,CAAvB;;AAKA,QAAIU,IAAI,IAAIA,IAAI,CAACK,OAAjB,EAA0B;AACxBb,MAAAA,iBAAiB,CAACQ,IAAI,CAACK,OAAL,CAAaC,KAAd,CAAjB;AACD;AACF,GAZD;;AAaA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAA1B;AAAA,8BACE,QAAC,SAAD;AAAA,+BACW,UADX,YAES,QAFT,YAGS;AAAEC,UAAAA,eAAe,EAAE;AAAnB,SAHT,gBAIa,IAJb,eAKaC,KAAD,IAAWhB,iBAAiB,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CALxC,YAMSnB,aANT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEgB,UAAAA,eAAe,EAAE;AAAnB,SAAf;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAlCuBrB,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\nimport { Grid, TextField, Button } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\n\nexport default function SearchBar({ auth }) {\n  const { token } = auth;\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n  const search_spotify = async () => {\n    const url = \"https://api.spotify.com/v1/search\";\n    const searchQuery = encodeURIComponent(search_string);\n    const typeQuery = `type=artist`;\n    const { data } = await axios.get(`${url}?q=${searchQuery}&${typeQuery}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (data && data.artists) {\n      set_search_result(data.artists.items);\n    }\n  };\n  return (\n    <Grid item xs={6}>\n      <Grid item xs={12} style={{ display: \"flex\", flexDirection: \"row\" }}>\n        <TextField>\n          variant={\"outlined\"}\n          label={\"Search\"}\n          style={{ backgroundColor: \"white\" }}\n          fullWidth={true}\n          onChange={(event) => set_search_string(event.target.value)}\n          value={search_string}\n        </TextField>\n        <Button style={{ backgroundColor: \"#ff905b\" }}>\n          <Search />\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}