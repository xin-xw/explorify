{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/explorify.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { makeStyles, Box, Card, CardContent, Grid, Typography, Button, ThemeProvider, createMuiTheme, CssBaseline, styled } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Snackbar from \"./snackbar/snackbar\";\nimport SnackBarButton from \"./snackbar/snackbar_button\";\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport RecommendationResults from \"./component/rec_results\";\nimport GetUserData from \"./component/get_user_data\";\nimport BookOfTrackAttributes from \"./component/book_track_attribute\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  typography: {\n    allVariants: {\n      fontFamily: [\"Inter\", \"Kiwi Maru\"],\n      color: \"black\"\n    }\n  },\n  palette: {\n    background: {\n      default: \"#6b705c\"\n    },\n    action: {\n      disabledBackground: \"#EBEBE4\",\n      disabled: \"#000\"\n    }\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  },\n  overrides: {\n    MuiSlider: {\n      root: {\n        // color: \"#3880ff\",\n        height: 5,\n        padding: \"15px 0\",\n        width: \"95%\" // \"&$disabled\": {\n        //   color: \"#e6e4df\",\n        // },\n\n      },\n      switchBase: {// Controls default (unchecked) color for the thumb\n        // color: \"#ccc\",\n      },\n      colorSecondary: {\n        \"&$checked\": {\n          // Controls checked color for the thumb\n          color: \"#f2ff00\"\n        }\n      },\n      thumb: {\n        height: 13,\n        width: 13,\n        // size: 50,\n        // marginTop: -8,\n        // marginLeft: -12,\n        // color: \"#2B2D25\",\n        border: \"5px solid currentColor\",\n        \"&:focus, &:hover, &$active\": {\n          boxShadow: \"inherit\"\n        },\n        \"&$disabled\": {\n          opacity: 0.5 // color: \"#e6e4df\",\n\n        }\n      },\n      track: {\n        // color: \"#2B2D25\",\n        height: 5,\n        borderRadius: 4,\n        \"&$disabled\": {\n          opacity: 0.3,\n          color: \"#e6e4df\"\n        }\n      },\n      rail: {\n        color: \"#FFE8D6\",\n        height: 5,\n        borderRadius: 4 // \"&$disabled\": {\n        //   color: \"#e6e4df\",\n        // },\n\n      },\n      valueLabel: {\n        left: \"calc(-50% - 12px)\",\n        color: \"#2B2D25\"\n      }\n    }\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    padding: 10,\n    spacing: 10,\n    alignItems: \"center\",\n    justify: \"center\",\n    direction: \"row\"\n  },\n  gridItem: {\n    paddingTop: 30,\n    marginBottom: -10\n  },\n  nav_title: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    placeItems: \"left\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Kiwi Maru\"\n  },\n  step_root: {\n    // align: \"center\",\n    padding: 10,\n    maxWidth: 1000,\n    marginBottom: 50,\n    backgroundColor: \"#ddbea9\",\n    borderRadius: 10\n  },\n  step_header: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.7em\",\n    marginBottom: 10,\n    fontWeight: \"700\"\n  },\n  step_desc: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.2em\",\n    marginBottom: 30,\n    lineHeight: 1.5\n  },\n  card: {// backgroundColor: \"FFB4A2\",\n  },\n  get_rec_button: {\n    // background: \"linear-gradient(to right, #ff9966, #ff5e62)\",\n    background: \"linear-gradient(to right, #d3cce3, #e9e4f0)\",\n    borderRadius: 10,\n    boxShadow: \"0 3px 5px 2px rgba(0, 0, 0, .2)\",\n    height: 50,\n    // padding: \"0 30px\",\n    fontSize: \"1.2em\"\n  },\n  button: {\n    \"&$disabled\": {\n      backgroundColor: \"#EBEBE4\",\n      color: \"#EBEBE4\"\n    }\n  }\n}));\n\nconst Explorify = ({\n  auth\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    token\n  } = auth;\n  const [user_id, set_user_id] = useState(\"\");\n  const [rec_values, set_rec_values] = useState([]);\n  const [results, set_results] = useState(null);\n  const [selected_seeds, set_selected_seeds] = useState([]);\n  const [playlist_id, set_playlist_id] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [statusBase, setStatusBase] = useState(\"\");\n  console.log(\"rv\", rec_values);\n  console.log(\"user_id\", user_id);\n  console.log(\"results\");\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let seed_string;\n\n    if (seed_string < 0) {\n      return;\n    } else {\n      seed_string = `seed_tracks=${selected_seeds.join(\",\")}`;\n    }\n\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach(rec => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n    const {\n      data\n    } = await axios.get(`${url}?${seed_string}&${min_string}&${max_string}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    set_results(data);\n    console.log(\"data\", data, results); // const uri = results.tracks.map((r) => \"spotify:track:\" + r.id);\n    // console.log(uri);\n  };\n\n  const create_playlist = async () => {\n    setDisabled(true);\n    const url = \"https://api.spotify.com/v1/users/\";\n    const playlist_name = \"brought to you by explorify\"; // const playlist_desc = \"generated at \";\n\n    return await axios.post(`${url}${user_id}/playlists`, JSON.stringify({\n      name: playlist_name // epd,\n\n    }), {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(data => set_playlist_id(data.data.id)); // set_playlist_id(data.id);\n    // return export_to_playlist();\n\n    /* Add songs to playlist */\n  }; // const export_to_playlist = async () => {\n\n\n  async function export_to_playlist() {\n    // const playlist_id = await set_playlist_id;\n    console.log(playlist_id);\n    const url = \"https://api.spotify.com/v1/playlists/\";\n    const uri = results.tracks.map(r => \"spotify:track:\" + r.id);\n    const euri = encodeURIComponent(uri);\n    console.log(uri);\n    return await axios.post(`${url}${playlist_id}/tracks?uris=${euri}`, null, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(data => console.log(\"success\", data)); // if (data) {\n    //   console.log(\"success\", data);\n    // }\n  }\n\n  const setStatus = msg => setStatusBase({\n    msg,\n    date: new Date()\n  });\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.gridContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.gridItem,\n        children: /*#__PURE__*/_jsxDEV(GetUserData, {\n          auth: auth,\n          onChange: set_user_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.step_root,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.card_content,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_header,\n                children: \"Step 1: Input Your Seeds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_desc,\n                children: [\"Include up to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"5 seeds\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 33\n                }, this), \", these \\\"seeds\\\" will serve as reference tracks for the basis of your new set of recommended songs. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 26\n                }, this), \"Go ahead and search for some songs! When you are done, scroll down to the next step.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n                auth: auth,\n                onChange: set_selected_seeds\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.step_root,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              className: classes.card_content,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_header,\n                children: \"Step 2: Learn About Track Attributes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_desc,\n                children: [\"Spotify provides audio features and analysis for every single track in their database, but they restrict this data for only developers to see.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 19\n                }, this), \"These audio features and analysis are also known as\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"track attributes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 44\n                }, this), \"With Explorify, you can adjust these track attributes to your liking - leading you to explore more songs based on those redeeming qualities in supplement to your reference tracks!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), \"Go ahead and learn about these track attributes in the\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Book of Track Attributes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), \", then scroll down to the\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Control Panel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this), \" in Step 3 to modify them yourself.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BookOfTrackAttributes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.step_root,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_header,\n                children: \"Step 3: Fine Tune Your Track Attributes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_desc,\n                style: {\n                  paddingBottom: 15\n                },\n                children: [\"In this step, you have the ability to fine tune specific track attributes that you want to look for in your recommended songs. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 26\n                }, this), \" Based on the track attributes up above, go ahead and \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 29\n                }, this), \" the ones you want to modify. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 71\n                }, this), \"Then,\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"drag either just the min, the max, or both the min and max sliders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 19\n                }, this), \" \", \"to really specify your desired range!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RecBoards, {\n                onChange: set_rec_values\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.step_root,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_header,\n                children: \"Step 4: Get Your Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_desc,\n                style: {\n                  paddingBottom: 15\n                },\n                children: [\"Press the big \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Get Recommendations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 33\n                }, this), \" button to retrieve your results! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 33\n                }, this), \"Go ahead and click the button as many times as you want until you get a set of results that you like. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 59\n                }, this), \" If you wish to save your results, scroll down to\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Create Your Playlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), \" and \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Export Your Results\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 51\n                }, this), \" to the playlist!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.get_rec_button,\n                variant: \"contained\",\n                onClick: get_recommendations,\n                style: {\n                  marginTop: -25\n                },\n                children: [\"GET RECOMMENDATIONS\", /*#__PURE__*/_jsxDEV(DirectionsRunIcon, {\n                  style: {\n                    marginLeft: 5,\n                    fontSize: 28\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this), results && /*#__PURE__*/_jsxDEV(RecommendationResults, {\n                results: results\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.step_root,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_header,\n                children: \"Step 5: Create Your Playlist and Export Your Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_desc,\n                style: {\n                  paddingBottom: 15\n                },\n                children: [\"Press \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Create Playlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 25\n                }, this), \". Then, press\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Export to Playlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this), \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 46\n                }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Note:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this), \" Once you have created your playlist, the\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Create Your Playlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 19\n                }, this), \" button will be disabled! But, the\", \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Export Your Results\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), \" button is still available.\", \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"What does this mean?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 29\n                }, this), \" You can go back to modify your reference tracks, tune your track attributes, and get your recommendations over and over again. Once you are ready, just press \", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Export To Playlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 37\n                }, this), \" again to keep stacking your results top of the playlist that you already created.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this), \"This way, you'll have one gigantic playlist of new songs that you can put on shuffle (and not 20 new playlists).\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                className: classes.gridContainer,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  align: \"center\",\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(SnackBarButton, {\n                    className: classes.get_rec_button,\n                    variant: \"contained\",\n                    style: {\n                      margin: \"auto\",\n                      color: \"#2b2d42\",\n                      justify: \"center\"\n                    },\n                    disabled: disabled,\n                    onClick: () => create_playlist(),\n                    setStatus: setStatus,\n                    children: [\"Create Your Playlist\", /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n                      style: {\n                        marginLeft: 5,\n                        fontSize: 28\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  align: \"center\",\n                  xs: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.get_rec_button,\n                    variant: \"contained\",\n                    style: {\n                      margin: \"auto\",\n                      color: \"#2b2d42\",\n                      justify: \"center\"\n                    },\n                    onClick: export_to_playlist,\n                    children: [\"Export Your Results\", /*#__PURE__*/_jsxDEV(QueueMusicIcon, {\n                      style: {\n                        marginLeft: 5,\n                        fontSize: 28\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 21\n                  }, this), status ? /*#__PURE__*/_jsxDEV(Snackbar, {\n                    status: status.msg\n                  }, status.date, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 23\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontFamily: \"Inter\",\n            fontSize: \"1.3em\",\n            fontWeight: \"500\",\n            paddingBottom: \"50px\",\n            color: \"#fff\"\n          },\n          children: [\"Thank you for trying this out! Learn more about me at:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.xinwang.me\",\n            target: \"_blank\",\n            rel: \"noreferrer\",\n            children: \"https://www.xinwang.me.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Explorify, \"jUEylW1z79hTP1MlO1Gnc9WrUnY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Explorify;\nexport default Explorify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explorify\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/explorify.js"],"names":["React","useState","useRef","makeStyles","Box","Card","CardContent","Grid","Typography","Button","ThemeProvider","createMuiTheme","CssBaseline","styled","axios","Snackbar","SnackBarButton","SearchBar","RecBoards","RecommendationResults","GetUserData","BookOfTrackAttributes","DirectionsRunIcon","AddBoxIcon","QueueMusicIcon","theme","typography","allVariants","fontFamily","color","palette","background","default","action","disabledBackground","disabled","props","MuiButtonBase","disableRipple","overrides","MuiSlider","root","height","padding","width","switchBase","colorSecondary","thumb","border","boxShadow","opacity","track","borderRadius","rail","valueLabel","left","useStyles","gridContainer","spacing","alignItems","justify","direction","gridItem","paddingTop","marginBottom","nav_title","display","flexDirection","placeItems","fontSize","step_root","maxWidth","backgroundColor","step_header","textAlign","fontWeight","step_desc","lineHeight","card","get_rec_button","button","Explorify","auth","classes","token","user_id","set_user_id","rec_values","set_rec_values","results","set_results","selected_seeds","set_selected_seeds","playlist_id","set_playlist_id","setDisabled","success","setSuccess","statusBase","setStatusBase","console","log","get_recommendations","url","seed_string","join","min","max","Object","keys","forEach","rec","enabled","push","value","min_string","max_string","data","get","headers","Authorization","create_playlist","playlist_name","post","JSON","stringify","name","then","id","export_to_playlist","uri","tracks","map","r","euri","encodeURIComponent","setStatus","msg","date","Date","card_content","paddingBottom","marginTop","marginLeft","margin","status"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport {\n  makeStyles,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Button,\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n  styled,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Snackbar from \"./snackbar/snackbar\";\nimport SnackBarButton from \"./snackbar/snackbar_button\";\n\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport RecommendationResults from \"./component/rec_results\";\nimport GetUserData from \"./component/get_user_data\";\nimport BookOfTrackAttributes from \"./component/book_track_attribute\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport QueueMusicIcon from \"@material-ui/icons/QueueMusic\";\n\nconst theme = createMuiTheme({\n  typography: {\n    allVariants: {\n      fontFamily: [\"Inter\", \"Kiwi Maru\"],\n      color: \"black\",\n    },\n  },\n  palette: {\n    background: {\n      default: \"#6b705c\",\n    },\n    action: {\n      disabledBackground: \"#EBEBE4\",\n      disabled: \"#000\",\n    },\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  overrides: {\n    MuiSlider: {\n      root: {\n        // color: \"#3880ff\",\n        height: 5,\n        padding: \"15px 0\",\n        width: \"95%\",\n        // \"&$disabled\": {\n        //   color: \"#e6e4df\",\n        // },\n      },\n      switchBase: {\n        // Controls default (unchecked) color for the thumb\n        // color: \"#ccc\",\n      },\n      colorSecondary: {\n        \"&$checked\": {\n          // Controls checked color for the thumb\n          color: \"#f2ff00\",\n        },\n      },\n      thumb: {\n        height: 13,\n        width: 13,\n        // size: 50,\n        // marginTop: -8,\n        // marginLeft: -12,\n        // color: \"#2B2D25\",\n        border: \"5px solid currentColor\",\n        \"&:focus, &:hover, &$active\": {\n          boxShadow: \"inherit\",\n        },\n        \"&$disabled\": {\n          opacity: 0.5,\n          // color: \"#e6e4df\",\n        },\n      },\n      track: {\n        // color: \"#2B2D25\",\n        height: 5,\n        borderRadius: 4,\n        \"&$disabled\": {\n          opacity: 0.3,\n          color: \"#e6e4df\",\n        },\n      },\n      rail: {\n        color: \"#FFE8D6\",\n        height: 5,\n        borderRadius: 4,\n        // \"&$disabled\": {\n        //   color: \"#e6e4df\",\n        // },\n      },\n      valueLabel: { left: \"calc(-50% - 12px)\", color: \"#2B2D25\" },\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    padding: 10,\n    spacing: 10,\n    alignItems: \"center\",\n    justify: \"center\",\n    direction: \"row\",\n  },\n  gridItem: {\n    paddingTop: 30,\n    marginBottom: -10,\n  },\n  nav_title: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    placeItems: \"left\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Kiwi Maru\",\n  },\n  step_root: {\n    // align: \"center\",\n    padding: 10,\n    maxWidth: 1000,\n    marginBottom: 50,\n    backgroundColor: \"#ddbea9\",\n    borderRadius: 10,\n  },\n  step_header: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.7em\",\n    marginBottom: 10,\n    fontWeight: \"700\",\n  },\n  step_desc: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.2em\",\n    marginBottom: 30,\n    lineHeight: 1.5,\n  },\n  card: {\n    // backgroundColor: \"FFB4A2\",\n  },\n  get_rec_button: {\n    // background: \"linear-gradient(to right, #ff9966, #ff5e62)\",\n    background: \"linear-gradient(to right, #d3cce3, #e9e4f0)\",\n    borderRadius: 10,\n    boxShadow: \"0 3px 5px 2px rgba(0, 0, 0, .2)\",\n    height: 50,\n    // padding: \"0 30px\",\n    fontSize: \"1.2em\",\n  },\n  button: {\n    \"&$disabled\": {\n      backgroundColor: \"#EBEBE4\",\n      color: \"#EBEBE4\",\n    },\n  },\n}));\n\nconst Explorify = ({ auth }) => {\n  const classes = useStyles();\n  const { token } = auth;\n\n  const [user_id, set_user_id] = useState(\"\");\n  const [rec_values, set_rec_values] = useState([]);\n  const [results, set_results] = useState(null);\n  const [selected_seeds, set_selected_seeds] = useState([]);\n  const [playlist_id, set_playlist_id] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [statusBase, setStatusBase] = useState(\"\");\n\n  console.log(\"rv\", rec_values);\n  console.log(\"user_id\", user_id);\n  console.log(\"results\");\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let seed_string;\n    if (seed_string < 0) {\n      return;\n    } else {\n      seed_string = `seed_tracks=${selected_seeds.join(\",\")}`;\n    }\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach((rec) => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n\n    const { data } = await axios.get(\n      `${url}?${seed_string}&${min_string}&${max_string}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    set_results(data);\n    console.log(\"data\", data, results);\n    // const uri = results.tracks.map((r) => \"spotify:track:\" + r.id);\n    // console.log(uri);\n  };\n\n  const create_playlist = async () => {\n    setDisabled(true);\n    const url = \"https://api.spotify.com/v1/users/\";\n    const playlist_name = \"brought to you by explorify\";\n    // const playlist_desc = \"generated at \";\n    return await axios\n      .post(\n        `${url}${user_id}/playlists`,\n        JSON.stringify({\n          name: playlist_name,\n          // epd,\n        }),\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((data) => set_playlist_id(data.data.id));\n\n    // set_playlist_id(data.id);\n    // return export_to_playlist();\n\n    /* Add songs to playlist */\n  };\n\n  // const export_to_playlist = async () => {\n  async function export_to_playlist() {\n    // const playlist_id = await set_playlist_id;\n    console.log(playlist_id);\n    const url = \"https://api.spotify.com/v1/playlists/\";\n    const uri = results.tracks.map((r) => \"spotify:track:\" + r.id);\n    const euri = encodeURIComponent(uri);\n    console.log(uri);\n    return await axios\n      .post(`${url}${playlist_id}/tracks?uris=${euri}`, null, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((data) => console.log(\"success\", data));\n    // if (data) {\n    //   console.log(\"success\", data);\n    // }\n  }\n\n  const setStatus = (msg) => setStatusBase({ msg, date: new Date() });\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid container className={classes.gridContainer}>\n        <Grid item xs={12} className={classes.gridItem}>\n          <GetUserData auth={auth} onChange={set_user_id}></GetUserData>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Box className={classes.card}>\n            <Card className={classes.step_root}>\n              <CardContent className={classes.card_content}>\n                <Typography className={classes.step_header}>\n                  Step 1: Input Your Seeds\n                </Typography>\n                <Typography className={classes.step_desc}>\n                  Include up to <b>5 seeds</b>, these \"seeds\" will serve as\n                  reference tracks for the basis of your new set of recommended\n                  songs. <br></br>Go ahead and search for some songs! When you\n                  are done, scroll down to the next step.\n                </Typography>\n                <SearchBar\n                  auth={auth}\n                  onChange={set_selected_seeds}\n                ></SearchBar>\n              </CardContent>\n            </Card>\n          </Box>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Box className={classes.card}>\n            <Card className={classes.step_root}>\n              <CardContent className={classes.card_content}>\n                <Typography className={classes.step_header}>\n                  Step 2: Learn About Track Attributes\n                </Typography>\n                <Typography className={classes.step_desc}>\n                  Spotify provides audio features and analysis for every single\n                  track in their database, but they restrict this data for only\n                  developers to see.\n                  <br></br>\n                  These audio features and analysis are also known as{\" \"}\n                  <b>track attributes</b>. <br></br>\n                  With Explorify, you can adjust these track attributes to your\n                  liking - leading you to explore more songs based on those\n                  redeeming qualities in supplement to your reference tracks!\n                  <br></br>\n                  Go ahead and learn about these track attributes in the{\" \"}\n                  <b>Book of Track Attributes</b>, then scroll down to the{\" \"}\n                  <b>Control Panel</b> in Step 3 to modify them yourself.\n                </Typography>\n                {/* <Card className={classes.book}> */}\n\n                <BookOfTrackAttributes />\n                {/* </Card> */}\n              </CardContent>\n            </Card>\n          </Box>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Box>\n            <Card className={classes.step_root}>\n              <CardContent>\n                <Typography className={classes.step_header}>\n                  Step 3: Fine Tune Your Track Attributes\n                </Typography>\n                <Typography\n                  className={classes.step_desc}\n                  style={{ paddingBottom: 15 }}\n                >\n                  In this step, you have the ability to fine tune specific track\n                  attributes that you want to look for in your recommended\n                  songs. <br></br> Based on the track attributes up above, go\n                  ahead and <b>check</b> the ones you want to modify. <br></br>\n                  Then,{\" \"}\n                  <b>\n                    drag either just the min, the max, or both the min and max\n                    sliders\n                  </b>{\" \"}\n                  to really specify your desired range!\n                </Typography>\n                <RecBoards onChange={set_rec_values} />\n              </CardContent>\n            </Card>\n          </Box>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Box>\n            <Card className={classes.step_root}>\n              <CardContent>\n                <Typography className={classes.step_header}>\n                  Step 4: Get Your Results\n                </Typography>\n                <Typography\n                  className={classes.step_desc}\n                  style={{ paddingBottom: 15 }}\n                >\n                  Press the big <b>Get Recommendations</b> button to retrieve\n                  your results! <br></br>\n                  Go ahead and click the button as many times as you want until\n                  you get a set of results that you like. <br></br> If you wish\n                  to save your results, scroll down to{\" \"}\n                  <b>Create Your Playlist</b> and <b>Export Your Results</b> to\n                  the playlist!\n                </Typography>\n                <Button\n                  className={classes.get_rec_button}\n                  variant={\"contained\"}\n                  onClick={get_recommendations}\n                  style={{ marginTop: -25 }}\n                >\n                  {/* <Typography classes={classes.get_rec_button_font}> */}\n                  GET RECOMMENDATIONS\n                  {/* </Typography> */}\n                  <DirectionsRunIcon style={{ marginLeft: 5, fontSize: 28 }} />\n                </Button>\n                {results && <RecommendationResults results={results} />}\n              </CardContent>\n            </Card>\n          </Box>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Box>\n            <Card className={classes.step_root}>\n              <CardContent>\n                <Typography className={classes.step_header}>\n                  Step 5: Create Your Playlist and Export Your Results\n                </Typography>\n                <Typography\n                  className={classes.step_desc}\n                  style={{ paddingBottom: 15 }}\n                >\n                  Press <b>Create Playlist</b>. Then, press{\" \"}\n                  <b>Export to Playlist</b>. <br></br>\n                  <b>Note:</b> Once you have created your playlist, the{\" \"}\n                  <b>Create Your Playlist</b> button will be disabled! But, the{\" \"}\n                  <b>Export Your Results</b> button is still available.{\" \"}\n                  <br></br> <b>What does this mean?</b> You can go back to\n                  modify your reference tracks, tune your track attributes, and\n                  get your recommendations over and over again. Once you are\n                  ready, just press <b>Export To Playlist</b> again to keep\n                  stacking your results top of the playlist that you already\n                  created.\n                  <br></br>This way, you'll have one gigantic playlist of new\n                  songs that you can put on shuffle (and not 20 new playlists).\n                </Typography>\n                <Grid container className={classes.gridContainer}>\n                  <Grid item align=\"center\" xs={6}>\n                    <SnackBarButton\n                      className={classes.get_rec_button}\n                      variant={\"contained\"}\n                      style={{\n                        margin: \"auto\",\n\n                        color: \"#2b2d42\",\n                        justify: \"center\",\n                      }}\n                      disabled={disabled}\n                      onClick={() => create_playlist()}\n                      setStatus={setStatus}\n                    >\n                      Create Your Playlist\n                      <AddBoxIcon style={{ marginLeft: 5, fontSize: 28 }} />\n                    </SnackBarButton>\n                  </Grid>\n                  <Grid item align=\"center\" xs={6}>\n                    <Button\n                      className={classes.get_rec_button}\n                      variant={\"contained\"}\n                      style={{\n                        margin: \"auto\",\n\n                        color: \"#2b2d42\",\n                        justify: \"center\",\n                      }}\n                      onClick={export_to_playlist}\n                    >\n                      Export Your Results\n                      <QueueMusicIcon style={{ marginLeft: 5, fontSize: 28 }} />\n                    </Button>\n                    {status ? (\n                      <Snackbar key={status.date} status={status.msg} />\n                    ) : null}\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Card>\n          </Box>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Typography\n            style={{\n              fontFamily: \"Inter\",\n              fontSize: \"1.3em\",\n              fontWeight: \"500\",\n              paddingBottom: \"50px\",\n              color: \"#fff\",\n            }}\n          >\n            Thank you for trying this out! Learn more about me at:{\" \"}\n            <a href=\"https://www.xinwang.me\" target=\"_blank\" rel=\"noreferrer\">\n              https://www.xinwang.me.\n            </a>\n          </Typography>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default Explorify;\n"]},"metadata":{},"sourceType":"module"}