{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/explorify.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Box, Card, Paper, Grid, TextField, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"tachyons\";\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport RecommendationResults from \"./component/rec_results\"; // import GetRecommendations from \"./component/get_recommendations\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"black\"\n  },\n  title: {\n    display: \"grid\",\n    placeItems: \"center\",\n    fontSize: 20 // height: \"50vh\",\n\n  }\n});\n\nconst Explorify = ({\n  auth\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    token\n  } = auth;\n  const [rec_values, set_rec_values] = useState([]);\n  const [selected_artists, set_selected_artists] = useState([]);\n  const [results, set_results] = useState(null);\n  console.log(\"sa\", selected_artists);\n  console.log(\"rv\", rec_values);\n  console.log(\"a\", auth);\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let selected_artists_string;\n\n    if (selected_artists_string < 0) {\n      return;\n    } else {\n      selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n    }\n\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach(rec => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n    const {\n      data\n    } = await axios.get(`${url}?${selected_artists_string}&${min_string}&${max_string}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n    set_results(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    style: {\n      padding: 20\n    },\n    spacing: 10,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.title,\n        class: \"measure f3 f2-m f1-l tc code\",\n        children: \"explorify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      auth: auth,\n      onChange: set_selected_artists\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(RecBoards, {\n        onChange: set_rec_values\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: get_recommendations,\n        children: \"Get Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: results && /*#__PURE__*/_jsxDEV(RecommendationResults, {\n        results: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Explorify, \"AfIXVuW8QeKfLeBj+z6iNWpkt7U=\", false, function () {\n  return [useStyles];\n});\n\n_c = Explorify;\nexport default Explorify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explorify\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/explorify.js"],"names":["React","useState","makeStyles","Box","Card","Paper","Grid","TextField","Button","axios","SearchBar","RecBoards","RecommendationResults","useStyles","root","backgroundColor","title","display","placeItems","fontSize","Explorify","auth","classes","token","rec_values","set_rec_values","selected_artists","set_selected_artists","results","set_results","console","log","get_recommendations","url","selected_artists_string","join","min","max","Object","keys","forEach","rec","enabled","push","value","min_string","max_string","data","get","headers","Authorization","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Box,\n  Card,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport \"tachyons\";\n\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport RecommendationResults from \"./component/rec_results\";\n// import GetRecommendations from \"./component/get_recommendations\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"black\",\n  },\n  title: {\n    display: \"grid\",\n    placeItems: \"center\",\n    fontSize: 20,\n    // height: \"50vh\",\n  },\n});\n\nconst Explorify = ({ auth }) => {\n  const classes = useStyles();\n  const { token } = auth;\n  const [rec_values, set_rec_values] = useState([]);\n  const [selected_artists, set_selected_artists] = useState([]);\n  const [results, set_results] = useState(null);\n\n  console.log(\"sa\", selected_artists);\n  console.log(\"rv\", rec_values);\n  console.log(\"a\", auth);\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let selected_artists_string;\n    if (selected_artists_string < 0) {\n      return;\n    } else {\n      selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n    }\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach((rec) => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n\n    const { data } = await axios.get(\n      `${url}?${selected_artists_string}&${min_string}&${max_string}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    set_results(data);\n  };\n\n  return (\n    <Grid\n      container\n      style={{ padding: 20 }}\n      spacing={10}\n      className={classes.root}\n    >\n      <Grid item xs={12}>\n        <Paper className={classes.title} class=\"measure f3 f2-m f1-l tc code\">\n          explorify\n        </Paper>\n        {/* <Box className={classes.title}>Hi</Box> */}\n      </Grid>\n      <SearchBar auth={auth} onChange={set_selected_artists}></SearchBar>\n      <Grid item xs={6}>\n        <RecBoards onChange={set_rec_values} />\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant={\"contained\"} onClick={get_recommendations}>\n          Get Recommendations\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        {results && <RecommendationResults results={results} />}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Explorify;\n"]},"metadata":{},"sourceType":"module"}