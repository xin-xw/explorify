{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles, Paper, Grid, TextField, Button, Typography, Box } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport SearchResults from \"./search_results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"5px\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  search_bar: {\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    maxWidth: 500,\n    justify: \"center\",\n    padding: 7,\n    margin: \"auto\",\n    \"background-color\": \"white\",\n    borderRadius: 5\n  },\n  search_result: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingTop: 10,\n    marginTop: 20\n  }\n});\nexport default function SearchBar({\n  auth,\n  onChange\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    token\n  } = auth;\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n  const [seleceted_seeds, set_selected_seeds] = useState([]);\n\n  async function spotify_search_songs() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    console.log(\"search_query\", search_query);\n    const search_type_query = \"type=track\";\n    console.log(\"token\", token);\n    const {\n      data\n    } = await axios.get(`${url}?q=${search_query}&${search_type_query}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n\n    if (data && data.tracks) {\n      set_search_result(data.tracks.items);\n    }\n  }\n\n  useEffect(() => {\n    onChange(seleceted_seeds);\n  }, [onChange, seleceted_seeds]);\n  console.log(\"search_result\", search_result);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true // style={{ \"align-items\": \"flex-end\" }}\n    ,\n    spacing: 0,\n    justify: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.search_bar,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          label: \"search for seeds\",\n          placeholder: \"enter reference tracks\",\n          fullWidth: true,\n          InputLabelProps: {\n            shrink: true\n          },\n          onChange: e => set_search_string(e.target.value),\n          onKeyDown: e => {\n            console.log(e.key);\n\n            if (e.key === \"Enter\") {\n              spotify_search_songs();\n            }\n          },\n          value: search_string\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: 5,\n            backgroundColor: \"#1DB954\",\n            color: \"white\"\n          },\n          onClick: spotify_search_songs,\n          variant: \"contained\",\n          children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.search_results,\n        children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n          results: search_result,\n          onChange: set_selected_seeds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"selected seeds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), seleceted_seeds.map((songs, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [index + 1, \". \", songs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"selected seeds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), seleceted_seeds.map((songs, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        children: [index + 1, \". \", songs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"dlB6cr+A+TwYpfAAYb/Nf2r1Q7E=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Grid","TextField","Button","Typography","Box","Search","SearchResults","useStyles","root","marginTop","justifyContent","alignItems","search_bar","display","maxWidth","justify","padding","margin","borderRadius","search_result","flexDirection","paddingTop","SearchBar","auth","onChange","classes","token","set_search_result","search_string","set_search_string","seleceted_seeds","set_selected_seeds","spotify_search_songs","url","search_query","encodeURIComponent","console","log","search_type_query","data","get","headers","Authorization","tracks","items","shrink","e","target","value","key","marginLeft","backgroundColor","color","search_results","map","songs","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  makeStyles,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  Box,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport SearchResults from \"./search_results\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"5px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  search_bar: {\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    maxWidth: 500,\n    justify: \"center\",\n    padding: 7,\n    margin: \"auto\",\n    \"background-color\": \"white\",\n    borderRadius: 5,\n  },\n  search_result: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    paddingTop: 10,\n    marginTop: 20,\n  },\n});\n\nexport default function SearchBar({ auth, onChange }) {\n  const classes = useStyles();\n  const { token } = auth;\n\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n  const [seleceted_seeds, set_selected_seeds] = useState([]);\n\n  async function spotify_search_songs() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    console.log(\"search_query\", search_query);\n    const search_type_query = \"type=track\";\n    console.log(\"token\", token);\n    const { data } = await axios.get(\n      `${url}?q=${search_query}&${search_type_query}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    if (data && data.tracks) {\n      set_search_result(data.tracks.items);\n    }\n  }\n\n  useEffect(() => {\n    onChange(seleceted_seeds);\n  }, [onChange, seleceted_seeds]);\n\n  console.log(\"search_result\", search_result);\n\n  return (\n    <Grid\n      container\n      // style={{ \"align-items\": \"flex-end\" }}\n      spacing={0}\n      justify=\"center\"\n    >\n      <Grid item xs={12}>\n        <Box className={classes.search_bar}>\n          <TextField\n            id={\"outlined-basic\"}\n            variant={\"outlined\"}\n            label={\"search for seeds\"}\n            placeholder=\"enter reference tracks\"\n            fullWidth\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => set_search_string(e.target.value)}\n            onKeyDown={(e) => {\n              console.log(e.key);\n              if (e.key === \"Enter\") {\n                spotify_search_songs();\n              }\n            }}\n            value={search_string}\n          ></TextField>\n          <Button\n            style={{\n              marginLeft: 5,\n              backgroundColor: \"#1DB954\",\n              color: \"white\",\n            }}\n            onClick={spotify_search_songs}\n            variant=\"contained\"\n          >\n            <Search />\n          </Button>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Box className={classes.search_results}>\n          <SearchResults\n            results={search_result}\n            onChange={set_selected_seeds}\n          />\n          <Typography>selected seeds</Typography>\n          {seleceted_seeds.map((songs, index) => (\n            <Typography>\n              {index + 1}. {songs}\n            </Typography>\n          ))}\n        </Box>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Typography>selected seeds</Typography>\n        {seleceted_seeds.map((songs, index) => (\n          <Typography>\n            {index + 1}. {songs}\n          </Typography>\n        ))}\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}