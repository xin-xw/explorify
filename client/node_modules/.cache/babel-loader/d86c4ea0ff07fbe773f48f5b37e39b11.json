{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/snackbar/snackbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Snackbar, SnackbarContent, IconButton, CheckCircleIcon, CloseIcon, ErrorIcon, InfoWrapper } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SimpleSnackbar({\n  status,\n  msg\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(true);\n  useEffect(() => {\n    setOpen(true);\n  }, [status]);\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: open,\n    autoHideDuration: 2000,\n    onClose: handleClose,\n    children: /*#__PURE__*/_jsxDEV(SnackbarContent, {\n      status: status,\n      contentprops: {\n        \"aria-describedby\": \"message-id\"\n      } // prettier-ignore\n      ,\n      message: /*#__PURE__*/_jsxDEV(InfoWrapper, {\n        id: \"message-id\",\n        children: [status === 'success' ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), msg || `Form submission status: ${status}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this),\n      action: [/*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: handleClose,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, \"close\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleSnackbar, \"5swwslfKOPgwwZeTkoqeSpghmqY=\");\n\n_c = SimpleSnackbar;\nexport default SimpleSnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleSnackbar\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/snackbar/snackbar.js"],"names":["React","useEffect","Snackbar","SnackbarContent","IconButton","CheckCircleIcon","CloseIcon","ErrorIcon","InfoWrapper","SimpleSnackbar","status","msg","open","setOpen","useState","handleClose","event","reason","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACEC,QADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,eAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,WAPF,QAQO,SARP;;;AAUA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAxB,EAAyC;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,KAAK,CAACc,QAAN,CAAe,IAAf,CAAxB;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFQ,EAEN,CAACH,MAAD,CAFM,CAAT;;AAIA,WAASK,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AAED,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAE;AACZK,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,IAAI,EAAEP,IALR;AAME,IAAA,gBAAgB,EAAE,IANpB;AAOE,IAAA,OAAO,EAAEG,WAPX;AAAA,2BASE,QAAC,eAAD;AACE,MAAA,MAAM,EAAEL,MADV;AAEE,MAAA,YAAY,EAAE;AACZ,4BAAoB;AADR,OAFhB,CAKE;AALF;AAME,MAAA,OAAO,eACL,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,YAAhB;AAAA,mBACGA,MAAM,KAAK,SAAX,gBACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,gBADD,gBAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAKGC,GAAG,IAAK,2BAA0BD,MAAO,EAL5C;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAeE,MAAA,MAAM,EAAE,cACN,QAAC,UAAD;AAEE,sBAAW,OAFb;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAEK,WAJX;AAAA,+BAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AANF,SACM,OADN;AAAA;AAAA;AAAA;AAAA,cADM;AAfV;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GAnDQN,c;;KAAAA,c;AAoDT,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\nimport {\n  Snackbar,\n  SnackbarContent,\n  IconButton,\n  CheckCircleIcon,\n  CloseIcon,\n  ErrorIcon,\n  InfoWrapper,\n} from \"./style\";\n\nfunction SimpleSnackbar({ status, msg }) {\n  const [open, setOpen] = React.useState(true);\n  useEffect(() => {\n    setOpen(true);\n  }, [status]);\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={open}\n      autoHideDuration={2000}\n      onClose={handleClose}\n    >\n      <SnackbarContent\n        status={status}\n        contentprops={{\n          \"aria-describedby\": \"message-id\",\n        }}\n        // prettier-ignore\n        message={(\n          <InfoWrapper id='message-id'>\n            {status === 'success' ?\n              <CheckCircleIcon /> :\n              <ErrorIcon />\n            }\n            {msg || `Form submission status: ${status}`}\n          </InfoWrapper>\n        )}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n}\nexport default SimpleSnackbar;\n"]},"metadata":{},"sourceType":"module"}