{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { Grid, Typography, Slider, Checkbox, makeStyles, Paper, Card, CardContent, Box, Avatar } from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\"\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\"\n    }\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"'\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\"\n    }\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\"\n  },\n  // rec_font: {\n  //   color: \"#000\",\n  //   // backgroundColor: \"#B5838D\",\n  //   // backgroundColor: \"#FFCDB2\",\n  // },\n  rec_card_root: {\n    maxWidth: 925,\n    // height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10\n  },\n  rec_font: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    fontFamily: \"Sawarabi Mincho\",\n    paddingTop: 20,\n    fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\"\n  },\n  rec_font_2: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.5em\",\n    textAlign: \"left\"\n  },\n  rec_font_3: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Benne\",\n    // fontWeight: 700,\n    fontSize: \"1.5em\" // textAlign: \"left\",\n\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9)\n  },\n  rec_root: {\n    // padding: 5,\n    marginTop: 15,\n    marginBottom: 10,\n    maxWidth: 825,\n    maxHeight: 100,\n    backgroundColor: \"#C9C9BA\",\n    // backgroundColor: \"transparent\",\n    // border: \"2px solid #000\",\n    marginLeft: 5,\n    marginRight: 5,\n    borderRadius: 10\n  }\n}));\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  }\n};\nexport default function RecBoards({\n  onChange\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      padding: 0\n    },\n    justify: \"center\",\n    direction: \"row\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.rec_card_root,\n        style: {\n          backgroundColor: \"#ffe8d6\",\n          boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n          paddingBottom: 30\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.rec_font,\n          children: \"Control Panel \\uD83C\\uDFAE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), Object.keys(recs).map(rec => /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.rec_root,\n          variant: \"elevation\",\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            style: {\n              maxWidth: 800\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.rec_font_2,\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                className: classes.checkboxes_root,\n                disableRipple: true,\n                color: \"default\",\n                style: {\n                  marginLeft: -6\n                },\n                checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: clsx(classes.checkboxes_icon, classes.checked_icon)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this),\n                icon: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.checkboxes_icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 27\n                }, this),\n                inputProps: {\n                  \"aria-label\": \"decorative checkbox\"\n                },\n                checked: board_values[rec].enabled,\n                onChange: (e, newValue) => toggle_rec(rec, newValue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), rec]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              style: {\n                paddingTop: 5\n              },\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 1,\n                align: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.rec_font_3,\n                  children: \"min\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 10,\n                align: \"center\",\n                justify: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Slider, {\n                  disabled: !board_values[rec].enabled,\n                  value: board_values[rec].value,\n                  onChange: (e, new_value) => handle_change(rec, new_value),\n                  valueLabelDisplay: \"auto\",\n                  \"aria-labelledby\": \"range-slider\",\n                  min: recs[rec].min,\n                  max: recs[rec].max,\n                  step: recs[rec].step\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 1,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.rec_font_3,\n                  children: \"max\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this) // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n  //   <Paper elevation={3} className={classes.paper_root}>\n  //     {/* <Grid item xs={12}>  */}\n  //     {Object.keys(recs).map((rec) => (\n  //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n  //         <Checkbox\n  //           className={classes.checkboxes_root}\n  //           disableRipple\n  //           color=\"default\"\n  //           checkedIcon={\n  //             <span\n  //               className={clsx(\n  //                 classes.checkboxes_icon,\n  //                 classes.checked_icon\n  //               )}\n  //             />\n  //           }\n  //           icon={<span className={classes.checkboxes_icon} />}\n  //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n  //           checked={board_values[rec].enabled}\n  //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n  //         />\n  //         <div style={{ flex: 1 }}>\n  //           <Grid container>\n  //             <Typography className={classes.font_color}>{rec}</Typography>\n  //             <Grid container spacing={1}>\n  //               <Grid item>\n  //                 <Typography className={classes.font_color}>min</Typography>\n  //               </Grid>\n  //               <Grid item xs>\n  //                 <Slider\n  //                   disabled={!board_values[rec].enabled}\n  //                   value={board_values[rec].value}\n  //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n  //                   valueLabelDisplay={\"auto\"}\n  //                   aria-labelledby={\"range-slider\"}\n  //                   min={recs[rec].min}\n  //                   max={recs[rec].max}\n  //                   step={recs[rec].step}\n  //                 />\n  //               </Grid>\n  //               <Grid item>\n  //                 <Typography className={classes.font_color}>max</Typography>\n  //               </Grid>\n  //             </Grid>\n  //           </Grid>\n  //         </div>\n  //       </div>\n  //     ))}\n  //     {/* </Grid> */}\n  //   </Paper>\n  // </Grid>\n  ;\n}\n\n_s(RecBoards, \"FYpyDbV+lVUhzHqwNbz1R5Fj39k=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecBoards\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js"],"names":["React","useState","useEffect","clsx","Grid","Typography","Slider","Checkbox","makeStyles","Paper","Card","CardContent","Box","Avatar","useStyles","theme","checkboxes_root","backgroundColor","checkboxes_icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checked_icon","display","content","paper_root","padding","rec_card_root","maxWidth","marginBottom","rec_font","color","fontFamily","paddingTop","fontWeight","fontSize","textAlign","rec_font_2","rec_font_3","track_attribute_image","margin","spacing","rec_root","marginTop","maxHeight","marginLeft","marginRight","recs","acousticness","value","enabled","min","max","step","danceability","energy","instrumentalness","liveness","loudness","popularity","speechiness","tempo","valence","RecBoards","onChange","classes","board_values","set_board_values","handle_change","rec","new_board_values","toggle_rec","paddingBottom","Object","keys","map","e","newValue","new_value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Typography,\n  Slider,\n  Checkbox,\n  makeStyles,\n  Paper,\n  Card,\n  CardContent,\n  Box,\n  Avatar,\n} from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\nconst useStyles = makeStyles((theme) => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\",\n  },\n  // rec_font: {\n  //   color: \"#000\",\n  //   // backgroundColor: \"#B5838D\",\n  //   // backgroundColor: \"#FFCDB2\",\n  // },\n  rec_card_root: {\n    maxWidth: 925,\n    // height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10,\n  },\n  rec_font: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    fontFamily: \"Sawarabi Mincho\",\n    paddingTop: 20,\n    fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\",\n  },\n  rec_font_2: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.5em\",\n    textAlign: \"left\",\n  },\n  rec_font_3: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Benne\",\n    // fontWeight: 700,\n    fontSize: \"1.5em\",\n    // textAlign: \"left\",\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n  },\n  rec_root: {\n    // padding: 5,\n    marginTop: 15,\n    marginBottom: 10,\n    maxWidth: 825,\n    maxHeight: 100,\n    backgroundColor: \"#C9C9BA\",\n    // backgroundColor: \"transparent\",\n    // border: \"2px solid #000\",\n    marginLeft: 5,\n    marginRight: 5,\n    borderRadius: 10,\n  },\n}));\n\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0,\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1,\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1,\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n};\n\nexport default function RecBoards({ onChange }) {\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n\n  return (\n    <Grid\n      container\n      spacing={2}\n      style={{ padding: 0 }}\n      justify=\"center\"\n      direction=\"row\"\n    >\n      <Grid item xs={12}>\n        <Card\n          className={classes.rec_card_root}\n          style={{\n            backgroundColor: \"#ffe8d6\",\n            boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n            paddingBottom: 30,\n          }}\n        >\n          <Typography className={classes.rec_font}>Control Panel 🎮</Typography>\n          {Object.keys(recs).map((rec) => (\n            <Paper className={classes.rec_root} variant=\"elevation\">\n              <CardContent style={{ maxWidth: 800 }}>\n                <Typography className={classes.rec_font_2}>\n                  <Checkbox\n                    className={classes.checkboxes_root}\n                    disableRipple\n                    color=\"default\"\n                    style={{ marginLeft: -6 }}\n                    checkedIcon={\n                      <span\n                        className={clsx(\n                          classes.checkboxes_icon,\n                          classes.checked_icon\n                        )}\n                      />\n                    }\n                    icon={<span className={classes.checkboxes_icon} />}\n                    inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n                    checked={board_values[rec].enabled}\n                    onChange={(e, newValue) => toggle_rec(rec, newValue)}\n                  />\n                  {rec}\n                </Typography>\n                <Grid container style={{ paddingTop: 5 }}>\n                  <Grid item xs={1} align=\"right\">\n                    <Typography className={classes.rec_font_3}>min</Typography>\n                  </Grid>\n                  <Grid item xs={10} align=\"center\" justify=\"center\">\n                    <Slider\n                      disabled={!board_values[rec].enabled}\n                      value={board_values[rec].value}\n                      onChange={(e, new_value) => handle_change(rec, new_value)}\n                      valueLabelDisplay={\"auto\"}\n                      aria-labelledby={\"range-slider\"}\n                      min={recs[rec].min}\n                      max={recs[rec].max}\n                      step={recs[rec].step}\n                    />\n                  </Grid>\n                  <Grid item xs={1}>\n                    <Typography className={classes.rec_font_3}>max</Typography>\n                  </Grid>\n                </Grid>\n              </CardContent>\n            </Paper>\n          ))}\n        </Card>\n      </Grid>\n    </Grid>\n\n    // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n    //   <Paper elevation={3} className={classes.paper_root}>\n    //     {/* <Grid item xs={12}>  */}\n    //     {Object.keys(recs).map((rec) => (\n    //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n    //         <Checkbox\n    //           className={classes.checkboxes_root}\n    //           disableRipple\n    //           color=\"default\"\n    //           checkedIcon={\n    //             <span\n    //               className={clsx(\n    //                 classes.checkboxes_icon,\n    //                 classes.checked_icon\n    //               )}\n    //             />\n    //           }\n    //           icon={<span className={classes.checkboxes_icon} />}\n    //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n    //           checked={board_values[rec].enabled}\n    //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n    //         />\n    //         <div style={{ flex: 1 }}>\n    //           <Grid container>\n    //             <Typography className={classes.font_color}>{rec}</Typography>\n    //             <Grid container spacing={1}>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>min</Typography>\n    //               </Grid>\n    //               <Grid item xs>\n    //                 <Slider\n    //                   disabled={!board_values[rec].enabled}\n    //                   value={board_values[rec].value}\n    //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n    //                   valueLabelDisplay={\"auto\"}\n    //                   aria-labelledby={\"range-slider\"}\n    //                   min={recs[rec].min}\n    //                   max={recs[rec].max}\n    //                   step={recs[rec].step}\n    //                 />\n    //               </Grid>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>max</Typography>\n    //               </Grid>\n    //             </Grid>\n    //           </Grid>\n    //         </div>\n    //       </div>\n    //     ))}\n    //     {/* </Grid> */}\n    //   </Paper>\n    // </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}