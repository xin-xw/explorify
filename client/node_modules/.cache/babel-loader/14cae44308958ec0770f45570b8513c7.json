{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/explorify.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Box, Card, CardContent, Grid, Typography, Button, ThemeProvider, createMuiTheme, CssBaseline } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport RecommendationResults from \"./component/rec_results\";\nimport GetUserData from \"./component/get_user_data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Inter\", \"Kiwi Maru\"]\n  },\n  palette: {\n    background: {\n      default: \"white\"\n    }\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true\n    }\n  }\n});\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    padding: 10,\n    spacing: 10,\n    alignItems: \"center\",\n    direction: \"row\"\n  },\n  nav_title: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    placeItems: \"left\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Kiwi Maru\"\n  },\n  step_one_root: {\n    // align: \"center\",\n    maxWidth: 1000,\n    marginBottom: 50\n  },\n  step_one_header: {\n    color: \"black\",\n    letterSpacing: 1.1,\n    textAlign: \"left\",\n    fontSize: \"1.5em\",\n    marginBottom: 10,\n    fontWeight: \"600\"\n  },\n  step_one_desc: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.1em\",\n    marginBottom: 20\n  }\n}));\n\nconst Explorify = ({\n  auth\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    token\n  } = auth;\n  const [rec_values, set_rec_values] = useState([]);\n  const [selected_artists, set_selected_artists] = useState([]);\n  const [results, set_results] = useState(null); // console.log(\"sa\", selected_artists);\n  // console.log(\"rv\", rec_values);\n  // console.log(\"a\", auth);\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let selected_artists_string;\n\n    if (selected_artists_string < 0) {\n      return;\n    } else {\n      selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n    }\n\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach(rec => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n    const {\n      data\n    } = await axios.get(`${url}?${selected_artists_string}&${min_string}&${max_string}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n    set_results(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.gridContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.nav_title,\n          children: \"explorify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(GetUserData, {\n          auth: auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.step_one_root,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_one_header,\n                children: \"step 1: input your \\\"seeds\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.step_one_desc,\n                children: [\"input up to 5 seeds, these seeds will serve as reference tracks for the basis of your results \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 56\n                }, this), \"you can search for track names or artist names\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n                className: classes.step_one_search_bar,\n                auth: auth,\n                onChange: set_selected_artists\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 8,\n        children: /*#__PURE__*/_jsxDEV(RecBoards, {\n          onChange: set_rec_values\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: \"auto\",\n            justify: \"center\",\n            backgroundColor: \"#1DB954\",\n            color: \"white\"\n          },\n          variant: \"contained\",\n          onClick: get_recommendations,\n          children: \"Get Recommendations!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: results && /*#__PURE__*/_jsxDEV(RecommendationResults, {\n          results: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Explorify, \"AfIXVuW8QeKfLeBj+z6iNWpkt7U=\", false, function () {\n  return [useStyles];\n});\n\n_c = Explorify;\nexport default Explorify;\n\nvar _c;\n\n$RefreshReg$(_c, \"Explorify\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/explorify.js"],"names":["React","useState","makeStyles","Box","Card","CardContent","Grid","Typography","Button","ThemeProvider","createMuiTheme","CssBaseline","axios","SearchBar","RecBoards","RecommendationResults","GetUserData","theme","typography","fontFamily","palette","background","default","props","MuiButtonBase","disableRipple","useStyles","gridContainer","padding","spacing","alignItems","direction","nav_title","display","flexDirection","placeItems","fontSize","step_one_root","maxWidth","marginBottom","step_one_header","color","letterSpacing","textAlign","fontWeight","step_one_desc","Explorify","auth","classes","token","rec_values","set_rec_values","selected_artists","set_selected_artists","results","set_results","get_recommendations","url","selected_artists_string","join","min","max","Object","keys","forEach","rec","enabled","push","value","min_string","max_string","data","get","headers","Authorization","console","log","step_one_search_bar","margin","justify","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Button,\n  ThemeProvider,\n  createMuiTheme,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nimport SearchBar from \"./component/search_bar\";\nimport RecBoards from \"./component/rec_boards\";\nimport RecommendationResults from \"./component/rec_results\";\nimport GetUserData from \"./component/get_user_data\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\"Inter\", \"Kiwi Maru\"],\n  },\n  palette: {\n    background: {\n      default: \"white\",\n    },\n  },\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    padding: 10,\n    spacing: 10,\n    alignItems: \"center\",\n    direction: \"row\",\n  },\n  nav_title: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    placeItems: \"left\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Kiwi Maru\",\n  },\n  step_one_root: {\n    // align: \"center\",\n    maxWidth: 1000,\n    marginBottom: 50,\n  },\n  step_one_header: {\n    color: \"black\",\n    letterSpacing: 1.1,\n    textAlign: \"left\",\n    fontSize: \"1.5em\",\n    marginBottom: 10,\n    fontWeight: \"600\",\n  },\n  step_one_desc: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.1em\",\n    marginBottom: 20,\n  },\n}));\n\nconst Explorify = ({ auth }) => {\n  const classes = useStyles();\n  const { token } = auth;\n  const [rec_values, set_rec_values] = useState([]);\n  const [selected_artists, set_selected_artists] = useState([]);\n  const [results, set_results] = useState(null);\n\n  // console.log(\"sa\", selected_artists);\n  // console.log(\"rv\", rec_values);\n  // console.log(\"a\", auth);\n\n  const get_recommendations = async () => {\n    const url = \"https://api.spotify.com/v1/recommendations\";\n    let selected_artists_string;\n    if (selected_artists_string < 0) {\n      return;\n    } else {\n      selected_artists_string = `seed_artists=${selected_artists.join(\",\")}`;\n    }\n    let min = [];\n    let max = [];\n    Object.keys(rec_values).forEach((rec) => {\n      if (rec_values[rec].enabled) {\n        min.push(`min_${rec}=${rec_values[rec].value[0]}`);\n        max.push(`min_${rec}=${rec_values[rec].value[1]}`);\n      }\n    });\n\n    const min_string = min.join(\"&\");\n    const max_string = max.join(\"&\");\n\n    const { data } = await axios.get(\n      `${url}?${selected_artists_string}&${min_string}&${max_string}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    set_results(data);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Grid container className={classes.gridContainer}>\n        <Grid item xs={12}>\n          <Typography className={classes.nav_title}>explorify</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <GetUserData auth={auth}></GetUserData>\n        </Grid>\n        <Grid item xs={12} align=\"center\">\n          <Box>\n            <Card className={classes.step_one_root}>\n              <CardContent>\n                <Typography className={classes.step_one_header}>\n                  step 1: input your \"seeds\"\n                </Typography>\n                <Typography className={classes.step_one_desc}>\n                  input up to 5 seeds, these seeds will serve as reference\n                  tracks for the basis of your results <br></br>you can search\n                  for track names or artist names\n                </Typography>\n                <SearchBar\n                  className={classes.step_one_search_bar}\n                  auth={auth}\n                  onChange={set_selected_artists}\n                ></SearchBar>\n              </CardContent>\n            </Card>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <RecBoards onChange={set_rec_values} />\n        </Grid>\n        <Grid item xs={4}>\n          <Button\n            style={{\n              margin: \"auto\",\n              justify: \"center\",\n              backgroundColor: \"#1DB954\",\n              color: \"white\",\n            }}\n            variant={\"contained\"}\n            onClick={get_recommendations}\n          >\n            Get Recommendations!\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          {results && <RecommendationResults results={results} />}\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default Explorify;\n"]},"metadata":{},"sourceType":"module"}