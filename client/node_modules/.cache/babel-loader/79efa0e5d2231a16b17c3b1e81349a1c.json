{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/rec_results.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, makeStyles, Typography, List, ListItem, ListItemText, Avatar } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    direction: \"row\",\n    padding: 10\n  },\n  cover_art: {\n    marginLeft: -15,\n    marginRight: 10,\n    // width: theme.spacing(5.5),\n    width: theme.spacing(6),\n    // height: theme.spacing(5.5),\n    height: theme.spacing(6)\n  },\n  track_name: {\n    // fontSize: 16,\n    // fontWeight: 500,\n    fontSize: 13.5,\n    fontWeight: 500\n  },\n  artist_name: {\n    // fontSize: 13,\n    fontSize: 11\n  }\n}));\n\nconst RecommendationResults = ({\n  results\n}) => {\n  _s();\n\n  console.log(results);\n  const classes = useStyles();\n\n  if (!results.tracks || results.tracks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"No Results!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    children: results.tracks.map(track => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: track.album.images[2].url,\n          variant: \"square\",\n          className: classes.cover_art\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_name,\n            children: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.artist_name,\n            children: track.artists[0].name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecommendationResults, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecommendationResults;\nexport default RecommendationResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecommendationResults\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_results.js"],"names":["React","Grid","makeStyles","Typography","List","ListItem","ListItemText","Avatar","useStyles","theme","gridContainer","direction","padding","cover_art","marginLeft","marginRight","width","spacing","height","track_name","fontSize","fontWeight","artist_name","RecommendationResults","results","console","log","classes","tracks","length","map","track","album","images","url","name","artists","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,QALF,EAMEC,YANF,EAOEC,MAPF,QAQO,mBARP;;AAUA,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAD,KAAY;AACvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE,KADE;AAEbC,IAAAA,OAAO,EAAE;AAFI,GADwB;AAKvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,CAAC,EADJ;AAETC,IAAAA,WAAW,EAAE,EAFJ;AAGT;AACAC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAJE;AAKT;AACAC,IAAAA,MAAM,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd;AANC,GAL4B;AAavCE,EAAAA,UAAU,EAAE;AACV;AACA;AACAC,IAAAA,QAAQ,EAAE,IAHA;AAIVC,IAAAA,UAAU,EAAE;AAJF,GAb2B;AAmBvCC,EAAAA,WAAW,EAAE;AACX;AACAF,IAAAA,QAAQ,EAAE;AAFC;AAnB0B,CAAZ,CAAD,CAA5B;;AAyBA,MAAMG,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,OAAO,GAAGnB,SAAS,EAAzB;;AACA,MAAI,CAACgB,OAAO,CAACI,MAAT,IAAmBJ,OAAO,CAACI,MAAR,CAAeC,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEF,OAAO,CAACjB,aAAnC;AAAA,cAEGc,OAAO,CAACI,MAAR,CAAeE,GAAf,CAAoBC,KAAD,iBAClB,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,IAAI,MAAd;AAAe,QAAA,EAAE,EAAE,EAAnB;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,GAAG,EAAEA,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,GAD7B;AAEE,UAAA,OAAO,EAAC,QAFV;AAGE,UAAA,SAAS,EAAEP,OAAO,CAACd;AAHrB;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,YAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEc,OAAO,CAACR,UAA/B;AAAA,sBACGY,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAER,OAAO,CAACL,WAA/B;AAAA,sBACGS,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiBD;AADpB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAA4BJ,KAAK,CAACM,EAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAhCD;;GAAMd,qB;UAEYf,S;;;KAFZe,qB;AAkCN,eAAeA,qBAAf","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    direction: \"row\",\n    padding: 10,\n  },\n  cover_art: {\n    marginLeft: -15,\n    marginRight: 10,\n    // width: theme.spacing(5.5),\n    width: theme.spacing(6),\n    // height: theme.spacing(5.5),\n    height: theme.spacing(6),\n  },\n  track_name: {\n    // fontSize: 16,\n    // fontWeight: 500,\n    fontSize: 13.5,\n    fontWeight: 500,\n  },\n  artist_name: {\n    // fontSize: 13,\n    fontSize: 11,\n  },\n}));\n\nconst RecommendationResults = ({ results }) => {\n  console.log(results);\n  const classes = useStyles();\n  if (!results.tracks || results.tracks.length === 0) {\n    return <Typography>No Results!</Typography>;\n  }\n  return (\n    <Grid container className={classes.gridContainer}>\n      {/* <List> */}\n      {results.tracks.map((track) => (\n        <Grid item xs={6}>\n          <ListItem item xs={12} key={track.id}>\n            <Avatar\n              src={track.album.images[2].url}\n              variant=\"square\"\n              className={classes.cover_art}\n            ></Avatar>\n            <ListItemText>\n              <Typography className={classes.track_name}>\n                {track.name}\n              </Typography>\n              <Typography className={classes.artist_name}>\n                {track.artists[0].name}\n              </Typography>\n            </ListItemText>\n          </ListItem>\n        </Grid>\n      ))}\n\n      {/* </List> */}\n    </Grid>\n  );\n};\n\nexport default RecommendationResults;\n"]},"metadata":{},"sourceType":"module"}