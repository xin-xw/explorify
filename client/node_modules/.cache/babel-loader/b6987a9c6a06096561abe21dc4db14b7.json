{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/search_results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { ListItem, List, ListItemIcon, ListItemText, Checkbox, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\"\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\"\n    }\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"'\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\"\n    }\n  }\n});\nexport default function SearchResults({\n  results,\n  onChange\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, set_checked] = useState([]);\n  console.log(checked);\n\n  const handle_toggle = value => () => {\n    const cur_index = checked.indexOf(value);\n    const new_checked = [...checked];\n\n    if (cur_index === -1) {\n      if (checked.length < 5) {\n        new_checked.push(value);\n      }\n    } else {\n      new_checked.splice(cur_index, 1);\n    }\n\n    set_checked(new_checked);\n    onChange(new_checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: results.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: handle_toggle(item.id),\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          className: classes.checkboxes_root,\n          checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: clsx(classes.checkboxes_icon, classes.checked_icon)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this),\n          icon: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.checkboxes_icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this),\n          inputProps: {\n            \"aria-label\": \"decorative checkbox\"\n          },\n          disableRipple: true,\n          edge: \"start\",\n          checked: checked.indexOf(item.id) !== -1,\n          tabIndex: -1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchResults, \"iJEc0rdkzmwaRFHF5BfE1z3s24E=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/search_results.js"],"names":["React","useState","clsx","ListItem","List","ListItemIcon","ListItemText","Checkbox","makeStyles","useStyles","checkboxes_root","backgroundColor","checkboxes_icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checked_icon","display","content","SearchResults","results","onChange","classes","checked","set_checked","console","log","handle_toggle","value","cur_index","indexOf","new_checked","length","push","splice","map","item","index","id","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  ListItem,\n  List,\n  ListItemIcon,\n  ListItemText,\n  Checkbox,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n});\n\nexport default function SearchResults({ results, onChange }) {\n  const classes = useStyles();\n  const [checked, set_checked] = useState([]);\n  console.log(checked);\n\n  const handle_toggle = (value) => () => {\n    const cur_index = checked.indexOf(value);\n    const new_checked = [...checked];\n    if (cur_index === -1) {\n      if (checked.length < 5) {\n        new_checked.push(value);\n      }\n    } else {\n      new_checked.splice(cur_index, 1);\n    }\n    set_checked(new_checked);\n    onChange(new_checked);\n  };\n\n  return (\n    <List>\n      {results.map((item, index) => (\n        <ListItem key={item.id} button onClick={handle_toggle(item.id)}>\n          <ListItemIcon>\n            <Checkbox\n              className={classes.checkboxes_root}\n              checkedIcon={\n                <span\n                  className={clsx(\n                    classes.checkboxes_icon,\n                    classes.checked_icon\n                  )}\n                />\n              }\n              icon={<span className={classes.checkboxes_icon} />}\n              inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n              disableRipple={true}\n              edge={\"start\"}\n              checked={checked.indexOf(item.id) !== -1}\n              tabIndex={-1}\n            />\n          </ListItemIcon>\n          <ListItemText>{item.name}</ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}