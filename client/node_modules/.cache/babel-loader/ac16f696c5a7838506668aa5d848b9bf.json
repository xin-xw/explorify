{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { makeStyles, Paper, Grid, TextField, Button, Typography } from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport SearchResults from \"./search_results\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: \"5px\",\n    alignItems: \"center\"\n  },\n  container: {\n    \"& > *\": {\n      margin: theme.spacing(1) // width: \"25ch\",\n\n    }\n  },\n  search_bar: {\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    maxWidth: 500,\n    justify: \"center\",\n    padding: 5,\n    margin: \"auto\",\n    \"background-color\": \"white\"\n  },\n  text_field: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5)\n  }\n}));\nexport default function SearchBar({\n  auth,\n  onChange\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    token\n  } = auth;\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n  const [selected_artists, set_selected_artists] = useState([]);\n\n  async function spotify_search_artists() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    console.log(\"search_query\", search_query);\n    const search_type_query = \"type=artist\";\n    console.log(\"token\", token);\n    const {\n      data\n    } = await axios.get(`${url}?q=${search_query}&${search_type_query}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(data);\n\n    if (data && data.artists) {\n      set_search_result(data.artists.items);\n    }\n  }\n\n  useEffect(() => {\n    onChange(selected_artists);\n  }, [onChange, selected_artists]);\n  console.log(\"search_result\", search_result);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.search_bar,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            variant: \"outlined\",\n            label: \"Search for Artists\",\n            fullWidth: true,\n            onChange: event => set_search_string(event.target.value),\n            value: search_string,\n            margin: \"normal\",\n            className: classes.text_field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: \"#1DB954\"\n          },\n          onClick: spotify_search_artists,\n          children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 6,\n      children: selected_artists.map((artist, index) => /*#__PURE__*/_jsxDEV(Typography, {\n        children: [index + 1, \". \", artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(SearchResults, {\n        results: search_result,\n        onChange: set_selected_artists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBar, \"idtz70GzqcG4+drPkSOGlMemqYA=\", false, function () {\n  return [useStyles];\n});\n\n_c = SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/search_bar.js"],"names":["React","useState","useEffect","axios","makeStyles","Paper","Grid","TextField","Button","Typography","Search","SearchResults","useStyles","theme","root","marginTop","alignItems","container","margin","spacing","search_bar","display","maxWidth","justify","padding","text_field","marginLeft","marginRight","SearchBar","auth","onChange","classes","token","search_result","set_search_result","search_string","set_search_string","selected_artists","set_selected_artists","spotify_search_artists","url","search_query","encodeURIComponent","console","log","search_type_query","data","get","headers","Authorization","artists","items","event","target","value","backgroundColor","map","artist","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  makeStyles,\n  Paper,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport SearchResults from \"./search_results\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: \"5px\",\n    alignItems: \"center\",\n  },\n  container: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      // width: \"25ch\",\n    },\n  },\n  search_bar: {\n    display: \"flex\",\n    \"flex-direction\": \"row\",\n    maxWidth: 500,\n    justify: \"center\",\n    padding: 5,\n    margin: \"auto\",\n    \"background-color\": \"white\",\n  },\n  text_field: {\n    marginLeft: theme.spacing(0.5),\n    marginRight: theme.spacing(0.5),\n  },\n}));\n\nexport default function SearchBar({ auth, onChange }) {\n  const classes = useStyles();\n  const { token } = auth;\n\n  const [search_result, set_search_result] = useState([]);\n  const [search_string, set_search_string] = useState(\"\");\n  const [selected_artists, set_selected_artists] = useState([]);\n\n  async function spotify_search_artists() {\n    const url = \"https://api.spotify.com/v1/search\";\n    const search_query = encodeURIComponent(search_string);\n    console.log(\"search_query\", search_query);\n    const search_type_query = \"type=artist\";\n    console.log(\"token\", token);\n    const { data } = await axios.get(\n      `${url}?q=${search_query}&${search_type_query}`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    console.log(data);\n    if (data && data.artists) {\n      set_search_result(data.artists.items);\n    }\n  }\n\n  useEffect(() => {\n    onChange(selected_artists);\n  }, [onChange, selected_artists]);\n\n  console.log(\"search_result\", search_result);\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Paper elevation={3} className={classes.search_bar}>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id={\"outlined-basic\"}\n              variant={\"outlined\"}\n              label={\"Search for Artists\"}\n              fullWidth\n              onChange={(event) => set_search_string(event.target.value)}\n              value={search_string}\n              margin=\"normal\"\n              className={classes.text_field}\n            ></TextField>\n          </form>\n          <Button\n            style={{ backgroundColor: \"#1DB954\" }}\n            onClick={spotify_search_artists}\n          >\n            <Search />\n          </Button>\n        </Paper>\n      </Grid>\n      <Grid item xs={6}>\n        {selected_artists.map((artist, index) => (\n          <Typography>\n            {index + 1}. {artist}\n          </Typography>\n        ))}\n      </Grid>\n      <Grid item xs={12}>\n        <SearchResults\n          results={search_result}\n          onChange={set_selected_artists}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}