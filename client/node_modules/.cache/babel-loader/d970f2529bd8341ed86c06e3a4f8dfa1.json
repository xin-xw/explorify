{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/snackbar/snackbar.js\";\nimport React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const withSnackbar = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  return _s(props => {\n    _s();\n\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState(\"I'm a custom snackbar\");\n    const [duration, setDuration] = useState(2000);\n    const [severity, setSeverity] = useState(\"success\");\n    /** error | warning | info */\n\n    const showMessage = (message, severity = \"success\", duration = 2000) => {\n      setMessage(message);\n      setSeverity(severity);\n      setDuration(duration);\n      setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(WrappedComponent, { ...props,\n        snackbarShowMessage: showMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        },\n        autoHideDuration: duration,\n        open: open,\n        onClose: handleClose,\n        TransitionComponent: Slide,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"filled\",\n          onClose: handleClose,\n          severity: severity,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }, \"uPajyaJHzWVFr2F9Jg5UyMxsMjw=\");\n};","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/snackbar/snackbar.js"],"names":["React","useState","Snackbar","Slide","Alert","withSnackbar","WrappedComponent","props","open","setOpen","message","setMessage","duration","setDuration","severity","setSeverity","showMessage","handleClose","event","reason","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;;;AAEA,OAAO,MAAMC,YAAY,GAAIC,gBAAD,IAAsB;AAAA;;AAChD,YAAQC,KAAD,IAAW;AAAA;;AAChB,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,UAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,uBAAD,CAAtC;AACA,UAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,UAAM,CAACa,QAAD,EAAWC,WAAX,IACJd,QAAQ,CAAC,SAAD,CADV;AACuB;;AAEvB,UAAMe,WAAW,GAAG,CAACN,OAAD,EAAUI,QAAQ,GAAG,SAArB,EAAgCF,QAAQ,GAAG,IAA3C,KAAoD;AACtED,MAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAD,MAAAA,WAAW,CAACD,QAAD,CAAX;AACAH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KALD;;AAOA,UAAMQ,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDV,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KALD;;AAOA,wBACE;AAAA,8BACE,QAAC,gBAAD,OAAsBF,KAAtB;AAA6B,QAAA,mBAAmB,EAAES;AAAlD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,YAAY,EAAE;AACZI,UAAAA,QAAQ,EAAE,QADE;AAEZC,UAAAA,UAAU,EAAE;AAFA,SADhB;AAKE,QAAA,gBAAgB,EAAET,QALpB;AAME,QAAA,IAAI,EAAEJ,IANR;AAOE,QAAA,OAAO,EAAES,WAPX;AAQE,QAAA,mBAAmB,EAAEd,KARvB;AAAA,+BAUE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAC,QAAf;AAAwB,UAAA,OAAO,EAAEc,WAAjC;AAA8C,UAAA,QAAQ,EAAEH,QAAxD;AAAA,oBACGJ;AADH;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAmBD,GAxCD;AAyCD,CA1CM","sourcesContent":["import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport const withSnackbar = (WrappedComponent) => {\n  return (props) => {\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState(\"I'm a custom snackbar\");\n    const [duration, setDuration] = useState(2000);\n    const [severity, setSeverity] =\n      useState(\"success\"); /** error | warning | info */\n\n    const showMessage = (message, severity = \"success\", duration = 2000) => {\n      setMessage(message);\n      setSeverity(severity);\n      setDuration(duration);\n      setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n      setOpen(false);\n    };\n\n    return (\n      <>\n        <WrappedComponent {...props} snackbarShowMessage={showMessage} />\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n          }}\n          autoHideDuration={duration}\n          open={open}\n          onClose={handleClose}\n          TransitionComponent={Slide}\n        >\n          <Alert variant=\"filled\" onClose={handleClose} severity={severity}>\n            {message}\n          </Alert>\n        </Snackbar>\n      </>\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}