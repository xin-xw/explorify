{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/search_results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ListItem, List, ListItemIcon, ListItemText, Checkbox } from \"@material-ui/core\";\nimport { NearMeSharp } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchResults({\n  results,\n  onChange\n}) {\n  _s();\n\n  const [checked, set_checked] = useState([]);\n  const [checked_artist_names, set_checked_artistnames] = useState([]);\n  console.log(checked);\n\n  const handle_toggle = value => () => {\n    const cur_index = checked.indexOf(value);\n    const new_checked = [...checked];\n\n    if (cur_index === -1) {\n      if (checked.length < 3) {\n        new_checked.push(value);\n      }\n    } else {\n      new_checked.splice(cur_index, 1);\n    }\n\n    set_checked(new_checked);\n    onChange(new_checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: results.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: handle_toggle(item.id),\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          edge: \"start\",\n          checked: checked.indexOf(item.id) !== -1,\n          tabIndex: -1 //   disableRipple\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchResults, \"zinhHCd1sYRlwn46bXjMcxK/Qps=\");\n\n_c = SearchResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResults\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/search_results.js"],"names":["React","useState","ListItem","List","ListItemIcon","ListItemText","Checkbox","NearMeSharp","SearchResults","results","onChange","checked","set_checked","checked_artist_names","set_checked_artistnames","console","log","handle_toggle","value","cur_index","indexOf","new_checked","length","push","splice","map","item","index","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,QADF,EAEEC,IAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,QALF,QAMO,mBANP;AAOA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAvB,EAA8C;AAAA;;AAC3D,QAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,EAAD,CAAhE;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;;AAEA,QAAMM,aAAa,GAAIC,KAAD,IAAW,MAAM;AACrC,UAAMC,SAAS,GAAGR,OAAO,CAACS,OAAR,CAAgBF,KAAhB,CAAlB;AACA,UAAMG,WAAW,GAAG,CAAC,GAAGV,OAAJ,CAApB;;AACA,QAAIQ,SAAS,KAAK,CAAC,CAAnB,EAAsB;AACpB,UAAIR,OAAO,CAACW,MAAR,GAAiB,CAArB,EAAwB;AACtBD,QAAAA,WAAW,CAACE,IAAZ,CAAiBL,KAAjB;AACD;AACF,KAJD,MAIO;AACLG,MAAAA,WAAW,CAACG,MAAZ,CAAmBL,SAAnB,EAA8B,CAA9B;AACD;;AACDP,IAAAA,WAAW,CAACS,WAAD,CAAX;AACAX,IAAAA,QAAQ,CAACW,WAAD,CAAR;AACD,GAZD;;AAcA,sBACE,QAAC,IAAD;AAAA,cACGZ,OAAO,CAACgB,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBACX,QAAC,QAAD;AAAwB,MAAA,MAAM,MAA9B;AAA+B,MAAA,OAAO,EAAEV,aAAa,CAACS,IAAI,CAACE,EAAN,CAArD;AAAA,8BACE,QAAC,YAAD;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAE,OADR;AAEE,UAAA,OAAO,EAAEjB,OAAO,CAACS,OAAR,CAAgBM,IAAI,CAACE,EAArB,MAA6B,CAAC,CAFzC;AAGE,UAAA,QAAQ,EAAE,CAAC,CAHb,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,YAAD;AAAA,kBAAeF,IAAI,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,OAAeH,IAAI,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApCuBpB,a;;KAAAA,a","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ListItem,\n  List,\n  ListItemIcon,\n  ListItemText,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { NearMeSharp } from \"@material-ui/icons\";\n\nexport default function SearchResults({ results, onChange }) {\n  const [checked, set_checked] = useState([]);\n  const [checked_artist_names, set_checked_artistnames] = useState([]);\n  console.log(checked);\n\n  const handle_toggle = (value) => () => {\n    const cur_index = checked.indexOf(value);\n    const new_checked = [...checked];\n    if (cur_index === -1) {\n      if (checked.length < 3) {\n        new_checked.push(value);\n      }\n    } else {\n      new_checked.splice(cur_index, 1);\n    }\n    set_checked(new_checked);\n    onChange(new_checked);\n  };\n\n  return (\n    <List>\n      {results.map((item, index) => (\n        <ListItem key={item.id} button onClick={handle_toggle(item.id)}>\n          <ListItemIcon>\n            <Checkbox\n              edge={\"start\"}\n              checked={checked.indexOf(item.id) !== -1}\n              tabIndex={-1}\n              //   disableRipple\n            />\n          </ListItemIcon>\n          <ListItemText>{item.name}</ListItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}