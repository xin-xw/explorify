{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/rec_results.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, makeStyles, Typography, List, ListItem, ListItemText, Avatar, Paper, Box, Card, CardContent, CardMedia, Button } from \"@material-ui/core\";\nimport spotify_logo_black from \"../icon/spotify_logo_black.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    direction: \"row\",\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  gridContainer2: {\n    direction: \"row\",\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  // cover_art: {\n  //   width: theme.spacing(9),\n  //   height: theme.spacing(9),\n  // },\n  track_name: {\n    marginTop: 5,\n    width: \"100%\",\n    fontSize: \"1em\",\n    fontWeight: 600,\n    textAlign: \"center\",\n    backgroundColor: \"none\"\n  },\n  artist_name: {\n    width: \"100%\",\n    fontSize: \"1em\",\n    textAlign: \"center\" // top: \"20%\",\n    // position: \"absolute\",\n\n  },\n  paper_result: {\n    position: \"relative\",\n    width: \"195px\",\n    height: \"220px\",\n    // minHeight: \"300px\",\n    marginBottom: 30,\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.3)\",\n    backgroundColor: \"#ffe8d6\"\n  },\n  spotify_logo: {\n    width: \"95px\",\n    height: \"28px\"\n  }\n}));\n\nconst RecommendationResults = ({\n  results\n}) => {\n  _s();\n\n  console.log(\"results\", results);\n  const classes = useStyles(); // const return_track_name = ({ track_name }) => {\n  //   console.log(\"track_name\", track_name);\n  //   return track_name;\n  // };\n\n  if (!results.tracks || results.tracks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Sorry, I couldn't find any results! Your modifications were too specific! Try selecting less track attributes or less referencee tracks.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      className: classes.gridContainer2,\n      children: results.tracks.map(track => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.paper_result,\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            styles: {\n              alignItems: \"center\",\n              align: \"center\",\n              justify: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              style: {\n                position: \"relative\",\n                width: \"60%\",\n                height: \"50%\"\n              },\n              component: \"img\",\n              image: track.album.images[2].url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              noWrap: true,\n              className: classes.track_name,\n              children: track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              noWrap: true,\n              className: classes.artist_name,\n              style: {\n                paddingBottom: 7\n              },\n              children: track.artists[0].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button // className={classes.spotify_button}\n            , {\n              style: {\n                borderRadius: 10,\n                borderWidth: 2\n              },\n              href: track.album.uri,\n              variant: \"outlined\",\n              diableElevation: true,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                className: classes.spotify_logo,\n                src: spotify_logo_black,\n                alt: \"spotify logo black\",\n                variant: \"square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecommendationResults, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecommendationResults;\nexport default RecommendationResults;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecommendationResults\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_results.js"],"names":["React","Grid","makeStyles","Typography","List","ListItem","ListItemText","Avatar","Paper","Box","Card","CardContent","CardMedia","Button","spotify_logo_black","useStyles","theme","gridContainer","direction","padding","justifyContent","alignItems","gridContainer2","marginTop","track_name","width","fontSize","fontWeight","textAlign","backgroundColor","artist_name","paper_result","position","height","marginBottom","borderRadius","boxShadow","spotify_logo","RecommendationResults","results","console","log","classes","tracks","length","map","track","align","justify","album","images","url","name","paddingBottom","artists","borderWidth","uri"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Avatar,\n  Paper,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Button,\n} from \"@material-ui/core\";\nimport spotify_logo_black from \"../icon/spotify_logo_black.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    direction: \"row\",\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  gridContainer2: {\n    direction: \"row\",\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  // cover_art: {\n  //   width: theme.spacing(9),\n  //   height: theme.spacing(9),\n  // },\n  track_name: {\n    marginTop: 5,\n    width: \"100%\",\n    fontSize: \"1em\",\n    fontWeight: 600,\n    textAlign: \"center\",\n    backgroundColor: \"none\",\n  },\n  artist_name: {\n    width: \"100%\",\n    fontSize: \"1em\",\n    textAlign: \"center\",\n    // top: \"20%\",\n    // position: \"absolute\",\n  },\n  paper_result: {\n    position: \"relative\",\n    width: \"195px\",\n    height: \"220px\",\n    // minHeight: \"300px\",\n    marginBottom: 30,\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.3)\",\n    backgroundColor: \"#ffe8d6\",\n  },\n  spotify_logo: {\n    width: \"95px\",\n    height: \"28px\",\n  },\n}));\n\nconst RecommendationResults = ({ results }) => {\n  console.log(\"results\", results);\n  const classes = useStyles();\n\n  // const return_track_name = ({ track_name }) => {\n  //   console.log(\"track_name\", track_name);\n  //   return track_name;\n  // };\n\n  if (!results.tracks || results.tracks.length === 0) {\n    return (\n      <Typography>\n        Sorry, I couldn't find any results! Your modifications were too\n        specific! Try selecting less track attributes or less referencee tracks.\n      </Typography>\n    );\n  }\n\n  return (\n    <Grid container className={classes.gridContainer}>\n      <Grid container spacing={3} className={classes.gridContainer2}>\n        {results.tracks.map((track) => (\n          <Grid item align=\"center\">\n            <Card className={classes.paper_result}>\n              <CardContent\n                styles={{\n                  alignItems: \"center\",\n                  align: \"center\",\n                  justify: \"center\",\n                }}\n              >\n                <CardMedia\n                  style={{ position: \"relative\", width: \"60%\", height: \"50%\" }}\n                  component=\"img\"\n                  image={track.album.images[2].url}\n                ></CardMedia>\n                <Typography noWrap className={classes.track_name}>\n                  {track.name}\n                </Typography>\n                <Typography\n                  noWrap\n                  className={classes.artist_name}\n                  style={{ paddingBottom: 7 }}\n                >\n                  {track.artists[0].name}\n                </Typography>\n                <Button\n                  // className={classes.spotify_button}\n                  style={{ borderRadius: 10, borderWidth: 2 }}\n                  href={track.album.uri}\n                  variant=\"outlined\"\n                  diableElevation\n                >\n                  <Avatar\n                    className={classes.spotify_logo}\n                    src={spotify_logo_black}\n                    alt=\"spotify logo black\"\n                    variant=\"square\"\n                  ></Avatar>\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RecommendationResults;\n"]},"metadata":{},"sourceType":"module"}