{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { Grid, Typography, Slider, Checkbox, makeStyles, Paper, Card, CardContent, Box, Avatar } from \"@material-ui/core\";\nimport { palette } from \"@material-ui/system\";\nimport acousticness from \"../icon/acousticness.png\";\nimport danceability from \"../icon/danceability.png\";\nimport instrumental from \"../icon/instrumental.png\";\nimport loudness from \"../icon/loudness.png\";\nimport loudness2 from \"../icon/loudness2.png\";\nimport popularity from \"../icon/popularity.png\";\nimport tempo from \"../icon/tempo.png\";\nimport valence from \"../icon/valence.png\";\nimport liveness from \"../icon/liveness.png\";\nimport speechiness from \"../icon/speechiness.png\";\nimport energy from \"../icon/energy.png\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 18,\n    height: 18,\n    boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\"\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\"\n    }\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 18,\n      height: 18,\n      backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"'\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\"\n    }\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\"\n  },\n  font_color: {\n    color: \"#000\" // backgroundColor: \"#B5838D\",\n    // backgroundColor: \"#FFCDB2\",\n\n  },\n  track_attribute_card_1: {\n    width: \"200px\",\n    height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10\n  },\n  track_attribute_font_title: {\n    color: \"#000\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\"\n  },\n  track_attribute_font_title_2: {\n    color: \"#fff\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\"\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9)\n  }\n}));\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  }\n};\nexport default function RecBoards({\n  onChange\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      padding: 0\n    },\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: Object.keys(recs).map(rec => /*#__PURE__*/_jsxDEV(Card // className={classes.track_attribute_card_1}\n      // style={{ backgroundColor: \"#BDBAD5\" }}\n      , {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title_2,\n            children: rec\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: acousticness,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this) // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n  //   <Paper elevation={3} className={classes.paper_root}>\n  //     {/* <Grid item xs={12}>  */}\n  //     {Object.keys(recs).map((rec) => (\n  //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n  //         <Checkbox\n  //           className={classes.checkboxes_root}\n  //           disableRipple\n  //           color=\"default\"\n  //           checkedIcon={\n  //             <span\n  //               className={clsx(\n  //                 classes.checkboxes_icon,\n  //                 classes.checked_icon\n  //               )}\n  //             />\n  //           }\n  //           icon={<span className={classes.checkboxes_icon} />}\n  //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n  //           checked={board_values[rec].enabled}\n  //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n  //         />\n  //         <div style={{ flex: 1 }}>\n  //           <Grid container>\n  //             <Typography className={classes.font_color}>{rec}</Typography>\n  //             <Grid container spacing={1}>\n  //               <Grid item>\n  //                 <Typography className={classes.font_color}>min</Typography>\n  //               </Grid>\n  //               <Grid item xs>\n  //                 <Slider\n  //                   disabled={!board_values[rec].enabled}\n  //                   value={board_values[rec].value}\n  //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n  //                   valueLabelDisplay={\"auto\"}\n  //                   aria-labelledby={\"range-slider\"}\n  //                   min={recs[rec].min}\n  //                   max={recs[rec].max}\n  //                   step={recs[rec].step}\n  //                 />\n  //               </Grid>\n  //               <Grid item>\n  //                 <Typography className={classes.font_color}>max</Typography>\n  //               </Grid>\n  //             </Grid>\n  //           </Grid>\n  //         </div>\n  //       </div>\n  //     ))}\n  //     {/* </Grid> */}\n  //   </Paper>\n  // </Grid>\n  ;\n}\n\n_s(RecBoards, \"FYpyDbV+lVUhzHqwNbz1R5Fj39k=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecBoards\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js"],"names":["React","useState","useEffect","clsx","Grid","Typography","Slider","Checkbox","makeStyles","Paper","Card","CardContent","Box","Avatar","palette","acousticness","danceability","instrumental","loudness","loudness2","popularity","tempo","valence","liveness","speechiness","energy","useStyles","theme","checkboxes_root","backgroundColor","checkboxes_icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checked_icon","display","content","paper_root","padding","font_color","color","track_attribute_card_1","marginBottom","track_attribute_font_title","fontFamily","fontWeight","fontSize","track_attribute_font_title_2","track_attribute_image","margin","spacing","recs","value","enabled","min","max","step","instrumentalness","RecBoards","onChange","classes","board_values","set_board_values","handle_change","rec","new_board_values","toggle_rec","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Typography,\n  Slider,\n  Checkbox,\n  makeStyles,\n  Paper,\n  Card,\n  CardContent,\n  Box,\n  Avatar,\n} from \"@material-ui/core\";\nimport { palette } from \"@material-ui/system\";\nimport acousticness from \"../icon/acousticness.png\";\nimport danceability from \"../icon/danceability.png\";\nimport instrumental from \"../icon/instrumental.png\";\nimport loudness from \"../icon/loudness.png\";\nimport loudness2 from \"../icon/loudness2.png\";\nimport popularity from \"../icon/popularity.png\";\nimport tempo from \"../icon/tempo.png\";\nimport valence from \"../icon/valence.png\";\nimport liveness from \"../icon/liveness.png\";\nimport speechiness from \"../icon/speechiness.png\";\nimport energy from \"../icon/energy.png\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\nconst useStyles = makeStyles((theme) => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 18,\n    height: 18,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 18,\n      height: 18,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\",\n  },\n  font_color: {\n    color: \"#000\",\n    // backgroundColor: \"#B5838D\",\n    // backgroundColor: \"#FFCDB2\",\n  },\n  track_attribute_card_1: {\n    width: \"200px\",\n    height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10,\n  },\n\n  track_attribute_font_title: {\n    color: \"#000\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\",\n  },\n  track_attribute_font_title_2: {\n    color: \"#fff\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\",\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n  },\n}));\n\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0,\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1,\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1,\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n};\n\nexport default function RecBoards({ onChange }) {\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n\n  return (\n    <Grid container spacing={3} style={{ padding: 0 }} justify=\"center\">\n      <Grid item>\n        {Object.keys(recs).map((rec) => (\n          <Card\n          // className={classes.track_attribute_card_1}\n          // style={{ backgroundColor: \"#BDBAD5\" }}\n          >\n            <CardContent>\n              <Typography className={classes.track_attribute_font_title_2}>\n                {rec}\n              </Typography>\n              <Avatar\n                variant=\"square\"\n                src={acousticness}\n                className={classes.track_attribute_image}\n              ></Avatar>\n            </CardContent>\n          </Card>\n        ))}\n      </Grid>\n    </Grid>\n\n    // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n    //   <Paper elevation={3} className={classes.paper_root}>\n    //     {/* <Grid item xs={12}>  */}\n    //     {Object.keys(recs).map((rec) => (\n    //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n    //         <Checkbox\n    //           className={classes.checkboxes_root}\n    //           disableRipple\n    //           color=\"default\"\n    //           checkedIcon={\n    //             <span\n    //               className={clsx(\n    //                 classes.checkboxes_icon,\n    //                 classes.checked_icon\n    //               )}\n    //             />\n    //           }\n    //           icon={<span className={classes.checkboxes_icon} />}\n    //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n    //           checked={board_values[rec].enabled}\n    //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n    //         />\n    //         <div style={{ flex: 1 }}>\n    //           <Grid container>\n    //             <Typography className={classes.font_color}>{rec}</Typography>\n    //             <Grid container spacing={1}>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>min</Typography>\n    //               </Grid>\n    //               <Grid item xs>\n    //                 <Slider\n    //                   disabled={!board_values[rec].enabled}\n    //                   value={board_values[rec].value}\n    //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n    //                   valueLabelDisplay={\"auto\"}\n    //                   aria-labelledby={\"range-slider\"}\n    //                   min={recs[rec].min}\n    //                   max={recs[rec].max}\n    //                   step={recs[rec].step}\n    //                 />\n    //               </Grid>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>max</Typography>\n    //               </Grid>\n    //             </Grid>\n    //           </Grid>\n    //         </div>\n    //       </div>\n    //     ))}\n    //     {/* </Grid> */}\n    //   </Paper>\n    // </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}