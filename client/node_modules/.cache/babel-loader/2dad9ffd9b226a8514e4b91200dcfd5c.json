{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { Grid, Typography, Slider, Checkbox, makeStyles, Paper, Card, CardContent, Box, Avatar } from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow: \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\"\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\"\n    }\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage: \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage: \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" + \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" + \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"'\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\"\n    }\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\"\n  },\n  // rec_font: {\n  //   color: \"#000\",\n  //   // backgroundColor: \"#B5838D\",\n  //   // backgroundColor: \"#FFCDB2\",\n  // },\n  rec_card_root: {\n    maxWidth: 925,\n    // height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10\n  },\n  rec_font: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    fontFamily: \"Sawarabi Mincho\",\n    paddingTop: 20,\n    fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\"\n  },\n  rec_font_2: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Arvo\",\n    fontWeight: 700,\n    fontSize: \"1.2em\",\n    textAlign: \"left\"\n  },\n  rec_font_3: {\n    color: \"#2b2d42\",\n    fontFamily: \"Arvo\",\n    fontSize: \"1.2em\",\n    textAlign: \"center\",\n    marginTop: -10\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9)\n  },\n  rec_root: {\n    // padding: 5,\n    marginTop: 15,\n    marginBottom: 10,\n    maxWidth: 825,\n    maxHeight: 100,\n    backgroundColor: \"#C9C9BA\",\n    // backgroundColor: \"transparent\",\n    // border: \"2px solid #000\",\n    marginLeft: 5,\n    marginRight: 5,\n    borderRadius: 10\n  },\n  cb: {\n    maxWidth: 925,\n    // height: \"250px\",\n    // marginBottom: 30,\n    borderRadius: 10,\n    backgroundColor: \"#ffe8d6\",\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\"\n  },\n  cb_title: {\n    color: \"#2b2d42\",\n    // fontFamily: \"Sawarabi Mincho\",\n    fontFamily: \"Arvo\",\n    paddingTop: 10,\n    paddingBottom: 5,\n    // fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\"\n  },\n  cb_paper: {\n    backgroundColor: \"transparent\",\n    padding: 3\n  }\n}));\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  }\n};\nexport default function RecBoards({\n  onChange\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.cb,\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.cb_title,\n        children: \"Control Panel \\uD83C\\uDF9B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 0,\n      justify: \"center\",\n      alignItems: \"center\",\n      children: Object.keys(recs).map(rec => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.cb_paper,\n          variant: \"outlined\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            justify: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.rec_font_2,\n                children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                  className: classes.checkboxes_root,\n                  disableRipple: true,\n                  color: \"default\",\n                  style: {\n                    marginLeft: 8\n                  },\n                  checkedIcon: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: clsx(classes.checkboxes_icon, classes.checked_icon)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this),\n                  icon: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: classes.checkboxes_icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 29\n                  }, this),\n                  inputProps: {\n                    \"aria-label\": \"decorative checkbox\"\n                  },\n                  checked: board_values[rec].enabled,\n                  onChange: (e, newValue) => toggle_rec(rec, newValue)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 21\n                }, this), rec]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.rec_font_3,\n                children: \"min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                disabled: !board_values[rec].enabled,\n                value: board_values[rec].value,\n                onChange: (e, new_value) => handle_change(rec, new_value),\n                valueLabelDisplay: \"auto\",\n                \"aria-labelledby\": \"range-slider\",\n                min: recs[rec].min,\n                max: recs[rec].max,\n                step: recs[rec].step,\n                style: {\n                  marginTop: -3\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.rec_font_3,\n                children: \"max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this) // <Grid\n  //   container\n  //   spacing={2}\n  //   style={{ padding: 0 }}\n  //   justify=\"center\"\n  //   direction=\"row\"\n  // >\n  //   <Grid item xs={12}>\n  //     <Card\n  //       className={classes.rec_card_root}\n  //       style={{\n  //         backgroundColor: \"#ffe8d6\",\n  //         boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n  //         paddingBottom: 30,\n  //       }}\n  //     >\n  //       <Typography className={classes.rec_font}>Control Panel 🎮</Typography>\n  //       {Object.keys(recs).map((rec) => (\n  //         <Grid item xs={5}>\n  //           <Paper className={classes.rec_root} variant=\"elevation\">\n  //             <CardContent style={{}}>\n  //               <Typography className={classes.rec_font_2}>\n  //                 <Checkbox\n  //                   className={classes.checkboxes_root}\n  //                   disableRipple\n  //                   color=\"default\"\n  //                   style={{ marginLeft: -6 }}\n  //                   checkedIcon={\n  //                     <span\n  //                       className={clsx(\n  //                         classes.checkboxes_icon,\n  //                         classes.checked_icon\n  //                       )}\n  //                     />\n  //                   }\n  //                   icon={<span className={classes.checkboxes_icon} />}\n  //                   inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n  //                   checked={board_values[rec].enabled}\n  //                   onChange={(e, newValue) => toggle_rec(rec, newValue)}\n  //                 />\n  //                 {rec}\n  //               </Typography>\n  //               <Grid container style={{ paddingTop: 5 }}>\n  //                 <Grid item xs={1} align=\"right\">\n  //                   <Typography className={classes.rec_font_3}>\n  //                     min\n  //                   </Typography>\n  //                 </Grid>\n  //                 <Grid item xs={10} align=\"center\" justify=\"center\">\n  //                   <Slider\n  //                     disabled={!board_values[rec].enabled}\n  //                     value={board_values[rec].value}\n  //                     onChange={(e, new_value) =>\n  //                       handle_change(rec, new_value)\n  //                     }\n  //                     valueLabelDisplay={\"auto\"}\n  //                     aria-labelledby={\"range-slider\"}\n  //                     min={recs[rec].min}\n  //                     max={recs[rec].max}\n  //                     step={recs[rec].step}\n  //                     style={{ marginTop: -3 }}\n  //                   />\n  //                 </Grid>\n  //                 <Grid item xs={1}>\n  //                   <Typography className={classes.rec_font_3}>\n  //                     max\n  //                   </Typography>\n  //                 </Grid>\n  //               </Grid>\n  //             </CardContent>\n  //           </Paper>\n  //         </Grid>\n  //       ))}\n  //     </Card>\n  //   </Grid>\n  // </Grid>\n  // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n  //   <Paper elevation={3} className={classes.paper_root}>\n  //     {/* <Grid item xs={12}>  */}\n  //     {Object.keys(recs).map((rec) => (\n  //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n  //         <Checkbox\n  //           className={classes.checkboxes_root}\n  //           disableRipple\n  //           color=\"default\"\n  //           checkedIcon={\n  //             <span\n  //               className={clsx(\n  //                 classes.checkboxes_icon,\n  //                 classes.checked_icon\n  //               )}\n  //             />\n  //           }\n  //           icon={<span className={classes.checkboxes_icon} />}\n  //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n  //           checked={board_values[rec].enabled}\n  //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n  //         />\n  //         <div style={{ flex: 1 }}>\n  //           <Grid container>\n  //             <Typography className={classes.font_color}>{rec}</Typography>\n  //             <Grid container spacing={1}>\n  //               <Grid item>\n  //                 <Typography className={classes.font_color}>min</Typography>\n  //               </Grid>\n  //               <Grid item xs>\n  //                 <Slider\n  //                   disabled={!board_values[rec].enabled}\n  //                   value={board_values[rec].value}\n  //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n  //                   valueLabelDisplay={\"auto\"}\n  //                   aria-labelledby={\"range-slider\"}\n  //                   min={recs[rec].min}\n  //                   max={recs[rec].max}\n  //                   step={recs[rec].step}\n  //                 />\n  //               </Grid>\n  //               <Grid item>\n  //                 <Typography className={classes.font_color}>max</Typography>\n  //               </Grid>\n  //             </Grid>\n  //           </Grid>\n  //         </div>\n  //       </div>\n  //     ))}\n  //     {/* </Grid> */}\n  //   </Paper>\n  // </Grid>\n  ;\n}\n\n_s(RecBoards, \"FYpyDbV+lVUhzHqwNbz1R5Fj39k=\", false, function () {\n  return [useStyles];\n});\n\n_c = RecBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecBoards\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js"],"names":["React","useState","useEffect","clsx","Grid","Typography","Slider","Checkbox","makeStyles","Paper","Card","CardContent","Box","Avatar","useStyles","theme","checkboxes_root","backgroundColor","checkboxes_icon","borderRadius","width","height","boxShadow","backgroundImage","outline","outlineOffset","background","checked_icon","display","content","paper_root","padding","rec_card_root","maxWidth","marginBottom","rec_font","color","fontFamily","paddingTop","fontWeight","fontSize","textAlign","rec_font_2","rec_font_3","marginTop","track_attribute_image","margin","spacing","rec_root","maxHeight","marginLeft","marginRight","cb","cb_title","paddingBottom","cb_paper","recs","acousticness","value","enabled","min","max","step","danceability","energy","instrumentalness","liveness","loudness","popularity","speechiness","tempo","valence","RecBoards","onChange","classes","board_values","set_board_values","handle_change","rec","new_board_values","toggle_rec","Object","keys","map","e","newValue","new_value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport {\n  Grid,\n  Typography,\n  Slider,\n  Checkbox,\n  makeStyles,\n  Paper,\n  Card,\n  CardContent,\n  Box,\n  Avatar,\n} from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\nconst useStyles = makeStyles((theme) => ({\n  checkboxes_root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  checkboxes_icon: {\n    borderRadius: 3,\n    width: 16,\n    height: 16,\n    boxShadow:\n      \"inset 0 0 0 1px rgba(16,22,26,.2), inset 0 -1px 0 rgba(16,22,26,.1)\",\n    backgroundColor: \"#f5f8fa\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.8),hsla(0,0%,100%,0))\",\n    \"$root.Mui-focusVisible &\": {\n      outline: \"2px auto rgba(19,124,189,.6)\",\n      outlineOffset: 2,\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#ebf1f5\",\n    },\n    \"input:disabled ~ &\": {\n      boxShadow: \"none\",\n      background: \"rgba(206,217,224,.5)\",\n    },\n  },\n  checked_icon: {\n    backgroundColor: \"#137cbd\",\n    backgroundImage:\n      \"linear-gradient(180deg,hsla(0,0%,100%,.1),hsla(0,0%,100%,0))\",\n    \"&:before\": {\n      display: \"block\",\n      width: 16,\n      height: 16,\n      backgroundImage:\n        \"url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath\" +\n        \" fill-rule='evenodd' clip-rule='evenodd' d='M12 5c-.28 0-.53.11-.71.29L7 9.59l-2.29-2.3a1.003 \" +\n        \"1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29s.53-.11.71-.29l5-5A1.003 1.003 0 0012 5z' fill='%23fff'/%3E%3C/svg%3E\\\")\",\n      content: '\"\"',\n    },\n    \"input:hover ~ &\": {\n      backgroundColor: \"#106ba3\",\n    },\n  },\n  paper_root: {\n    padding: 10,\n    width: \"100%\",\n    borderRadius: 10,\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    backgroundColor: \"#ffe8d6\",\n  },\n  // rec_font: {\n  //   color: \"#000\",\n  //   // backgroundColor: \"#B5838D\",\n  //   // backgroundColor: \"#FFCDB2\",\n  // },\n  rec_card_root: {\n    maxWidth: 925,\n    // height: \"250px\",\n    marginBottom: 30,\n    borderRadius: 10,\n  },\n  rec_font: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    fontFamily: \"Sawarabi Mincho\",\n    paddingTop: 20,\n    fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\",\n  },\n  rec_font_2: {\n    // color: \"#000\",\n    color: \"#2b2d42\",\n    // fontFamily: \"Concert One\",\n    fontFamily: \"Arvo\",\n    fontWeight: 700,\n    fontSize: \"1.2em\",\n    textAlign: \"left\",\n  },\n  rec_font_3: {\n    color: \"#2b2d42\",\n    fontFamily: \"Arvo\",\n    fontSize: \"1.2em\",\n    textAlign: \"center\",\n    marginTop: -10,\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n  },\n  rec_root: {\n    // padding: 5,\n    marginTop: 15,\n    marginBottom: 10,\n    maxWidth: 825,\n    maxHeight: 100,\n    backgroundColor: \"#C9C9BA\",\n    // backgroundColor: \"transparent\",\n    // border: \"2px solid #000\",\n    marginLeft: 5,\n    marginRight: 5,\n    borderRadius: 10,\n  },\n  cb: {\n    maxWidth: 925,\n    // height: \"250px\",\n    // marginBottom: 30,\n    borderRadius: 10,\n    backgroundColor: \"#ffe8d6\",\n    boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n  },\n  cb_title: {\n    color: \"#2b2d42\",\n    // fontFamily: \"Sawarabi Mincho\",\n    fontFamily: \"Arvo\",\n    paddingTop: 10,\n    paddingBottom: 5,\n    // fontWeight: 1000,\n    fontSize: \"2.4em\",\n    textAlign: \"center\",\n  },\n  cb_paper: {\n    backgroundColor: \"transparent\",\n    padding: 3,\n  },\n}));\n\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0,\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1,\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1,\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n};\n\nexport default function RecBoards({ onChange }) {\n  const classes = useStyles();\n  const [board_values, set_board_values] = useState(recs);\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n\n  return (\n    <Card className={classes.cb}>\n      <CardContent>\n        <Typography className={classes.cb_title}>Control Panel 🎛</Typography>\n      </CardContent>\n      <Grid\n        container\n        direction=\"row\"\n        spacing={0}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        {Object.keys(recs).map((rec) => (\n          <Grid item xs={12} sm={6} align=\"center\">\n            <Paper className={classes.cb_paper} variant=\"outlined\">\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid item xs={12} align=\"center\">\n                  <Typography className={classes.rec_font_2}>\n                    <Checkbox\n                      className={classes.checkboxes_root}\n                      disableRipple\n                      color=\"default\"\n                      style={{ marginLeft: 8 }}\n                      checkedIcon={\n                        <span\n                          className={clsx(\n                            classes.checkboxes_icon,\n                            classes.checked_icon\n                          )}\n                        />\n                      }\n                      icon={<span className={classes.checkboxes_icon} />}\n                      inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n                      checked={board_values[rec].enabled}\n                      onChange={(e, newValue) => toggle_rec(rec, newValue)}\n                    />\n                    {rec}\n                  </Typography>\n                </Grid>\n                <Grid item xs={1}>\n                  <Typography className={classes.rec_font_3}>min</Typography>\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                  <Slider\n                    disabled={!board_values[rec].enabled}\n                    value={board_values[rec].value}\n                    onChange={(e, new_value) => handle_change(rec, new_value)}\n                    valueLabelDisplay={\"auto\"}\n                    aria-labelledby={\"range-slider\"}\n                    min={recs[rec].min}\n                    max={recs[rec].max}\n                    step={recs[rec].step}\n                    style={{ marginTop: -3 }}\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  <Typography className={classes.rec_font_3}>max</Typography>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Card>\n\n    // <Grid\n    //   container\n    //   spacing={2}\n    //   style={{ padding: 0 }}\n    //   justify=\"center\"\n    //   direction=\"row\"\n    // >\n    //   <Grid item xs={12}>\n    //     <Card\n    //       className={classes.rec_card_root}\n    //       style={{\n    //         backgroundColor: \"#ffe8d6\",\n    //         boxShadow: \"2px 2px 7px rgba(0, 0, 0, 0.4)\",\n    //         paddingBottom: 30,\n    //       }}\n    //     >\n    //       <Typography className={classes.rec_font}>Control Panel 🎮</Typography>\n    //       {Object.keys(recs).map((rec) => (\n    //         <Grid item xs={5}>\n    //           <Paper className={classes.rec_root} variant=\"elevation\">\n    //             <CardContent style={{}}>\n    //               <Typography className={classes.rec_font_2}>\n    //                 <Checkbox\n    //                   className={classes.checkboxes_root}\n    //                   disableRipple\n    //                   color=\"default\"\n    //                   style={{ marginLeft: -6 }}\n    //                   checkedIcon={\n    //                     <span\n    //                       className={clsx(\n    //                         classes.checkboxes_icon,\n    //                         classes.checked_icon\n    //                       )}\n    //                     />\n    //                   }\n    //                   icon={<span className={classes.checkboxes_icon} />}\n    //                   inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n    //                   checked={board_values[rec].enabled}\n    //                   onChange={(e, newValue) => toggle_rec(rec, newValue)}\n    //                 />\n    //                 {rec}\n    //               </Typography>\n    //               <Grid container style={{ paddingTop: 5 }}>\n    //                 <Grid item xs={1} align=\"right\">\n    //                   <Typography className={classes.rec_font_3}>\n    //                     min\n    //                   </Typography>\n    //                 </Grid>\n    //                 <Grid item xs={10} align=\"center\" justify=\"center\">\n    //                   <Slider\n    //                     disabled={!board_values[rec].enabled}\n    //                     value={board_values[rec].value}\n    //                     onChange={(e, new_value) =>\n    //                       handle_change(rec, new_value)\n    //                     }\n    //                     valueLabelDisplay={\"auto\"}\n    //                     aria-labelledby={\"range-slider\"}\n    //                     min={recs[rec].min}\n    //                     max={recs[rec].max}\n    //                     step={recs[rec].step}\n    //                     style={{ marginTop: -3 }}\n    //                   />\n    //                 </Grid>\n    //                 <Grid item xs={1}>\n    //                   <Typography className={classes.rec_font_3}>\n    //                     max\n    //                   </Typography>\n    //                 </Grid>\n    //               </Grid>\n    //             </CardContent>\n    //           </Paper>\n    //         </Grid>\n    //       ))}\n    //     </Card>\n    //   </Grid>\n    // </Grid>\n\n    // <Grid container spacing={0} style={{ padding: 0 }} justify=\"center\">\n    //   <Paper elevation={3} className={classes.paper_root}>\n    //     {/* <Grid item xs={12}>  */}\n    //     {Object.keys(recs).map((rec) => (\n    //       <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n    //         <Checkbox\n    //           className={classes.checkboxes_root}\n    //           disableRipple\n    //           color=\"default\"\n    //           checkedIcon={\n    //             <span\n    //               className={clsx(\n    //                 classes.checkboxes_icon,\n    //                 classes.checked_icon\n    //               )}\n    //             />\n    //           }\n    //           icon={<span className={classes.checkboxes_icon} />}\n    //           inputProps={{ \"aria-label\": \"decorative checkbox\" }}\n    //           checked={board_values[rec].enabled}\n    //           onChange={(e, newValue) => toggle_rec(rec, newValue)}\n    //         />\n    //         <div style={{ flex: 1 }}>\n    //           <Grid container>\n    //             <Typography className={classes.font_color}>{rec}</Typography>\n    //             <Grid container spacing={1}>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>min</Typography>\n    //               </Grid>\n    //               <Grid item xs>\n    //                 <Slider\n    //                   disabled={!board_values[rec].enabled}\n    //                   value={board_values[rec].value}\n    //                   onChange={(e, new_value) => handle_change(rec, new_value)}\n    //                   valueLabelDisplay={\"auto\"}\n    //                   aria-labelledby={\"range-slider\"}\n    //                   min={recs[rec].min}\n    //                   max={recs[rec].max}\n    //                   step={recs[rec].step}\n    //                 />\n    //               </Grid>\n    //               <Grid item>\n    //                 <Typography className={classes.font_color}>max</Typography>\n    //               </Grid>\n    //             </Grid>\n    //           </Grid>\n    //         </div>\n    //       </div>\n    //     ))}\n    //     {/* </Grid> */}\n    //   </Paper>\n    // </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}