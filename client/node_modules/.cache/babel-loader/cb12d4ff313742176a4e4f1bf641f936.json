{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/successSnackbar.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Icon } from \"@material-ui/core\";\nimport { clearSnackbar } from \"../../store/actions/snackbarActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SuccessSnackbar() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    successSnackbarMessage,\n    successSnackbarOpen\n  } = useSelector(state => state.ui);\n\n  function handleClose() {\n    dispatch(clearSnackbar());\n  }\n\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    open: successSnackbarOpen,\n    autoHideDuration: 4000,\n    onClose: handleClose,\n    \"aria-describedby\": \"client-snackbar\",\n    message: /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"client-snackbar\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        children: \"check_circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), successSnackbarMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this),\n    action: [/*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SuccessSnackbar, \"82T37TenLJIRTlrO8Dx3Zlm6W/4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SuccessSnackbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuccessSnackbar\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/successSnackbar.js"],"names":["useDispatch","useSelector","Snackbar","IconButton","Icon","clearSnackbar","SuccessSnackbar","dispatch","successSnackbarMessage","successSnackbarOpen","state","ui","handleClose","vertical","horizontal"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,aAAT,QAA8B,qCAA9B;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAM;AAAEQ,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,MAAkDR,WAAW,CAChES,KAAD,IAAWA,KAAK,CAACC,EADgD,CAAnE;;AAIA,WAASC,WAAT,GAAuB;AACrBL,IAAAA,QAAQ,CAACF,aAAa,EAAd,CAAR;AACD;;AAED,sBACE,QAAC,QAAD;AACE,IAAA,YAAY,EAAE;AACZQ,MAAAA,QAAQ,EAAE,QADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,IAAI,EAAEL,mBALR;AAME,IAAA,gBAAgB,EAAE,IANpB;AAOE,IAAA,OAAO,EAAEG,WAPX;AAQE,wBAAiB,iBARnB;AASE,IAAA,OAAO,eACL;AAAM,MAAA,EAAE,EAAC,iBAAT;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGJ,sBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAeE,IAAA,MAAM,EAAE,cACN,QAAC,UAAD;AAEE,oBAAW,OAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAEI,WAJX;AAAA,6BAME,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,OACM,OADN;AAAA;AAAA;AAAA;AAAA,YADM;AAfV;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAvCuBN,e;UACLN,W,EAEuCC,W;;;KAHlCK,e","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Icon } from \"@material-ui/core\";\nimport { clearSnackbar } from \"../../store/actions/snackbarActions\";\n\nexport default function SuccessSnackbar() {\n  const dispatch = useDispatch();\n\n  const { successSnackbarMessage, successSnackbarOpen } = useSelector(\n    (state) => state.ui\n  );\n\n  function handleClose() {\n    dispatch(clearSnackbar());\n  }\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"left\",\n      }}\n      open={successSnackbarOpen}\n      autoHideDuration={4000}\n      onClose={handleClose}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\">\n          <Icon>check_circle</Icon>\n          {successSnackbarMessage}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={handleClose}\n        >\n          <Icon>close</Icon>\n        </IconButton>,\n      ]}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}