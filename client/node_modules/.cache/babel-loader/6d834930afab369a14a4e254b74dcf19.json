{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, Slider, Checkbox } from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01\n  }\n};\nexport default function RecBoards({\n  onChange\n}) {\n  _s();\n\n  const [board_values, set_board_values] = useState(recs);\n  console.log(board_values);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values\n    };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    style: {\n      padding: 10\n    },\n    children: Object.keys(recs).map(rec => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: board_values[rec].enabled,\n          onChange: (e, newValue) => toggle_rec(rec, newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            children: rec\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Slider, {\n                disabled: !board_values[rec].enabled,\n                value: board_values[rec].value,\n                onChange: (e, new_value) => handle_change(rec, new_value) // valueLabelDisplay={\"on\"}\n                ,\n                \"aria-labelledby\": \"range-slider\",\n                min: recs[rec].min,\n                max: recs[rec].max,\n                step: recs[rec].step\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecBoards, \"XSuaiHB3zJ/V/GhrIxBewPXZzs4=\");\n\n_c = RecBoards;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecBoards\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/rec_boards.js"],"names":["React","useState","useEffect","Grid","Typography","Slider","Checkbox","recs","acousticness","value","enabled","min","max","step","danceability","energy","instrumentalness","liveness","loudness","popularity","speechiness","tempo","valence","RecBoards","onChange","board_values","set_board_values","console","log","handle_change","rec","new_board_values","toggle_rec","padding","Object","keys","map","display","flexDirection","e","newValue","flex","new_value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, Slider, Checkbox } from \"@material-ui/core\";\n/* \n1. key: The key of the object is the name of our metric\n2. value: specifies the current set value of our nob\n3. enabled: whether or not this nob is enabled (whether or not the user wants to include this metric in their search)\n4. min: what is the minimum value this nob can be\n5. max: what is the maximum value this nob can be\n6. step: what increments does the slider change value\n*/\nconst recs = {\n  acousticness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  danceability: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  energy: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  instrumentalness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  liveness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  loudness: {\n    value: [-60, 0],\n    enabled: false,\n    min: -60,\n    max: 0,\n  },\n  popularity: {\n    value: [0, 100],\n    enabled: false,\n    min: 0,\n    max: 100,\n    step: 1,\n  },\n  speechiness: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  tempo: {\n    value: [0, 200],\n    enabled: false,\n    min: 0,\n    max: 200,\n    step: 1,\n  },\n  valence: {\n    value: [0, 1],\n    enabled: false,\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n};\n\nexport default function RecBoards({ onChange }) {\n  const [board_values, set_board_values] = useState(recs);\n  console.log(board_values);\n\n  const handle_change = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].value = value;\n    set_board_values(new_board_values);\n  };\n\n  const toggle_rec = (rec, value) => {\n    const new_board_values = { ...board_values };\n    new_board_values[rec].enabled = value;\n    set_board_values(new_board_values);\n  };\n\n  useEffect(() => {\n    onChange(board_values);\n  }, [onChange, board_values]);\n\n  return (\n    <Grid container spacing={2} style={{ padding: 10 }}>\n      {Object.keys(recs).map((rec) => (\n        <Grid item xs={12}>\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <Checkbox\n              checked={board_values[rec].enabled}\n              onChange={(e, newValue) => toggle_rec(rec, newValue)}\n            />\n            <div style={{ flex: 1 }}>\n              <Typography>{rec}</Typography>\n              <Grid container spacing={1}>\n                <Grid item>\n                  <Typography>Min</Typography>\n                </Grid>\n                <Grid item xs>\n                  <Slider\n                    disabled={!board_values[rec].enabled}\n                    value={board_values[rec].value}\n                    onChange={(e, new_value) => handle_change(rec, new_value)}\n                    // valueLabelDisplay={\"on\"}\n                    aria-labelledby={\"range-slider\"}\n                    min={recs[rec].min}\n                    max={recs[rec].max}\n                    step={recs[rec].step}\n                  />\n                </Grid>\n                <Grid item>\n                  <Typography>Max</Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}