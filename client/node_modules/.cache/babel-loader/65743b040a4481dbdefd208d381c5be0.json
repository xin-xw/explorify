{"ast":null,"code":"/*\n * React FitText\n * https://github.com/gianu/react-fittext\n *\n * A port of the jQuery plugin: http://github.com/davatron5000/FitText.js\n *\n * Released under the MIT license\n * http://gianu.mit-license.org\n */\n'use strict';\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar ReactPropTypes = require('prop-types');\n\nvar createClass = require('create-react-class');\n\nmodule.exports = createClass({\n  displayName: 'ReactFitText',\n  propTypes: {\n    children: ReactPropTypes.element.isRequired,\n    compressor: ReactPropTypes.number,\n    minFontSize: ReactPropTypes.number,\n    maxFontSize: ReactPropTypes.number\n  },\n  getDefaultProps: function () {\n    return {\n      compressor: 1.0,\n      minFontSize: Number.NEGATIVE_INFINITY,\n      maxFontSize: Number.POSITIVE_INFINITY\n    };\n  },\n  componentDidMount: function () {\n    window.addEventListener(\"resize\", this._onBodyResize);\n\n    this._onBodyResize();\n  },\n  componentWillUnmount: function () {\n    window.removeEventListener(\"resize\", this._onBodyResize);\n  },\n  componentDidUpdate: function () {\n    this._onBodyResize();\n  },\n  _onBodyResize: function () {\n    var element = ReactDOM.findDOMNode(this);\n    var width = element.offsetWidth;\n    element.style.fontSize = Math.max(Math.min(width / (this.props.compressor * 10), parseFloat(this.props.maxFontSize)), parseFloat(this.props.minFontSize)) + 'px';\n  },\n  _renderChildren: function () {\n    var _this = this;\n\n    return React.Children.map(this.props.children, function (child) {\n      return React.cloneElement(child, {\n        ref: function ref(c) {\n          return _this._childRef = c;\n        }\n      });\n    });\n  },\n  render: function () {\n    return this._renderChildren()[0];\n  }\n});","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/node_modules/react-fittext/lib/ReactFitText.js"],"names":["React","require","ReactDOM","ReactPropTypes","createClass","module","exports","displayName","propTypes","children","element","isRequired","compressor","number","minFontSize","maxFontSize","getDefaultProps","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","componentDidMount","window","addEventListener","_onBodyResize","componentWillUnmount","removeEventListener","componentDidUpdate","findDOMNode","width","offsetWidth","style","fontSize","Math","max","min","props","parseFloat","_renderChildren","_this","Children","map","child","cloneElement","ref","c","_childRef","render"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,YAAD,CAA5B;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AAEAI,MAAM,CAACC,OAAP,GAAiBF,WAAW,CAAC;AAC3BG,EAAAA,WAAW,EAAE,cADc;AAG3BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAEN,cAAc,CAACO,OAAf,CAAuBC,UADxB;AAETC,IAAAA,UAAU,EAAET,cAAc,CAACU,MAFlB;AAGTC,IAAAA,WAAW,EAAEX,cAAc,CAACU,MAHnB;AAITE,IAAAA,WAAW,EAAEZ,cAAc,CAACU;AAJnB,GAHgB;AAU3BG,EAAAA,eAAe,EAAE,YAAW;AAC1B,WAAO;AACLJ,MAAAA,UAAU,EAAE,GADP;AAELE,MAAAA,WAAW,EAAEG,MAAM,CAACC,iBAFf;AAGLH,MAAAA,WAAW,EAAEE,MAAM,CAACE;AAHf,KAAP;AAKD,GAhB0B;AAkB3BC,EAAAA,iBAAiB,EAAE,YAAW;AAC5BC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,aAAvC;;AACA,SAAKA,aAAL;AACD,GArB0B;AAuB3BC,EAAAA,oBAAoB,EAAE,YAAW;AAC/BH,IAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqC,KAAKF,aAA1C;AACD,GAzB0B;AA2B3BG,EAAAA,kBAAkB,EAAE,YAAW;AAC7B,SAAKH,aAAL;AACD,GA7B0B;AA+B3BA,EAAAA,aAAa,EAAE,YAAW;AACxB,QAAIb,OAAO,GAAGR,QAAQ,CAACyB,WAAT,CAAqB,IAArB,CAAd;AACA,QAAIC,KAAK,GAAGlB,OAAO,CAACmB,WAApB;AACAnB,IAAAA,OAAO,CAACoB,KAAR,CAAcC,QAAd,GAAyBC,IAAI,CAACC,GAAL,CACPD,IAAI,CAACE,GAAL,CAAUN,KAAK,IAAI,KAAKO,KAAL,CAAWvB,UAAX,GAAsB,EAA1B,CAAf,EACUwB,UAAU,CAAC,KAAKD,KAAL,CAAWpB,WAAZ,CADpB,CADO,EAGPqB,UAAU,CAAC,KAAKD,KAAL,CAAWrB,WAAZ,CAHH,IAG+B,IAHxD;AAID,GAtC0B;AAuC3BuB,EAAAA,eAAe,EAAE,YAAU;AACzB,QAAIC,KAAK,GAAG,IAAZ;;AAEA,WAAOtC,KAAK,CAACuC,QAAN,CAAeC,GAAf,CAAmB,KAAKL,KAAL,CAAW1B,QAA9B,EAAwC,UAAUgC,KAAV,EAAiB;AAC9D,aAAOzC,KAAK,CAAC0C,YAAN,CAAmBD,KAAnB,EAA0B;AAAEE,QAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,CAAb,EAAgB;AACtD,iBAAON,KAAK,CAACO,SAAN,GAAkBD,CAAzB;AACD;AAFgC,OAA1B,CAAP;AAGD,KAJM,CAAP;AAKD,GA/C0B;AAgD3BE,EAAAA,MAAM,EAAE,YAAW;AACjB,WAAO,KAAKT,eAAL,GAAuB,CAAvB,CAAP;AACD;AAlD0B,CAAD,CAA5B","sourcesContent":["/*\n * React FitText\n * https://github.com/gianu/react-fittext\n *\n * A port of the jQuery plugin: http://github.com/davatron5000/FitText.js\n *\n * Released under the MIT license\n * http://gianu.mit-license.org\n */\n'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar ReactPropTypes = require('prop-types');\nvar createClass = require('create-react-class');\n\nmodule.exports = createClass({\n  displayName: 'ReactFitText',\n\n  propTypes: {\n    children: ReactPropTypes.element.isRequired,\n    compressor: ReactPropTypes.number,\n    minFontSize: ReactPropTypes.number,\n    maxFontSize: ReactPropTypes.number\n  },\n\n  getDefaultProps: function() {\n    return {\n      compressor: 1.0,\n      minFontSize: Number.NEGATIVE_INFINITY,\n      maxFontSize: Number.POSITIVE_INFINITY\n    };\n  },\n\n  componentDidMount: function() {\n    window.addEventListener(\"resize\", this._onBodyResize);\n    this._onBodyResize();\n  },\n\n  componentWillUnmount: function() {\n    window.removeEventListener(\"resize\", this._onBodyResize);\n  },\n\n  componentDidUpdate: function() {\n    this._onBodyResize();\n  },\n\n  _onBodyResize: function() {\n    var element = ReactDOM.findDOMNode(this);\n    var width = element.offsetWidth;\n    element.style.fontSize = Math.max(\n                      Math.min((width / (this.props.compressor*10)),\n                                parseFloat(this.props.maxFontSize)),\n                      parseFloat(this.props.minFontSize)) + 'px';\n  },\n  _renderChildren: function(){\n    var _this = this;\n\n    return React.Children.map(this.props.children, function (child) {\n      return React.cloneElement(child, { ref: function ref(c) {\n        return _this._childRef = c;\n      } });\n    });\n  },\n  render: function() {\n    return this._renderChildren()[0];\n  }\n});\n"]},"metadata":{},"sourceType":"script"}