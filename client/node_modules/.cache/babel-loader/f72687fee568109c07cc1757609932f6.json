{"ast":null,"code":"var _jsxFileName = \"/Users/xinwng/Projects/Explorify/client/src/component/book_track_attribute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles, Card, CardContent, Grid, Typography, Avatar } from \"@material-ui/core\";\nimport acousticness from \"../icon/acousticness.png\";\nimport danceability from \"../icon/danceability.png\";\nimport instrumental from \"../icon/instrumental.png\";\nimport loudness2 from \"../icon/loudness2.png\";\nimport popularity from \"../icon/popularity.png\";\nimport tempo from \"../icon/tempo.png\";\nimport valence from \"../icon/valence.png\";\nimport liveness from \"../icon/liveness.png\";\nimport speechiness from \"../icon/speechiness.png\";\nimport energy from \"../icon/energy.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    padding: 10,\n    spacing: 10,\n    alignItems: \"center\",\n    direction: \"row\"\n  },\n  gridItem: {\n    backgroundColor: \"#FFB4A2\",\n    background: \"#000\",\n    color: \"#000\"\n  },\n  nav_title: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    placeItems: \"left\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Kiwi Maru\"\n  },\n  step_root: {\n    // align: \"center\",\n    padding: 10,\n    maxWidth: 1000,\n    marginBottom: 50,\n    backgroundColor: \"#ddbea9\",\n    borderRadius: 10\n  },\n  step_header: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.55em\",\n    marginBottom: 10,\n    fontWeight: \"600\"\n  },\n  step_desc: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.1em\",\n    marginBottom: 20\n  },\n  card: {// backgroundColor: \"FFB4A2\",\n  },\n  card_content: {// backgroundColor: \"#FFB4A2\",\n  },\n  track_attribute_card_1: {\n    width: \"275px\",\n    height: \"400px\",\n    marginBottom: 30,\n    borderRadius: 10\n  },\n  track_attribute_font_title: {\n    color: \"#000\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\"\n  },\n  track_attribute_font_title_2: {\n    color: \"#fff\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\"\n  },\n  track_attribute_font_type: {\n    color: \"#000\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.3em\"\n  },\n  track_attribute_font_type_2: {\n    color: \"#fff\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.3em\"\n  },\n  track_attribute_font_content: {\n    marginTop: -5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    color: \"#18181F\",\n    fontFamily: \"Benne\",\n    fontWeight: 600,\n    fontSize: \"1.2em\",\n    textAlign: \"justify\"\n  },\n  track_attribute_font_content_2: {\n    marginTop: -5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    color: \"#e6e4df\",\n    fontFamily: \"Benne\",\n    fontWeight: 600,\n    fontSize: \"1.13em\",\n    textAlign: \"justify\" // lineSpacing: \"10\",\n\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9)\n  }\n}));\nexport default function BookOfTrackAttributes() {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    style: {// paddingLeft: 45,\n    },\n    justify: \"center\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#BDBAD5\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title,\n            children: \"acousticness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: acousticness,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type,\n              children: \"type: context\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content,\n            children: [\"tracks with \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 27\n            }, this), \" acousticness indicate tracks with\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), \" featurings of guitars, pianos, drumsets, etc. whereas,\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"lower\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), \" acousticness indicate tracks with\", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \" more\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), \" featurings of electronic or synthesized elements.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#124E78\",\n          color: \"#fff\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title_2,\n            children: \"danceability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: danceability,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type_2,\n              children: \"type: mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content_2,\n            children: \"an overall measurement of a track's suitability for dancing based on musical elements including tempo, rhythm, beat strength, and more.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#F49D6E\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title,\n            children: \"energy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: energy,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type,\n              children: \"type: mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content,\n            children: [\"an overall measurement of a track's intensity & activity.\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), \" energy will restrict results to fast, loud, and noisy songs. psst: heavy metal = higher energy & mozart = lower energy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#F2CD5D\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title,\n            children: \"instrumentalness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: instrumental,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type,\n              children: \"type: properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content,\n            children: \"predicts whether a track contains vocals. rap songs are more vocal, whereas lofi study music are less vocal. the higher the value, the more likely the track contains NO vocal content.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#C0D6DF\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title,\n            children: \"liveness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: liveness,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type,\n              children: \"type: context\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content,\n            children: [\"liveness detects the presence of an audience in the recording.\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), \" liveness will lead you to more tracks that were probably performed live. increase this value if you want to find tracks that are maybe from an artist's concert.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#FFA69E\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title,\n            children: \"loudness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: loudness2,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type,\n              children: \"type: properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content,\n            children: [\"loudness represents an overall measurement of the decibels (dB) throughout a track. setting a \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 45\n            }, this), \" loudness will lead you to songs that are more fun to blast on the speakers!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#BB342F\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title_2,\n            children: \"popularity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: popularity,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type_2,\n              children: \"type: other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content_2,\n            children: [\"popularity provides a measure of - well - how popular you want the tracks in your results to be. set it \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"lower\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 52\n            }, this), \" if you want to discover more low-key songs, and set it \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 55\n            }, this), \" if you want to continue jamming out to tracks just as popular as Despacito or Gangnam Style.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#758E4F\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title_2,\n            children: \"speechiness\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: speechiness,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type_2,\n              children: \"type: properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content_2,\n            children: [\"kind of similar to instrumental, but inverse. setting speechiness to a \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 20\n            }, this), \" value will lead you to songs that have a\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"higher\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), \" amount of spoken words. psst: setting this high will get you songs like Rap God by Eminem.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#AA4465\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title_2,\n            children: \"tempo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: tempo,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type_2,\n              children: \"type: mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content_2,\n            children: \"tempo means beats per minute! setting a tempo range = beats per minute range. setting minimum tempo to 140 restricts results to only those tracks with a tempo of greater than 140 bpm.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.track_attribute_card_1,\n        style: {\n          backgroundColor: \"#462255\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_title_2,\n            children: \"valence\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            variant: \"square\",\n            src: valence,\n            className: classes.track_attribute_image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.track_attribute_font_type_2,\n              children: \"type: mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.track_attribute_font_content_2,\n            children: \"valence will control how happy a song sounds! tracks with higher valence sounds more happy & positive. tracks with lower valence sounds more negative (sad, angry, etc.)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookOfTrackAttributes, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BookOfTrackAttributes;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookOfTrackAttributes\");","map":{"version":3,"sources":["/Users/xinwng/Projects/Explorify/client/src/component/book_track_attribute.js"],"names":["React","useState","makeStyles","Card","CardContent","Grid","Typography","Avatar","acousticness","danceability","instrumental","loudness2","popularity","tempo","valence","liveness","speechiness","energy","useStyles","theme","gridContainer","padding","spacing","alignItems","direction","gridItem","backgroundColor","background","color","nav_title","display","flexDirection","placeItems","fontSize","fontFamily","step_root","maxWidth","marginBottom","borderRadius","step_header","textAlign","fontWeight","step_desc","card","card_content","track_attribute_card_1","width","height","track_attribute_font_title","track_attribute_font_title_2","track_attribute_font_type","track_attribute_font_type_2","track_attribute_font_content","marginTop","paddingLeft","paddingRight","track_attribute_font_content_2","track_attribute_image","margin","BookOfTrackAttributes","classes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,UADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,MANF,QAOO,mBAPP;AAQA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAS,GAAGhB,UAAU,CAAEiB,KAAD,KAAY;AACvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,OAAO,EAAE,EAFI;AAGbC,IAAAA,UAAU,EAAE,QAHC;AAIbC,IAAAA,SAAS,EAAE;AAJE,GADwB;AAOvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,KAAK,EAAE;AAHC,GAP6B;AAYvCC,EAAAA,SAAS,EAAE;AACTR,IAAAA,OAAO,EAAE,EADA;AAETS,IAAAA,OAAO,EAAE,MAFA;AAGTC,IAAAA,aAAa,EAAE,KAHN;AAITC,IAAAA,UAAU,EAAE,MAJH;AAKTC,IAAAA,QAAQ,EAAE,QALD;AAMTC,IAAAA,UAAU,EAAE;AANH,GAZ4B;AAoBvCC,EAAAA,SAAS,EAAE;AACT;AACAd,IAAAA,OAAO,EAAE,EAFA;AAGTe,IAAAA,QAAQ,EAAE,IAHD;AAITC,IAAAA,YAAY,EAAE,EAJL;AAKTX,IAAAA,eAAe,EAAE,SALR;AAMTY,IAAAA,YAAY,EAAE;AANL,GApB4B;AA4BvCC,EAAAA,WAAW,EAAE;AACXX,IAAAA,KAAK,EAAE,OADI;AAEXY,IAAAA,SAAS,EAAE,MAFA;AAGXP,IAAAA,QAAQ,EAAE,QAHC;AAIXI,IAAAA,YAAY,EAAE,EAJH;AAKXI,IAAAA,UAAU,EAAE;AALD,GA5B0B;AAmCvCC,EAAAA,SAAS,EAAE;AACTd,IAAAA,KAAK,EAAE,OADE;AAETY,IAAAA,SAAS,EAAE,MAFF;AAGTP,IAAAA,QAAQ,EAAE,OAHD;AAITI,IAAAA,YAAY,EAAE;AAJL,GAnC4B;AAyCvCM,EAAAA,IAAI,EAAE,CACJ;AADI,GAzCiC;AA4CvCC,EAAAA,YAAY,EAAE,CACZ;AADY,GA5CyB;AAgDvCC,EAAAA,sBAAsB,EAAE;AACtBC,IAAAA,KAAK,EAAE,OADe;AAEtBC,IAAAA,MAAM,EAAE,OAFc;AAGtBV,IAAAA,YAAY,EAAE,EAHQ;AAItBC,IAAAA,YAAY,EAAE;AAJQ,GAhDe;AAuDvCU,EAAAA,0BAA0B,EAAE;AAC1BpB,IAAAA,KAAK,EAAE,MADmB;AAE1BM,IAAAA,UAAU,EAAE,OAFc;AAG1BO,IAAAA,UAAU,EAAE,GAHc;AAI1BR,IAAAA,QAAQ,EAAE;AAJgB,GAvDW;AA6DvCgB,EAAAA,4BAA4B,EAAE;AAC5BrB,IAAAA,KAAK,EAAE,MADqB;AAE5BM,IAAAA,UAAU,EAAE,OAFgB;AAG5BO,IAAAA,UAAU,EAAE,GAHgB;AAI5BR,IAAAA,QAAQ,EAAE;AAJkB,GA7DS;AAmEvCiB,EAAAA,yBAAyB,EAAE;AACzBtB,IAAAA,KAAK,EAAE,MADkB;AAEzBM,IAAAA,UAAU,EAAE,OAFa;AAGzBO,IAAAA,UAAU,EAAE,GAHa;AAIzBR,IAAAA,QAAQ,EAAE;AAJe,GAnEY;AAyEvCkB,EAAAA,2BAA2B,EAAE;AAC3BvB,IAAAA,KAAK,EAAE,MADoB;AAE3BM,IAAAA,UAAU,EAAE,OAFe;AAG3BO,IAAAA,UAAU,EAAE,GAHe;AAI3BR,IAAAA,QAAQ,EAAE;AAJiB,GAzEU;AA+EvCmB,EAAAA,4BAA4B,EAAE;AAC5BC,IAAAA,SAAS,EAAE,CAAC,CADgB;AAE5BC,IAAAA,WAAW,EAAE,CAFe;AAG5BC,IAAAA,YAAY,EAAE,CAHc;AAI5B3B,IAAAA,KAAK,EAAE,SAJqB;AAK5BM,IAAAA,UAAU,EAAE,OALgB;AAM5BO,IAAAA,UAAU,EAAE,GANgB;AAO5BR,IAAAA,QAAQ,EAAE,OAPkB;AAQ5BO,IAAAA,SAAS,EAAE;AARiB,GA/ES;AAyFvCgB,EAAAA,8BAA8B,EAAE;AAC9BH,IAAAA,SAAS,EAAE,CAAC,CADkB;AAE9BC,IAAAA,WAAW,EAAE,CAFiB;AAG9BC,IAAAA,YAAY,EAAE,CAHgB;AAI9B3B,IAAAA,KAAK,EAAE,SAJuB;AAK9BM,IAAAA,UAAU,EAAE,OALkB;AAM9BO,IAAAA,UAAU,EAAE,GANkB;AAO9BR,IAAAA,QAAQ,EAAE,QAPoB;AAQ9BO,IAAAA,SAAS,EAAE,SARmB,CAS9B;;AAT8B,GAzFO;AAoGvCiB,EAAAA,qBAAqB,EAAE;AACrBC,IAAAA,MAAM,EAAE,EADa;AAErBZ,IAAAA,KAAK,EAAE3B,KAAK,CAACG,OAAN,CAAc,CAAd,CAFc;AAGrByB,IAAAA,MAAM,EAAE5B,KAAK,CAACG,OAAN,CAAc,CAAd;AAHa;AApGgB,CAAZ,CAAD,CAA5B;AA2GA,eAAe,SAASqC,qBAAT,GAAiC;AAAA;;AAC9C,QAAMC,OAAO,GAAG1C,SAAS,EAAzB;AACA,sBACE,QAAC,IAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,OAAO,EAAE,CAHX;AAIE,IAAA,KAAK,EACH,CACE;AADF,KALJ;AASE,IAAA,OAAO,EAAC,QATV;AAUE,IAAA,UAAU,EAAC,QAVb;AAAA,4BAYE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAE0C,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACZ,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAExC,YAFP;AAGE,YAAA,SAAS,EAAEoD,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACV,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEU,OAAO,CAACR,4BAA/B;AAAA,oDACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADd,wCAC8D,GAD9D,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,6DAEqE,GAFrE,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,qDAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF,eAwCE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEQ,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE,SAAnB;AAA8BE,UAAAA,KAAK,EAAE;AAArC,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEgC,OAAO,CAACX,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAExC,YAFP;AAGE,YAAA,SAAS,EAAEmD,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACT,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAES,OAAO,CAACJ,8BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAxCF,eAmEE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEI,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACZ,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAE/B,MAFP;AAGE,YAAA,SAAS,EAAE2C,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACV,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEU,OAAO,CAACR,4BAA/B;AAAA,oFAC4D,GAD5D,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnEF,eA+FE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEQ,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACZ,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAEtC,YAFP;AAGE,YAAA,SAAS,EAAEkD,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACV,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEU,OAAO,CAACR,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/FF,eA0HE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEQ,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACZ,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAEjC,QAFP;AAGE,YAAA,SAAS,EAAE6C,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACV,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEU,OAAO,CAACR,4BAA/B;AAAA,yFACiE,GADjE,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1HF,eAsJE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEQ,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACZ,0BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAErC,SAFP;AAGE,YAAA,SAAS,EAAEiD,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACV,yBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEU,OAAO,CAACR,4BAA/B;AAAA,sIAEgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtJF,eAiLE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEQ,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACX,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAErC,UAFP;AAGE,YAAA,SAAS,EAAEgD,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACT,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAES,OAAO,CAACJ,8BAA/B;AAAA,gJAEuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFvC,2EAG0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAH1C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjLF,eA8ME,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEI,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACX,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAEjC,WAFP;AAGE,YAAA,SAAS,EAAE4C,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACT,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAES,OAAO,CAACJ,8BAA/B;AAAA,+GAEO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFP,+CAE8D,GAF9D,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9MF,eA0OE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEI,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACX,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAEpC,KAFP;AAGE,YAAA,SAAS,EAAE+C,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACT,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAES,OAAO,CAACJ,8BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA1OF,eAqQE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEI,OAAO,CAACf,sBADrB;AAEE,QAAA,KAAK,EAAE;AAAEnB,UAAAA,eAAe,EAAE;AAAnB,SAFT;AAAA,+BAIE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEkC,OAAO,CAACX,4BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,QADV;AAEE,YAAA,GAAG,EAAEnC,OAFP;AAGE,YAAA,SAAS,EAAE8C,OAAO,CAACH;AAHrB;AAAA;AAAA;AAAA;AAAA,kBAJF,eASE,QAAC,WAAD;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEG,OAAO,CAACT,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAcE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAES,OAAO,CAACJ,8BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YArQF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmSD;;GArSuBG,qB;UACNzC,S;;;KADMyC,qB","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  makeStyles,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  Avatar,\n} from \"@material-ui/core\";\nimport acousticness from \"../icon/acousticness.png\";\nimport danceability from \"../icon/danceability.png\";\nimport instrumental from \"../icon/instrumental.png\";\nimport loudness2 from \"../icon/loudness2.png\";\nimport popularity from \"../icon/popularity.png\";\nimport tempo from \"../icon/tempo.png\";\nimport valence from \"../icon/valence.png\";\nimport liveness from \"../icon/liveness.png\";\nimport speechiness from \"../icon/speechiness.png\";\nimport energy from \"../icon/energy.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    padding: 10,\n    spacing: 10,\n    alignItems: \"center\",\n    direction: \"row\",\n  },\n  gridItem: {\n    backgroundColor: \"#FFB4A2\",\n    background: \"#000\",\n    color: \"#000\",\n  },\n  nav_title: {\n    padding: 10,\n    display: \"flex\",\n    flexDirection: \"row\",\n    placeItems: \"left\",\n    fontSize: \"1.5rem\",\n    fontFamily: \"Kiwi Maru\",\n  },\n  step_root: {\n    // align: \"center\",\n    padding: 10,\n    maxWidth: 1000,\n    marginBottom: 50,\n    backgroundColor: \"#ddbea9\",\n    borderRadius: 10,\n  },\n  step_header: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.55em\",\n    marginBottom: 10,\n    fontWeight: \"600\",\n  },\n  step_desc: {\n    color: \"black\",\n    textAlign: \"left\",\n    fontSize: \"1.1em\",\n    marginBottom: 20,\n  },\n  card: {\n    // backgroundColor: \"FFB4A2\",\n  },\n  card_content: {\n    // backgroundColor: \"#FFB4A2\",\n  },\n\n  track_attribute_card_1: {\n    width: \"275px\",\n    height: \"400px\",\n    marginBottom: 30,\n    borderRadius: 10,\n  },\n\n  track_attribute_font_title: {\n    color: \"#000\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\",\n  },\n  track_attribute_font_title_2: {\n    color: \"#fff\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.7em\",\n  },\n  track_attribute_font_type: {\n    color: \"#000\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.3em\",\n  },\n  track_attribute_font_type_2: {\n    color: \"#fff\",\n    fontFamily: \"Benne\",\n    fontWeight: 700,\n    fontSize: \"1.3em\",\n  },\n  track_attribute_font_content: {\n    marginTop: -5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    color: \"#18181F\",\n    fontFamily: \"Benne\",\n    fontWeight: 600,\n    fontSize: \"1.2em\",\n    textAlign: \"justify\",\n  },\n  track_attribute_font_content_2: {\n    marginTop: -5,\n    paddingLeft: 5,\n    paddingRight: 5,\n    color: \"#e6e4df\",\n    fontFamily: \"Benne\",\n    fontWeight: 600,\n    fontSize: \"1.13em\",\n    textAlign: \"justify\",\n    // lineSpacing: \"10\",\n  },\n  track_attribute_image: {\n    margin: 10,\n    width: theme.spacing(9),\n    height: theme.spacing(9),\n  },\n}));\n\nexport default function BookOfTrackAttributes() {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      spacing={1}\n      style={\n        {\n          // paddingLeft: 45,\n        }\n      }\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid item xs={12} sm={4}>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#BDBAD5\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title}>\n              acousticness\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={acousticness}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type}>\n                type: context\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content}>\n              tracks with <i>higher</i> acousticness indicate tracks with{\" \"}\n              <i>more</i> featurings of guitars, pianos, drumsets, etc. whereas,{\" \"}\n              <i>lower</i> acousticness indicate tracks with\n              <i> more</i> featurings of electronic or synthesized elements.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#124E78\", color: \"#fff\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title_2}>\n              danceability\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={danceability}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type_2}>\n                type: mood\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content_2}>\n              an overall measurement of a track's suitability for dancing based\n              on musical elements including tempo, rhythm, beat strength, and\n              more.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#F49D6E\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title}>\n              energy\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={energy}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type}>\n                type: mood\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content}>\n              an overall measurement of a track's intensity & activity.{\" \"}\n              <i>higher</i> energy will restrict results to fast, loud, and\n              noisy songs. psst: heavy metal = higher energy & mozart = lower\n              energy\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#F2CD5D\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title}>\n              instrumentalness\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={instrumental}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type}>\n                type: properties\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content}>\n              predicts whether a track contains vocals. rap songs are more\n              vocal, whereas lofi study music are less vocal. the higher the\n              value, the more likely the track contains NO vocal content.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#C0D6DF\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title}>\n              liveness\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={liveness}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type}>\n                type: context\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content}>\n              liveness detects the presence of an audience in the recording.{\" \"}\n              <i>higher</i> liveness will lead you to more tracks that were\n              probably performed live. increase this value if you want to find\n              tracks that are maybe from an artist's concert.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#FFA69E\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title}>\n              loudness\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={loudness2}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type}>\n                type: properties\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content}>\n              loudness represents an overall measurement of the decibels (dB)\n              throughout a track. setting a <i>higher</i> loudness will lead you\n              to songs that are more fun to blast on the speakers!\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#BB342F\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title_2}>\n              popularity\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={popularity}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type_2}>\n                type: other\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content_2}>\n              popularity provides a measure of - well - how popular you want the\n              tracks in your results to be. set it <i>lower</i> if you want to\n              discover more low-key songs, and set it <i>higher</i> if you want\n              to continue jamming out to tracks just as popular as Despacito or\n              Gangnam Style.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#758E4F\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title_2}>\n              speechiness\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={speechiness}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type_2}>\n                type: properties\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content_2}>\n              kind of similar to instrumental, but inverse. setting speechiness\n              to a <i>higher</i> value will lead you to songs that have a{\" \"}\n              <i>higher</i> amount of spoken words. psst: setting this high will\n              get you songs like Rap God by Eminem.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#AA4465\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title_2}>\n              tempo\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={tempo}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type_2}>\n                type: mood\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content_2}>\n              tempo means beats per minute! setting a tempo range = beats per\n              minute range. setting minimum tempo to 140 restricts results to\n              only those tracks with a tempo of greater than 140 bpm.\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n      <Grid item>\n        <Card\n          className={classes.track_attribute_card_1}\n          style={{ backgroundColor: \"#462255\" }}\n        >\n          <CardContent>\n            <Typography className={classes.track_attribute_font_title_2}>\n              valence\n            </Typography>\n            <Avatar\n              variant=\"square\"\n              src={valence}\n              className={classes.track_attribute_image}\n            ></Avatar>\n            <CardContent>\n              <Typography className={classes.track_attribute_font_type_2}>\n                type: mood\n              </Typography>\n            </CardContent>\n            <Typography className={classes.track_attribute_font_content_2}>\n              valence will control how happy a song sounds! tracks with higher\n              valence sounds more happy & positive. tracks with lower valence\n              sounds more negative (sad, angry, etc.)\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}